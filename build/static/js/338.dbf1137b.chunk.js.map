{"version":3,"file":"static/js/338.dbf1137b.chunk.js","mappings":"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","sources":["components/Table/TableControls.jsx","components/common/StatusIndicator.jsx","layouts/Payment/Transactions.jsx","redux/actions/PaymentActions.js"],"sourcesContent":["import React from \"react\";\n\nimport { IoIosArrowBack, IoIosArrowForward } from \"react-icons/io\";\n\nconst TableActions = ({\n  nextHandler,\n  prevHandler,\n  limitHandler,\n  page,\n  totalRecords = 0,\n  limit = 1,\n  showLimit = true,\n  hideOnMobile = false\n}) => {\n  const totalPages = Math.ceil(totalRecords / limit);\n  return (\n    <div className={`flex justify-end table-controls ${hideOnMobile ? 'hide-on-mobile' : ''} `}>\n      {!showLimit || showLimit === \"false\" || showLimit === false ? null : (\n        <div className=\"filter-input mr-5\">\n          <label>Rows per page: </label>\n          <select onChange={limitHandler}>\n            <option value=\"15\">15</option>\n            <option value=\"25\">25</option>\n            <option value=\"50\">50</option>\n            <option value=\"100\">100</option>\n          </select>\n        </div>\n      )}\n\n      <div className=\"flex text-green-500\">\n        <p className=\"px-4\">\n          Viewing {((page - 1) * limit) + 1} -{\" \"}\n          {limit * page > totalRecords ? totalRecords : limit * page} of{\" \"}\n          {totalRecords}\n        </p>\n        <button disabled={page <= 1} onClick={prevHandler}>\n          <IoIosArrowBack />\n        </button>\n        <button disabled={page >= totalPages} onClick={nextHandler}>\n          <IoIosArrowForward />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default TableActions;\n","import React from \"react\";\n\nconst Status = (props) => {\n  const { value, type = \"pending\" } = props;\n\n  const wrapperStyle = {\n    boxSizing: \"border-box\",\n    width: \"auto\",\n    height: \"26px\",\n    padding: \"8px\",\n    borderRadius: \"13px\",\n    borderWidth: \"0.6px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  };\n\n  const textStyle = {\n    fontSize: \"12px\",\n    fontWeight: 600,\n    display: \"block\",\n  };\n\n  switch (type) {\n    case \"success\":\n      wrapperStyle.backgroundColor = \"#F6FFED\";\n      wrapperStyle.borderColor = \"#B7EB8F\";\n      textStyle.color = \"#52C41A\";\n      break;\n\n    case \"pending\":\n      wrapperStyle.backgroundColor = \"#FFF7E6\";\n      wrapperStyle.borderColor = \"#FA8C16\";\n      textStyle.color = \"#FA8C16\";\n      break;\n\n    case \"error\":\n      wrapperStyle.backgroundColor = \"#FFF1F0\";\n      wrapperStyle.borderColor = \"#F5222D\";\n      textStyle.color = \"#F5222D\";\n      break;\n\n    default:\n      wrapperStyle.backgroundColor = \"#FFF1F0\";\n      wrapperStyle.borderColor = \"#F5222D\";\n      textStyle.color = \"#F5222D\";\n      break;\n  }\n  return (\n    <div style={wrapperStyle}>\n      <span style={textStyle}>{value}</span>\n    </div>\n  );\n};\n\nexport default Status;\n\n// \"#FFF1F0\"\n// borderColor\n// \"#F5222D\"\n","import React, { useMemo, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\n\nimport { AiOutlineEye as ViewIcon } from \"react-icons/ai\";\n\nimport Table from \"../../components/Table/UserTable\";\nimport Spinner from \"../../components/Spinner\";\nimport TableControls from \"../../components/Table/TableControls\";\nimport Button from \"../../components/common/Button\";\nimport Dialog from \"../../components/Modals/Dialog\";\nimport BreadCrumb from \"../../components/common/CustomBreadCrumbs\";\nimport StatusIndicator from \"../../components/common/StatusIndicator\";\nimport { TopUpWallet } from \"../Settings/ModalContents\";\n\nimport { getUserProfile } from \"../../redux/actions/AuthActions\";\nimport { getTransactions } from \"../../redux/actions/PaymentActions\";\nimport { useEffect } from \"react\";\nimport { Stack } from \"@mui/material\";\nimport moment from \"moment\";\n\nconst Transactions = () => {\n  const dispatch = useDispatch();\n  const [page, setPage] = useState(1);\n  const [limit, setLimit] = useState(10);\n  // const [query, setQuery] = useState(\"\");\n  const [openModal, setOpenModal] = useState(false);\n  // const user_profile = JSON.parse(sessionStorage.getItem(\"user_profile\"));\n  const userDetails = useSelector((state) => state.AuthReducer.userProfile);\n  const wallet_balance = userDetails && userDetails?.tenant?.wallet_balance;\n\n  const openHandler = () => {\n    setOpenModal(true);\n  };\n\n  const closehandler = () => {\n    setOpenModal(false);\n  };\n\n  // onChange function for select\n  const handleLimitChange = (e) => {\n    setLimit(parseInt(e.target.value));\n  };\n\n  const setPrev = () => {\n    if (page > 1) setPage(page - 1);\n  };\n\n  const setNext = () => {\n    setPage(page + 1);\n  };\n\n  const transactions = useSelector(\n    (state) => state.PaymentReducer.transactions || []\n  );\n  const isLoading = useSelector((state) => state.PaymentReducer.loading);\n  const totalRecords = useSelector((state) => state.PaymentReducer.total);\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"Name\",\n        accessor: \"name\",\n      },\n      {\n        Header: \"Type\",\n        accessor: \"type\",\n      },\n      {\n        Header: \"Amount\",\n        // accessor: \"amount\",\n        Cell: ({ value, row }) => {\n          const { original } = row;\n          // console.log(original);\n          return (\n            <span>\n              {parseFloat(original?.amount)\n                ? `N${parseFloat(original?.amount).toFixed(2)}`\n                : \"-\"}\n            </span>\n          );\n        },\n      },\n      {\n        Header: \"Reference\",\n        accessor: \"ref\",\n      },\n      {\n        Header: \"Status\",\n        Cell: ({ value, row }) => {\n          const { original } = row;\n          // console.log(original);\n          return (\n            <StatusIndicator\n              value={!original.mapped ? \"Not Approved\" : \"Approved\"}\n              type={!original.mapped ? \"error\" : \"success\"}\n            />\n          );\n        },\n      },\n      {\n        Header: \"Date\",\n        Cell: ({ value, row }) => {\n          const { original } = row;\n          // console.log(original);\n          return (\n            <Stack direction=\"column\" spacing={0.2}>\n              <span>{moment(original.created).format(\"MMMM DD, YYYY\")}</span>\n              {/* <Typography\n                variant=\"span\"\n                fontSize=\"12px\"\n                sx={{ color: (theme) => theme.palette.primary.main }}\n              >\n                {moment(original.created).format(\"HH:mm:ss\")}\n              </Typography> */}\n            </Stack>\n          );\n        },\n      },\n      {\n        Header: \"Actions\",\n        Cell: ({ value, row }) => {\n          // const { original } = row;\n          // console.log(original);\n          return (\n            <IconButton>\n              <ViewIcon />\n            </IconButton>\n          );\n        },\n      },\n    ],\n    []\n  );\n\n  const tableData = useMemo(() => transactions || [], [transactions]);\n\n  useEffect(() => {\n    dispatch(getUserProfile());\n    dispatch(getTransactions());\n  }, [dispatch]);\n\n  return (\n    <section>\n      <nav id=\"quick-nav\">\n        <BreadCrumb\n          breadcrumbs={[\n            <Typography key=\"1\" color=\"inherit\">\n              Payments\n            </Typography>,\n            <Typography key=\"2\" color=\"primary.main\">\n              Transactions\n            </Typography>,\n          ]}\n        />\n      </nav>\n\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        <div\n          style={{\n            width: \"350px\",\n            height: \"130px\",\n            backgroundColor: \"#009688\",\n            borderRadius: \"5px\",\n            marginTop: \"22px\",\n            marginBottom: \"28px\",\n          }}\n        >\n          <div style={{ paddingTop: 24, paddingBottom: 8, paddingLeft: 29 }}>\n            <span style={{ fontSize: \"18px\", fontWeight: 700, color: \"white\" }}>\n              Available Balance\n            </span>\n          </div>\n\n          <div style={{ paddingBottom: 40, paddingLeft: 29 }}>\n            <span style={{ fontSize: \"24px\", fontWeight: 800, color: \"white\" }}>\n              N {(wallet_balance || 0).toFixed(2)}\n            </span>\n          </div>\n        </div>\n        <div\n          style={{\n            marginLeft: \"auto\",\n            marginTop: \"88px\",\n            marginRight: \"36px\",\n          }}\n        >\n          <Button\n            value=\"Top Up Wallet\"\n            sx={{\n              width: \"140px\",\n              height: \"32px\",\n              backgroundColor: \"white\",\n              color: \"#009688\",\n              fontSize: \"14px\",\n              fontWeight: 600,\n            }}\n            onClick={openHandler}\n          />\n        </div>\n      </div>\n\n      <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\n        <h2 className=\"with-spinner\" style={{ fontSize: \"20px\" }}>\n          <span>All Payments</span>\n          {isLoading ? <Spinner size={20} color=\"primary\" /> : \"\"}\n        </h2>\n\n        <TableControls\n          showLimit=\"false\"\n          // hideOnMobile=\"true\"\n          nextHandler={() => setNext()}\n          prevHandler={() => setPrev()}\n          limitHandler={(e) => handleLimitChange(e)}\n          totalRecords={totalRecords}\n          page={page}\n          limit={limit}\n        />\n      </Stack>\n\n      <Table data={tableData} columns={columns} isLoading={isLoading} />\n      <TableControls\n        nextHandler={() => setNext()}\n        prevHandler={() => setPrev()}\n        limitHandler={(e) => handleLimitChange(e)}\n        totalRecords={totalRecords}\n        page={page}\n        limit={limit}\n      />\n      <Dialog open={openModal} closeHandler={closehandler}>\n        <TopUpWallet closeHandler={closehandler} />\n      </Dialog>\n    </section>\n  );\n};\n\nexport default Transactions;\n","import axiosServices from '../../services/axiosServices';\nimport { notify } from \"../../utils/toastNotification\";\nimport { createQuery } from \"../../utils/createQuery\";\nimport { errorHandler } from \"../../utils/actionsErrorHandler\";\n\nimport {\n  GET_TRANSACTIONS,\n  GET_TRANSACTIONS_FAIL,\n  GET_TRANSACTIONS_SUCCESS,\n  GET_LOAN_LIST_SUCCESS,\n  LOADING_LOAN_LIST,\n} from \"../types/PaymentTypes\";\n\n// export const addInput = (data) => async (dispatch) => {\n//   try {\n//     const response = await axiosServices.post(\"/input-types\", data);\n//     // console.log(response);\n\n//     if (response?.success) {\n//       notify(\"Input created\", { type: \"success\" });\n//     } else {\n//       notify(response.message || 'An error occured', { type: \"error\" });\n//     }\n//   } catch (error) {\n//     console.log(error);\n//     errorHandler(error, \"Failed to add input\");\n//     return error;\n//   }\n// }\n\nexport const getTransactions = (queryParams = {}) => async (dispatch) => {\n  try {\n    dispatch({\n      type: GET_TRANSACTIONS,\n    });\n    \n    const response = await axiosServices.get(`/transactions${createQuery(queryParams)}`);\n    // // console.log(cropProfiles);\n    const success = response.success;\n    const transactions = response.result?.transactions;\n\n    // console.log(transactions);\n    if (success && transactions) {\n      dispatch({\n        type: GET_TRANSACTIONS_SUCCESS,\n        payload: {\n          data: transactions.data,\n          total: transactions.total,\n        }\n      });\n    }\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: GET_TRANSACTIONS_FAIL\n    });\n    errorHandler(error);\n    return error;\n  }\n}\n\n// export const deleteInput = (data) => async (dispatch) => {\n//   try {\n//     const response = await axiosServices.delete(`/input-types/${data.id}`);\n//     // console.log(response);\n\n//     if (response?.success) {\n//       notify(\"Input deleted\", { type: \"success\" });\n//     } else {\n//       notify(response.message || 'An error occured', { type: \"error\" });\n//     }\n//   } catch (error) {\n//     console.log(error);\n//     errorHandler(error, \"Failed to delete input\");\n//     return error;\n//   }\n// }\n\nexport const getLoanList = () => async (dispatch) => {\n  dispatch({ type: LOADING_LOAN_LIST, payload: true });\n  console.log(\"page: \");\n  try {\n    const res = await axiosServices.get(`/payment/loan-list`);\n    dispatch({\n      type: GET_LOAN_LIST_SUCCESS,\n      payload: res?.result?.data,\n    });\n\n    console.log(\"first\", res.result.data);\n    // toast.success(\"User added successfully\");\n\n    dispatch({ type: LOADING_LOAN_LIST, payload: false });\n  } catch (error) {\n    console.log(error);\n    // dispatch({\n    //   type: ADD_USER_FAIL,\n    // });\n    console.log(\"error\", error);\n    dispatch({ type: LOADING_LOAN_LIST, payload: false });\n    notify(\"Something went wrong\", { type: \"error\" });\n    return error;\n  }\n};"],"names":["nextHandler","prevHandler","limitHandler","page","totalRecords","limit","showLimit","hideOnMobile","totalPages","Math","ceil","className","onChange","value","disabled","onClick","props","type","wrapperStyle","boxSizing","width","height","padding","borderRadius","borderWidth","display","justifyContent","alignItems","textStyle","fontSize","fontWeight","backgroundColor","borderColor","color","style","dispatch","useDispatch","useState","setPage","setLimit","openModal","setOpenModal","userDetails","useSelector","state","AuthReducer","userProfile","wallet_balance","tenant","closehandler","handleLimitChange","e","parseInt","target","setPrev","setNext","transactions","PaymentReducer","isLoading","loading","total","columns","useMemo","Header","accessor","Cell","original","row","parseFloat","amount","toFixed","StatusIndicator","mapped","Stack","direction","spacing","moment","created","format","IconButton","tableData","useEffect","getUserProfile","queryParams","GET_TRANSACTIONS","axiosServices","createQuery","response","success","result","GET_TRANSACTIONS_SUCCESS","payload","data","console","log","GET_TRANSACTIONS_FAIL","errorHandler","getTransactions","id","breadcrumbs","Typography","marginTop","marginBottom","paddingTop","paddingBottom","paddingLeft","marginLeft","marginRight","Button","sx","Spinner","size","TableControls","Dialog","open","closeHandler"],"sourceRoot":""}