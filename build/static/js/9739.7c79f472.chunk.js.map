{"version":3,"file":"static/js/9739.7c79f472.chunk.js","mappings":"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","sources":["layouts/FarmManagement/ViewCluster.jsx","../node_modules/@mui/material/Link/linkClasses.js","../node_modules/@mui/material/Link/getTextDecoration.js","../node_modules/@mui/material/Link/Link.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useCallback } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Stack from \"@mui/material/Stack\";\nimport Box from \"@mui/material/Box\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Link from \"@mui/material/Link\";\n\nimport { BiEditAlt as EditIcon } from \"react-icons/bi\";\nimport { AiOutlineEye as ViewIcon } from \"react-icons/ai\";\n\nimport Spinner from \"../../components/Spinner\";\nimport Table from \"../../components/Table/UserTable\";\nimport TableControls from \"../../components/Table/TableControls\";\nimport BreadCrumb from \"../../components/common/CustomBreadCrumbs\";\n\nimport {\n  AddSubCluster as AddSubClusterModalContent,\n  EditSubCluster as EditSubClusterModalContent,\n} from \"./ModalContents\";\nimport Dialog from \"../../components/Modals/Dialog\";\n\nimport { getSingleCluster } from \"../../redux/actions/FarmManagementActions\";\n\nconst { notify } = require(\"../../utils/toastNotification\");\n\nfunction ViewClusters() {\n  const params = useParams();\n  const navigate = useNavigate();\n\n  const [page, setPage] = useState(1);\n  const [limit, setLimit] = useState(0);\n  const [subclusters, setSubClusters] = useState([]);\n  const [cluster, setCluster] = useState({});\n  const [loading, setLoading] = useState(false);\n  \n  const [dialogContent, setDialogContent] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n\n  const handleModalClose = () => {\n    setShowModal(false);\n  };\n\n  const handleModalOpen = useCallback(\n    (modalId, data = null) =>\n      (e) => {\n        switch (modalId) {\n          case \"add-sub-cluster\":\n            // console.log(data);\n            setDialogContent(\n              <AddSubClusterModalContent closeHandler={handleModalClose} />\n            );\n            break;\n\n          case \"edit-sub-cluster\":\n            setDialogContent(\n              <EditSubClusterModalContent\n                closeHandler={handleModalClose}\n                data={data}\n              />\n            );\n            break;\n\n          default:\n            setDialogContent(null);\n            break;\n        }\n        setShowModal(true);\n      },\n    []\n  );\n\n  // onChange function for select\n  const handleLimitChange = (e) => {\n    setLimit(parseInt(e.target.value));\n  };\n\n  const setPrev = () => {\n    if (page > 1) setPage(page - 1);\n  };\n\n  const setNext = () => {\n    setPage(page + 1);\n  };\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"S/N\",\n        accessor: \"serial\",\n      },\n      {\n        Header: \"Name\",\n        accessor: \"name\",\n      },\n      {\n        Header: \"Description\",\n        accessor: \"description\",\n      },\n      {\n        Header: \"Agent\",\n        Cell: ({ value, row }) => {\n          const { original } = row;\n          const name = `${original?.agent?.first_name || \"\"} ${\n            original?.agent?.last_name || \"\"\n          }`.trim() || original.agent;\n          console.log(\"name\", name);\n          return (\n            <span>{name}</span>\n          );\n        },\n      },\n      {\n        Header: \"Sub-Cluster ID\",\n        accessor: \"sub_cluster_id\",\n      },\n      {\n        Header: \"Size\",\n        Cell: ({ value, row }) => {\n          const { original } = row;\n          return (\n            <span>\n              {!original.farms_sum_size ? \"-\" : `${original.farms_sum_size}`}\n            </span>\n          );\n        },\n      },\n      {\n        Header: \"View\",\n        Cell: ({ value, row }) => {\n          const { original } = row;\n          // console.log(original);\n          return (\n            <IconButton\n              onClick={() => {\n                navigate(`/farm-management/sub-clusters/${original.id}`);\n              }}\n            >\n              <ViewIcon />\n            </IconButton>\n          );\n        },\n      },\n      {\n        Header: \"Edit\",\n        Cell: ({ value, row }) => {\n          const { original } = row;\n          // console.log(original);\n          return (\n            <IconButton onClick={handleModalOpen(\"edit-sub-cluster\", original)}>\n              <EditIcon />\n            </IconButton>\n          );\n        },\n      },\n    ],\n    [handleModalOpen, navigate]\n  );\n\n  // const tableData = useMemo(() => [], []);\n  \n  const tableData = useMemo(() => (subclusters || []).map((each, index) => {\n    return {\n      ...each,\n      serial: index + page\n    }\n  }), [subclusters, page]);\n\n  // const dispatch = useDispatch();\n\n  useEffect(() => {\n    (async (clusterId) => {\n      console.log(\"loading cluster...\");\n      try {\n        setLoading(true);\n        const response = await getSingleCluster(clusterId);\n        if (response) {\n          setSubClusters(response.sub_clusters || []);\n          setCluster(response);\n        } else {\n          notify(\"Failed to get subclusters\", { type: \"error\" });\n        }\n      } catch (error) {\n        notify(error, { type: \"error\" });\n      } finally {\n        setLoading(false);\n      }\n    })(params.clusterId);\n  }, [params.clusterId]);\n\n  return (\n    <React.Fragment>\n      <section>\n        <nav id=\"quick-nav\">\n          <BreadCrumb\n            breadcrumbs={[\n              <Typography key=\"1\" color=\"inherit\">\n                Farm Management\n              </Typography>,\n              <Link\n                href=\"/farm-management/clusters\"\n                key=\"2\"\n                color=\"inherit\"\n              >\n                Farm Clusters\n              </Link>,\n              <Typography\n                key=\"3\"\n                color=\"primary.main\"\n              >\n                View Cluster\n              </Typography>,\n            ]}\n          />\n        </nav>\n\n        <Stack\n          direction=\"row\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n        >\n          <h2 className=\"with-spinner\" style={{ fontSize: \"20px\" }}>\n            <span>\n              {!cluster?.cluster_id\n                ? \"Sub Clusters\"\n                : `${cluster.cluster_id} Sub Clusters`}\n            </span>\n            {loading ? <Spinner size={20} color=\"primary\" /> : \"\"}\n          </h2>\n        </Stack>\n\n        <Box>\n          <Table columns={columns} data={tableData} isLoading={loading} />\n          <TableControls\n            nextHandler={() => setNext()}\n            prevHandler={() => setPrev()}\n            limitHandler={(e) => handleLimitChange(e)}\n            totalRecords={subclusters.length}\n            limit={limit || subclusters.length}\n            page={page}\n          />\n        </Box>\n      </section>\n      <Dialog open={showModal} closeHandler={handleModalClose}>\n        {dialogContent}\n      </Dialog>\n    </React.Fragment>\n  );\n}\n\nexport default ViewClusters;\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;","import { alpha, getPath } from '@mui/system';\nexport const colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\n\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\n\nconst getTextDecoration = ({\n  theme,\n  ownerState\n}) => {\n  const transformedColor = transformDeprecatedColors(ownerState.color);\n  const color = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);\n\n  if ('vars' in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n\n  return alpha(color, 0.4);\n};\n\nexport default getTextDecoration;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\", \"sx\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport getTextDecoration, { colorTransformations } from './getTextDecoration';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\n\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  return _extends({}, ownerState.underline === 'none' && {\n    textDecoration: 'none'\n  }, ownerState.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, ownerState.underline === 'always' && _extends({\n    textDecoration: 'underline'\n  }, ownerState.color !== 'inherit' && {\n    textDecorationColor: getTextDecoration({\n      theme,\n      ownerState\n    })\n  }, {\n    '&:hover': {\n      textDecorationColor: 'inherit'\n    }\n  }), ownerState.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    component = 'a',\n    onBlur,\n    onFocus,\n    TypographyClasses,\n    underline = 'always',\n    variant = 'inherit',\n    sx\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n\n  const handleBlur = event => {\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  const handleFocus = event => {\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    color: color,\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    ownerState: ownerState,\n    variant: variant,\n    sx: [...(!Object.keys(colorTransformations).includes(color) ? [{\n      color\n    }] : []), ...(Array.isArray(sx) ? sx : [sx])]\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .any,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * `classes` prop applied to the [`Typography`](/material-ui/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;"],"names":["notify","require","params","useParams","navigate","useNavigate","useState","page","setPage","limit","setLimit","subclusters","setSubClusters","cluster","setCluster","loading","setLoading","dialogContent","setDialogContent","showModal","setShowModal","handleModalClose","handleModalOpen","useCallback","modalId","data","e","closeHandler","columns","useMemo","Header","accessor","Cell","value","original","row","name","agent","first_name","last_name","trim","console","log","farms_sum_size","onClick","id","tableData","map","each","index","serial","useEffect","clusterId","getSingleCluster","response","sub_clusters","type","breadcrumbs","color","href","direction","justifyContent","alignItems","className","style","fontSize","cluster_id","size","isLoading","nextHandler","prevHandler","limitHandler","parseInt","target","handleLimitChange","totalRecords","length","open","getLinkUtilityClass","slot","generateUtilityClass","generateUtilityClasses","colorTransformations","primary","textPrimary","secondary","textSecondary","error","theme","ownerState","transformedColor","transformDeprecatedColors","getPath","channelColor","alpha","_excluded","LinkRoot","styled","Typography","overridesResolver","props","styles","root","capitalize","underline","component","button","_extends","textDecoration","textDecorationColor","getTextDecoration","position","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","padding","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","linkClasses","React","inProps","ref","useThemeProps","onBlur","onFocus","TypographyClasses","variant","sx","other","_objectWithoutPropertiesLoose","useIsFocusVisible","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","focusVisible","setFocusVisible","handlerRef","useForkRef","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","event","current","Object","keys","includes","Array","isArray"],"sourceRoot":""}