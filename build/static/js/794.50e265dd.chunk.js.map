{"version":3,"file":"static/js/794.50e265dd.chunk.js","mappings":"wIA8CA,IA1CqB,SAAC,GASf,IARLA,EAQI,EARJA,YACAC,EAOI,EAPJA,YACAC,EAMI,EANJA,aACAC,EAKI,EALJA,KAKI,IAJJC,aAAAA,OAII,MAJW,EAIX,MAHJC,MAAAA,OAGI,MAHI,EAGJ,MAFJC,UAAAA,OAEI,aADJC,aAAAA,OACI,SACEC,EAAaC,KAAKC,KAAKN,EAAeC,GAC5C,OACE,iBAAKM,UAAS,0CAAqCJ,EAAe,iBAAmB,GAAvE,KAAd,UACID,GAA2B,UAAdA,IAAuC,IAAdA,GACtC,iBAAKK,UAAU,oBAAf,WACE,gDACA,oBAAQC,SAAUV,EAAlB,WACE,mBAAQW,MAAM,KAAd,iBACA,mBAAQA,MAAM,KAAd,iBACA,mBAAQA,MAAM,KAAd,iBACA,mBAAQA,MAAM,MAAd,uBAPwD,MAY9D,iBAAKF,UAAU,sBAAf,WACE,eAAGA,UAAU,OAAb,sBACaR,EAAO,GAAKE,EAAS,EADlC,KACuC,IACpCA,EAAQF,EAAOC,EAAeA,EAAeC,EAAQF,EAFxD,MAEiE,IAC9DC,MAEH,mBAAQU,SAAUX,GAAQ,EAAGY,QAASd,EAAtC,UACE,SAAC,MAAD,OAEF,mBAAQa,SAAUX,GAAQK,EAAYO,QAASf,EAA/C,UACE,SAAC,MAAD,WAKT,C,+KCwED,EApGkB,WAChB,OACE,SAAC,WAAD,WACE,gCACE,gBAAKgB,GAAG,YAAR,UACE,SAAC,IAAD,CACEC,YAAa,EACX,SAACC,EAAA,EAAD,CAAoBC,MAAM,UAA1B,qBAAgB,MAGhB,SAACD,EAAA,EAAD,CAAoBC,MAAM,eAA1B,sBAAgB,WAOtB,UAACC,EAAA,EAAD,CAAKT,UAAU,mBAAf,WACE,sCACA,UAACS,EAAA,EAAD,CACET,UAAU,4BACVU,GAAI,CACFC,SAAU,CAAEC,GAAI,OAAQC,GAAI,WAHhC,WAME,UAACJ,EAAA,EAAD,CAAKT,UAAU,kCAAf,WACE,kBACEc,KAAK,WACLC,YAAY,8CAEd,UAACN,EAAA,EAAD,CAAKT,UAAU,UAAf,WACE,SAACgB,EAAA,EAAD,CACEd,MAAM,qBACNQ,GAAI,CACFO,MAAO,QACPC,OAAQ,OACRC,SAAU,OACVC,WAAY,QAIhB,SAACJ,EAAA,EAAD,CACEd,MAAM,aACNQ,GAAI,CACFO,MAAO,QACPC,OAAQ,OACRC,SAAU,OACVC,WAAY,cAKpB,SAACJ,EAAA,EAAD,CACEd,MAAM,mBACNQ,GAAI,CACFO,MAAO,QACPC,OAAQ,OACRC,SAAU,OACVC,WAAY,WAKlB,yCACA,UAACX,EAAA,EAAD,CAAKT,UAAU,WAAf,WACE,UAACS,EAAA,EAAD,CAAKT,UAAU,YAAf,WACE,kDACA,kBAAOc,KAAK,WAAWC,YAAY,SAErC,UAACN,EAAA,EAAD,CAAKT,UAAU,UAAf,WACE,SAACgB,EAAA,EAAD,CACEd,MAAM,kBACNQ,GAAI,CACFO,MAAO,QACPC,OAAQ,OACRC,SAAU,OACVC,WAAY,QAIhB,SAACJ,EAAA,EAAD,CACEd,MAAM,OACNQ,GAAI,CACFO,MAAO,QACPC,OAAQ,OACRC,SAAU,OACVC,WAAY,oBAY7B,C","sources":["components/Table/TableControls.jsx","layouts/Settings/Developer.jsx"],"sourcesContent":["import React from \"react\";\n\nimport { IoIosArrowBack, IoIosArrowForward } from \"react-icons/io\";\n\nconst TableActions = ({\n  nextHandler,\n  prevHandler,\n  limitHandler,\n  page,\n  totalRecords = 0,\n  limit = 1,\n  showLimit = true,\n  hideOnMobile = false\n}) => {\n  const totalPages = Math.ceil(totalRecords / limit);\n  return (\n    <div className={`flex justify-end table-controls ${hideOnMobile ? 'hide-on-mobile' : ''} `}>\n      {!showLimit || showLimit === \"false\" || showLimit === false ? null : (\n        <div className=\"filter-input mr-5\">\n          <label>Rows per page: </label>\n          <select onChange={limitHandler}>\n            <option value=\"15\">15</option>\n            <option value=\"25\">25</option>\n            <option value=\"50\">50</option>\n            <option value=\"100\">100</option>\n          </select>\n        </div>\n      )}\n\n      <div className=\"flex text-green-500\">\n        <p className=\"px-4\">\n          Viewing {((page - 1) * limit) + 1} -{\" \"}\n          {limit * page > totalRecords ? totalRecords : limit * page} of{\" \"}\n          {totalRecords}\n        </p>\n        <button disabled={page <= 1} onClick={prevHandler}>\n          <IoIosArrowBack />\n        </button>\n        <button disabled={page >= totalPages} onClick={nextHandler}>\n          <IoIosArrowForward />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default TableActions;\n","import React, { useState, useMemo } from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Stack from \"@mui/material/Stack\";\nimport Box from \"@mui/material/Box\";\nimport IconButton from \"@mui/material/IconButton\";\n\nimport { RiDeleteBinLine as DeleteIcon } from \"react-icons/ri\";\nimport Table from \"../../components/Table/UserTable\";\nimport TableControls from \"../../components/Table/TableControls\";\nimport Spinner from \"../../components/Spinner\";\nimport Button from \"../../components/common/Button\";\nimport Dialog from \"../../components/Modals/Dialog\";\nimport BreadCrumb from \"../../components/common/CustomBreadCrumbs\";\nimport { RechargeSms } from \"./ModalContents\";\nimport \"./styles.scss\";\n\nconst Developer = () => {\n  return (\n    <React.Fragment>\n      <section>\n        <nav id='quick-nav'>\n          <BreadCrumb\n            breadcrumbs={[\n              <Typography key='1' color='inherit'>\n                Settings\n              </Typography>,\n              <Typography key='2' color='primary.main'>\n                Developer\n              </Typography>,\n            ]}\n          />\n        </nav>\n\n        <Box className='section__wrapper'>\n          <h2>API Keys</h2>\n          <Box\n            className='section__wrapper__content'\n            sx={{\n              flexWrap: { xs: \"wrap\", md: \"nowrap\" },\n            }}\n          >\n            <Box className='section__wrapper__content__item'>\n              <input\n                type='password'\n                placeholder='****************************************'\n              />\n              <Box className='cta-btn'>\n                <Button\n                  value='Generate a new key'\n                  sx={{\n                    width: \"200px\",\n                    height: \"39px\",\n                    fontSize: \"14px\",\n                    fontWeight: 600,\n                  }}\n                />\n\n                <Button\n                  value='Delete Key'\n                  sx={{\n                    width: \"200px\",\n                    height: \"39px\",\n                    fontSize: \"14px\",\n                    fontWeight: 600,\n                  }}\n                />\n              </Box>\n            </Box>\n            <Button\n              value='Add New Schedule'\n              sx={{\n                width: \"200px\",\n                height: \"39px\",\n                fontSize: \"14px\",\n                fontWeight: 600,\n              }}\n            />\n          </Box>\n\n          <h2>Webhook URL</h2>\n          <Box className='section2'>\n            <Box className='form-wrap'>\n              <label>Enter Webhook URL</label>\n              <input type='password' placeholder='' />\n            </Box>\n            <Box className='cta-btn'>\n              <Button\n                value='Test Connection'\n                sx={{\n                  width: \"200px\",\n                  height: \"39px\",\n                  fontSize: \"14px\",\n                  fontWeight: 600,\n                }}\n              />\n\n              <Button\n                value='Save'\n                sx={{\n                  width: \"200px\",\n                  height: \"39px\",\n                  fontSize: \"14px\",\n                  fontWeight: 600,\n                }}\n              />\n            </Box>\n          </Box>\n        </Box>\n      </section>\n      {/* <Dialog open={openModal} closeHandler={closehandler}>\n        <RechargeSms closeHandler={closehandler} />\n      </Dialog> */}\n    </React.Fragment>\n  );\n};\n\nexport default Developer;\n"],"names":["nextHandler","prevHandler","limitHandler","page","totalRecords","limit","showLimit","hideOnMobile","totalPages","Math","ceil","className","onChange","value","disabled","onClick","id","breadcrumbs","Typography","color","Box","sx","flexWrap","xs","md","type","placeholder","Button","width","height","fontSize","fontWeight"],"sourceRoot":""}