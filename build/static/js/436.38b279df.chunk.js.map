{"version":3,"file":"static/js/436.38b279df.chunk.js","mappings":"+QA8GA,EAhGc,WACZ,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,YAAYH,SAA7B,IAExBI,EAAmBC,EAAAA,GAAW,CAClCC,MAAOC,EAAAA,EAAAA,MAAkB,SAASC,SAAS,qBAC3CC,SAAUF,EAAAA,EAAAA,SAAqB,WAAY,EAAG,IAAIC,SAAS,0BAG7D,OACE,gBAAKE,UAAU,gBAAf,UACE,gBAAKA,UAAU,gEAAf,UACE,SAAC,KAAD,CACEC,cAAe,CAAEL,MAAO,GAAIG,SAAU,IACtCG,iBAAkBR,EAClBS,SAAQ,yCAAE,WAAOC,EAAP,iFAAiBC,cACnBC,EAAO,CACXV,MAAOQ,EAAOR,MACdG,SAAUK,EAAOL,SACjBQ,OAAQ,OAEVrB,GAASsB,EAAAA,EAAAA,IAAMF,EAAMlB,IANb,2CAAF,wDAHV,SAYG,gBACCgB,EADD,EACCA,OACAK,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aAND,EAOCC,aAPD,EAQCC,QARD,EASCC,MATD,OAWC,kBAAMb,SAAUU,EAAhB,WACE,gBAAKI,IAAKC,EAAMC,IAAI,YAAYC,MAAO,CAACC,OAAQ,gBAAiBC,QAAS,YAC1E,iBAAKtB,UAAU,eAAf,WACE,cAAGA,UAAU,8CAAb,sBAGA,iBAAKA,UAAU,qBAAf,WACE,kBACEuB,KAAK,OACLC,KAAK,QACLC,SAAUd,EACVe,OAAQd,EACRe,MAAOvB,EAAOR,MACdgC,YAAY,yBACZ5B,UACES,EAAOb,OAASc,EAAQd,MAAQ,cAAgB,OAGnDa,EAAOb,OAASc,EAAQd,QACvB,iBAAMI,UAAU,QAAhB,SAAyBS,EAAOb,YAGpC,iBAAKI,UAAU,oCAAf,WACE,kBACEuB,KAAK,WACLC,KAAK,WACLC,SAAUd,EACVe,OAAQd,EACRe,MAAOvB,EAAOL,SACd6B,YAAY,iBACZ5B,UACES,EAAOV,UAAYW,EAAQX,SAAW,cAAgB,OAGzDU,EAAOV,UAAYW,EAAQX,WAC1B,iBAAMC,UAAU,QAAhB,SAAyBS,EAAOV,eAIpC,gBAAKC,UAAU,YAAf,UACE,mBAAQuB,KAAK,SAAb,SACGjC,GACC,SAACuC,EAAA,EAAD,CAASC,KAAM,GAAIC,MAAM,cAEzB,aAIN,gBAAK/B,UAAU,OAAf,UACE,cAAGgC,KAAK,KAAR,qCA5DP,OAqEV,C,oEC1GYnC,EAAc,CACzB2B,KAAM,SAACS,GAAD,OACJtC,EAAAA,KAAauC,IACX,EACAD,EAAS,UACFA,EADE,iCAEL,+BALF,EAONE,OAAQ,SAACF,GAAD,IAAYC,EAAZ,wDAAmB,KAAME,EAAzB,uDAA+B,KAA/B,OACNzC,EAAAA,KACGuC,IACCA,EACAD,EAAS,UACFA,EADE,iCACgCC,GADhC,+BAEmBA,IAE7BE,IACCA,EACAH,EAAS,UACFA,EADE,8BAC6BG,GAD7B,4BAEgBA,GAZvB,EAcRxC,MAAO,SAACqC,GAAD,OAAetC,EAAAA,KAAaC,OAA5B,EACPG,SAAU,SAACkC,GAAD,IAAYC,EAAZ,uDAAkB,EAAGE,EAArB,uDAA2B,GAA3B,OACRzC,EAAAA,KACGuC,IACCA,EACAD,EAAS,UACFA,EADE,oBACmBC,EADnB,uBAEL,gCAELE,IAAIA,EAAKH,EAAS,UAAMA,EAAN,gBAAgC,WAR7C,EASVI,KAAM,SAACJ,GAAD,OACJtC,EAAAA,KAAa2C,QACX,oFAFE,EAINC,OAAQ,SAACN,GAAD,OAAetC,EAAAA,KAAa2C,QAAQ,aAAc,iBAAlD,EACRE,IAAK,SAACP,GAAD,OACHtC,EAAAA,KACG2C,QAAQ,UAAW,eACnBG,OAAO,GAAI,6BAHX,EAILC,MAAO,kBAAM/C,EAAAA,IAAN,E","sources":["pages/Login.jsx","utils/validations.js"],"sourcesContent":["import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Formik } from \"formik\";\nimport * as Yup from 'yup';\n\nimport { login } from \"../redux/actions/AuthActions\";\n\nimport Spinner from \"../components/Spinner\";\n\nimport logo from \"../assets/trade_buza_logo.png\";\nimport \"./Login.scss\";\nimport { validations } from \"../utils/validations\";\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const isLoading = useSelector((state) => state.AuthReducer.isLoading);\n\n  const schemaValidation = Yup.object({\n    email: validations.email(\"Email\").required(\"Email is required\"),\n    password: validations.password(\"Password\", 8, 24).required(\"Password is required\")\n  });\n\n  return (\n    <div className=\"flex flex-row\">\n      <div className=\"md:w-3/5 w-full mx-auto h-screen flex flex-col justify-center\">\n        <Formik\n          initialValues={{ email: \"\", password: \"\" }}\n          validationSchema={schemaValidation}\n          onSubmit={async (values, { setSubmitting }) => {\n            const body = {\n              email: values.email,\n              password: values.password,\n              source: 'web'\n            };\n            dispatch(login(body, navigate));\n          }}\n        >\n          {({\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting,\n            isValid,\n            dirty,\n          }) => (\n            <form onSubmit={handleSubmit}>\n              <img src={logo} alt=\"tradebuza\" style={{margin: \"0 auto 1.8rem\", display: \"block\"}}/>\n              <div className=\"form_wrapper\">\n                <p className=\"text-xl text-gray-500 font-bold text-center\">\n                  Sign In\n                </p>\n                <div className=\"form_input_wrapper\">\n                  <input\n                    type=\"text\"\n                    name=\"email\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.email}\n                    placeholder=\"Enter email address...\"\n                    className={\n                      errors.email && touched.email ? \"input-error\" : null\n                    }\n                  />\n                  {errors.email && touched.email && (\n                    <span className=\"error\">{errors.email}</span>\n                  )}\n                </div>\n                <div className=\"form_input_wrapper password-input\">\n                  <input\n                    type=\"password\"\n                    name=\"password\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.password}\n                    placeholder=\"Enter password\"\n                    className={\n                      errors.password && touched.password ? \"input-error\" : null\n                    }\n                  />\n                  {errors.password && touched.password && (\n                    <span className=\"error\">{errors.password}</span>\n                  )}\n                </div>\n\n                <div className=\"login-btn\">\n                  <button type=\"submit\">\n                    {isLoading ? (\n                      <Spinner size={20} color=\"secondary\" />\n                    ) : (\n                      \"LOGIN\"\n                    )}\n                  </button>\n                </div>\n                <div className=\"mt-4\">\n                  <a href=\"#e\" >Forgot Password?</a>\n                </div>\n              </div>\n            </form>\n          )}\n        </Formik>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import * as Yup from \"yup\";\n\nexport const validations = {\n  name: (paramName) =>\n    Yup.string().min(\n      3,\n      paramName\n        ? `${paramName} must be 3 or more characters`\n        : \"Must be 3 or more characters\"\n    ),\n  number: (paramName, min = -1e20, max = 1e20) =>\n    Yup.number()\n      .min(\n        min,\n        paramName\n          ? `${paramName} must be greater than ${min}`\n          : `Must be greater than ${min}`\n      )\n      .max(\n        max,\n        paramName\n          ? `${paramName} must be less than ${max}`\n          : `Must be less than ${max}`\n      ),\n  email: (paramName) => Yup.string().email(),\n  password: (paramName, min = 8, max = 24) =>\n    Yup.string()\n      .min(\n        min,\n        paramName\n          ? `${paramName} must be ${min} or more characters`\n          : \"Must be 8 or more characters\"\n      )\n      .max(max, paramName ? `${paramName} is too long` : \"Too long\"),\n  date: (paramName) =>\n    Yup.string().matches(\n      /(\\d{4}(-|\\/|\\\\)\\d{1,2}(-|\\/|\\\\)\\d{1,2})|(\\d{1,2}(-|\\/|\\\\)\\d{1,2}(-|\\/|\\\\)\\d{4})/gi\n    ),\n  mobile: (paramName) => Yup.string().matches(/[0-9)(+]/gi, \"Invalid number\"),\n  bvn: (paramName) =>\n    Yup.string()\n      .matches(/\\d{11}/g, \"Invalid BVN\")\n      .length(11, \"BVN must be 11 digits long\"),\n  blank: () => Yup.string(),\n};\n"],"names":["dispatch","useDispatch","navigate","useNavigate","isLoading","useSelector","state","AuthReducer","schemaValidation","Yup","email","validations","required","password","className","initialValues","validationSchema","onSubmit","values","setSubmitting","body","source","login","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","isValid","dirty","src","logo","alt","style","margin","display","type","name","onChange","onBlur","value","placeholder","Spinner","size","color","href","paramName","min","number","max","date","matches","mobile","bvn","length","blank"],"sourceRoot":""}