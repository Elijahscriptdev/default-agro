{"version":3,"file":"static/js/2850.162b24c8.chunk.js","mappings":"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","sources":["components/Modals/globals.js","components/Table/TableControls.jsx","components/common/StatusIndicator.jsx","../node_modules/@mui/system/esm/Box/Box.js","layouts/Payment/Disbursment.jsx","layouts/Payment/ModalContents/index.js","../node_modules/@mui/material/DialogActions/dialogActionsClasses.js","../node_modules/@mui/material/DialogActions/DialogActions.js"],"sourcesContent":["export const textFieldStyles = {\n  borderRadius: \"5px\",\n  backgroundColor: \"#F3F3F4\",\n  width: { md: \"477.61px\", xs: \"100%\" },\n  \"& fieldset\": {\n    border: \"none\"\n  }\n};\n\nexport const dialogContentStyles = {\n  minWidth: { xs: \"320px\", md: \"initial\" }\n};\n\nexport const dialogContentStyles2 = {\n  minWidth: { xs: \"520px\", md: \"initial\" }\n};","import React from \"react\";\n\nimport { IoIosArrowBack, IoIosArrowForward } from \"react-icons/io\";\n\nconst TableActions = ({\n  nextHandler,\n  prevHandler,\n  limitHandler,\n  page,\n  totalRecords = 0,\n  limit = 1,\n  showLimit = true,\n  hideOnMobile = false\n}) => {\n  const totalPages = Math.ceil(totalRecords / limit);\n  return (\n    <div className={`flex justify-end table-controls ${hideOnMobile ? 'hide-on-mobile' : ''} `}>\n      {!showLimit || showLimit === \"false\" || showLimit === false ? null : (\n        <div className=\"filter-input mr-5\">\n          <label>Rows per page: </label>\n          <select onChange={limitHandler}>\n            <option value=\"15\">15</option>\n            <option value=\"25\">25</option>\n            <option value=\"50\">50</option>\n            <option value=\"100\">100</option>\n          </select>\n        </div>\n      )}\n\n      <div className=\"flex text-green-500\">\n        <p className=\"px-4\">\n          Viewing {((page - 1) * limit) + 1} -{\" \"}\n          {limit * page > totalRecords ? totalRecords : limit * page} of{\" \"}\n          {totalRecords}\n        </p>\n        <button disabled={page <= 1} onClick={prevHandler}>\n          <IoIosArrowBack />\n        </button>\n        <button disabled={page >= totalPages} onClick={nextHandler}>\n          <IoIosArrowForward />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default TableActions;\n","import React from \"react\";\n\nconst Status = (props) => {\n  const { value, type = \"pending\" } = props;\n\n  const wrapperStyle = {\n    boxSizing: \"border-box\",\n    width: \"auto\",\n    height: \"26px\",\n    padding: \"8px\",\n    borderRadius: \"13px\",\n    borderWidth: \"0.6px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  };\n\n  const textStyle = {\n    fontSize: \"12px\",\n    fontWeight: 600,\n    display: \"block\",\n  };\n\n  switch (type) {\n    case \"success\":\n      wrapperStyle.backgroundColor = \"#F6FFED\";\n      wrapperStyle.borderColor = \"#B7EB8F\";\n      textStyle.color = \"#52C41A\";\n      break;\n\n    case \"pending\":\n      wrapperStyle.backgroundColor = \"#FFF7E6\";\n      wrapperStyle.borderColor = \"#FA8C16\";\n      textStyle.color = \"#FA8C16\";\n      break;\n\n    case \"error\":\n      wrapperStyle.backgroundColor = \"#FFF1F0\";\n      wrapperStyle.borderColor = \"#F5222D\";\n      textStyle.color = \"#F5222D\";\n      break;\n\n    default:\n      wrapperStyle.backgroundColor = \"#FFF1F0\";\n      wrapperStyle.borderColor = \"#F5222D\";\n      textStyle.color = \"#F5222D\";\n      break;\n  }\n  return (\n    <div style={wrapperStyle}>\n      <span style={textStyle}>{value}</span>\n    </div>\n  );\n};\n\nexport default Status;\n\n// \"#FFF1F0\"\n// borderColor\n// \"#F5222D\"\n","import PropTypes from 'prop-types';\nimport createBox from '../createBox';\nconst Box = createBox();\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\n// import { useSelector } from \"react-redux\";\nimport Typography from \"@mui/material/Typography\";\n\nimport Table from \"../../components/Table/UserTable\";\nimport Spinner from \"../../components/Spinner\";\nimport TableControls from \"../../components/Table/TableControls\";\nimport BreadCrumb from \"../../components/common/CustomBreadCrumbs\";\nimport StatusIndicator from \"../../components/common/StatusIndicator\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport axiosServices from \"../../services/axiosServices\";\nimport { Box } from \"@mui/system\";\nimport { Stack } from \"@mui/material\";\nimport Button from \"../../components/common/Button\";\nimport Dialog from \"../../components/Modals/Dialog\";\nimport {\n  PendingPayments as PendingPaymentsModalContent,\n  CollectionSettings as CollectionSettingsModalContent,\n  // SendMoney as SendMoneyModalContent,\n} from \"./ModalContents\";\nimport moment from \"moment\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport { notify } from \"../../utils/toastNotification\";\nimport { getUserProfile } from \"../../redux/actions/AuthActions\";\n\nconst Disbursment = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [page, setPage] = useState(1);\n  const [limit, setLimit] = useState(10);\n  const [totalRecord, setTotalRecord] = useState(0);\n\n  const [dialogContent, setDialogContent] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n\n  const [individual, setIndividual] = useState(true);\n  const [bulk, setBulk] = useState(false);\n  // const [query, setQuery] = useState(\"\");\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const authenticatedUser = useSelector(\n    (state) => state.AuthReducer.userProfile\n  );\n\n  const wallet_balance = authenticatedUser && authenticatedUser?.tenant?.wallet_balance;\n\n  const handleModalClose = () => {\n    setShowModal(false);\n  };\n\n  const handleModalOpen = useCallback(\n    (modalId, data = null) =>\n      (e) => {\n        switch (modalId) {\n          case \"pending-payments\":\n            // console.log(data);\n            setDialogContent(\n              <PendingPaymentsModalContent closeHandler={handleModalClose} />\n            );\n            break;\n\n          case \"collection-settings\":\n            setDialogContent(\n              <CollectionSettingsModalContent closeHandler={handleModalClose} />\n            );\n            break;\n\n          default:\n            setDialogContent(null);\n            break;\n        }\n        setShowModal(true);\n      },\n    []\n  );\n\n  const getLoanList = useCallback(\n    async (tenantId) => {\n      setLoading(true);\n      const config = {\n        headers: {\n          \"tenant-id\": tenantId,\n        },\n      };\n      try {\n        const res = await axiosServices.get(\n          `/payment/loan-list?page=${page}&limit=${limit}`,\n          config\n        );\n\n        if (res.result) {\n          setData(res?.result[0]?.data);\n          setLimit(res?.result[0]?.per_page || 15);\n          setTotalRecord(res?.result[0]?.total || 0);\n          setLoading(false);\n        } else {\n          notify(\"Failed to get disbursements\", { type: \"error\" });\n        }\n        // console.log(\"res fes\", res?.result[0]?.data);\n      } catch (error) {\n        console.log(error);\n        setLoading(false);\n      }\n    },\n    [limit, page]\n  );\n\n  // console.log(\"data\", data, \"loading\", loading);\n\n  useEffect(() => {\n    dispatch(getUserProfile());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (authenticatedUser?.tenant_id) {\n      console.log(\"getting loan list\");\n      getLoanList(authenticatedUser?.tenant_id);\n    } else {\n      notify(\"Tenant ID missing\", { type: \"error\" });\n    }\n  }, [authenticatedUser?.tenant_id, getLoanList]);\n\n  // onChange function for select\n  const handleLimitChange = (e) => {\n    setLimit(parseInt(e.target.value));\n  };\n\n  const setPrev = () => {\n    if (page > 1) setPage(page - 1);\n  };\n\n  const setNext = () => {\n    setPage(page + 1);\n  };\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"Name\",\n        Cell: ({ value, row }) => {\n          const { original } = row;\n          // console.log(original);\n          return (\n            <span>\n              {(original?.farmer?.first_name || \"\") +\n                \" \" +\n                (original?.farmer?.last_name || \"\")}\n            </span>\n          );\n        },\n      },\n      {\n        Header: \"Type\",\n        accessor: \"type\",\n      },\n      {\n        Header: \"Amount\",\n        accessor: \"amount\",\n      },\n      {\n        Header: \"Reference\",\n        accessor: \"ref_code\",\n      },\n      {\n        Header: \"Status\",\n        Cell: ({ value, row }) => {\n          const { original } = row;\n          const selectIndicator = (data) => {\n            switch (true) {\n              case data.status === \"successful\":\n                return {\n                  value: data.status,\n                  type: \"success\",\n                };\n\n              case data.status === \"failed\":\n                return {\n                  value: data.status,\n                  type: \"error\",\n                };\n\n              case data.status === \"pending\":\n                return {\n                  value: data.status,\n                  type: \"pending\",\n                };\n\n              default:\n                return null;\n            }\n          };\n          // console.log(original);\n          const indicatorProps = selectIndicator(original);\n          return !indicatorProps ? (\n            <span>{original.status}</span>\n          ) : (\n            <StatusIndicator {...indicatorProps} />\n          );\n        },\n      },\n      {\n        Header: \"Date\",\n        Cell: ({ value, row }) => {\n          const { original } = row;\n          // console.log(original);\n          return (\n            <span>{moment(original.created_at).format(\"MMM, DD YYYY\")}</span>\n          );\n        },\n      },\n    ],\n    []\n  );\n\n  const tableData = useMemo(() => data, [data]);\n  return (\n    <div>\n      <nav id=\"quick-nav\">\n        <BreadCrumb\n          breadcrumbs={[\n            <Typography key=\"1\" color=\"inherit\">\n              Payments\n            </Typography>,\n            <Typography key=\"2\" color=\"primary.main\">\n              Disbursment\n            </Typography>,\n          ]}\n        />\n      </nav>\n\n      <Box>\n        <Stack\n          direction=\"row\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n          sx={{\n            flexWrap: {\n              xs: \"wrap\",\n              md: \"no-wrap\",\n            },\n          }}\n        >\n          <div\n            style={{\n              width: \"350px\",\n              height: \"130px\",\n              backgroundColor: \"#009688\",\n              borderRadius: \"5px\",\n              marginTop: \"22px\",\n              marginBottom: \"28px\",\n            }}\n          >\n            <div style={{ paddingTop: 24, paddingBottom: 8, paddingLeft: 29 }}>\n              <span\n                style={{ fontSize: \"18px\", fontWeight: 700, color: \"white\" }}\n              >\n                Available Balance\n              </span>\n            </div>\n\n            <div style={{ paddingBottom: 40, paddingLeft: 29 }}>\n              <span\n                style={{ fontSize: \"24px\", fontWeight: 800, color: \"white\" }}\n              >\n                N {(wallet_balance || 0).toFixed(2)}\n              </span>\n            </div>\n          </div>\n\n          <Stack direction=\"row\" spacing={2} sx={{ my: 2 }}>\n            <Button\n              value=\"Send Money\"\n              sx={{ marginRight: \"21px\" }}\n              onClick={() => navigate(\"/payment/send-money\")}\n            />\n            <Button\n              value=\"Download History\"\n              // onClick={handleModalOpen(\"collection-settings\")}\n            />\n          </Stack>\n        </Stack>\n      </Box>\n\n      <h2 className=\"with-spinner\" style={{ fontSize: \"20px\" }}>\n        <span>All Disbursments</span>\n        {loading ? <Spinner size={20} color=\"primary\" /> : \"\"}\n      </h2>\n\n      <Table data={tableData} columns={columns} isLoading={loading} />\n      <TableControls\n        nextHandler={() => setNext()}\n        prevHandler={() => setPrev()}\n        limitHandler={(e) => handleLimitChange(e)}\n        page={page}\n        limit={limit}\n        totalRecords={totalRecord}\n      />\n\n      <Dialog\n        open={showModal}\n        closeHandler={handleModalClose}\n        individual={individual}\n        bulk={bulk}\n      >\n        {dialogContent}\n      </Dialog>\n    </div>\n  );\n};\n\nexport default Disbursment;\n","import React from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport TextField from \"@mui/material/TextField\";\nimport Box from \"@mui/material/Box\";\nimport DialogActions from \"@mui/material/DialogActions\";\n\nimport Button from \"../../../components/common/Button\";\nimport DialogHeader from \"../../../components/Modals/DialogHeader\";\n\nimport {\n  dialogContentStyles,\n  dialogContentStyles2,\n} from \"../../../components/Modals/globals\";\n\nexport const PendingPayments = ({ closeHandler }) => {\n  return (\n    <Box sx={dialogContentStyles}>\n      <DialogHeader title={\"Pending Payments\"} closeHandler={closeHandler} />\n      <div>\n        <div style={{ marginBottom: \"26px\", marginTop: \"20px\" }}>\n          <span\n            style={{\n              fontSize: \"16px\",\n              fontWeight: 400,\n              color: \"#6C757D\",\n              marginRight: \"49px\",\n            }}\n          >\n            Name:\n          </span>\n          <span style={{ fontSize: \"16px\", fontWeight: 700, color: \"#6C757D\" }}>\n            Alatiwa Ajakaye\n          </span>\n        </div>\n\n        <div>\n          <span\n            style={{\n              fontSize: \"16px\",\n              fontWeight: 400,\n              color: \"#6C757D\",\n              marginRight: \"33.79px\",\n            }}\n          >\n            Amount:\n          </span>\n          <span style={{ fontSize: \"16px\", fontWeight: 700, color: \"#6C757D\" }}>\n            N10,000.00\n          </span>\n        </div>\n      </div>\n\n      <DialogActions sx={{ p: 0 }}>\n        <div className='buttons mt-8' style={{ width: \"100%\" }}>\n          <div>\n            <Button\n              value='cancel'\n              sx={{\n                backgroundColor: \"white\",\n                color: \"#6C757D\",\n              }}\n            />\n          </div>\n          <div>\n            <Button\n              value='Process Payments'\n              sx={{\n                color: \"white\",\n              }}\n            />\n          </div>\n        </div>\n      </DialogActions>\n    </Box>\n  );\n};\n\nexport const CollectionSettings = ({ closeHandler }) => {\n  const initialValues = {\n    newPrice: \"\",\n  };\n  return (\n    <Box sx={dialogContentStyles}>\n      <DialogHeader title={\"Collection Settings\"} closeHandler={closeHandler} />\n      <div>\n        <div\n          style={{\n            marginBottom: \"26px\",\n            marginTop: \"20px\",\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\",\n          }}\n        >\n          <span\n            style={{\n              fontSize: \"16px\",\n              fontWeight: 400,\n              color: \"#6C757D\",\n              marginRight: \"40px\",\n            }}\n          >\n            New price per Kg:\n          </span>\n\n          <div>\n            <Formik initialValues={initialValues}>\n              {() => (\n                <Form>\n                  <Field\n                    as={TextField}\n                    name='newPrice'\n                    sx={{\n                      width: \"206px\",\n                      backgroundColor: \"#F3F3F4\",\n                      borderRadius: \"5px\",\n                    }}\n                    inputProps={{ style: { height: \"14px\" } }}\n                  />\n                </Form>\n              )}\n            </Formik>\n          </div>\n        </div>\n\n        <div>\n          <span\n            style={{\n              fontSize: \"16px\",\n              fontWeight: 400,\n              color: \"#6C757D\",\n              marginRight: \"70px\",\n            }}\n          >\n            Current Rate:\n          </span>\n          <span style={{ fontSize: \"16px\", fontWeight: 700, color: \"#6C757D\" }}>\n            N10,000.00\n          </span>\n        </div>\n      </div>\n\n      <DialogActions sx={{ p: 0 }}>\n        <div className='buttons mt-8' style={{ width: \"100%\" }}>\n          <div>\n            <Button\n              value='cancel'\n              sx={{\n                // padding: \"10px 15px\",\n                backgroundColor: \"white\",\n                // fontSize: \"14px\",\n                // fontWeight: 600,\n                color: \"#6C757D\",\n                // borderRadius: \"5px\",\n                // marginRight: \"26px\",\n              }}\n            />\n          </div>\n          <div>\n            <Button\n              value='Submit'\n              sx={{\n                // padding: \"10px 15px\",\n                // backgroundColor: \"#009688\",\n                // fontSize: \"14px\",\n                // fontWeight: 600,\n                color: \"white\",\n                // borderRadius: \"5px\",\n              }}\n            />\n          </div>\n        </div>\n      </DialogActions>\n    </Box>\n  );\n};\n\n// const styles = (theme) => ({\n//   root: {\n//     display: \"flex\",\n//   },\n//   toolbar: {\n//     display: \"flex\",\n//     alignItems: \"center\",\n//     justifyContent: \"flex-end\",\n//     padding: \"0 8px\",\n//     ...theme.mixins.toolbar,\n//   },\n//   content: {\n//     flexGrow: 1,\n//     padding: theme.spacing.unit * 3,\n//   },\n//   button: {\n//     marginTop: theme.spacing.unit * 3,\n//     // marginBottom: theme.spacing.unit * 3,\n//     marginRight: 3,\n//     color: \"#fff\",\n//   },\n//   button1: {\n//     color: \"#000\",\n//   },\n//   button2: {\n//     color: \"#fff\",\n//     background: \"#009688\",\n//   },\n//   searchBar: {\n//     marginTop: theme.spacing.unit * 3,\n//     marginBottom: theme.spacing.unit * 3,\n//   },\n// });\n\nexport const SendMoney = ({ closeHandler, individual, bulk }) => {\n  // const initialValues = {\n  //   newPrice: \"\",\n  // };\n\n  return (\n    <Box sx={dialogContentStyles2}>\n      <DialogHeader title={\"Send Money\"} closeHandler={closeHandler} />\n      {/* <div>\n        <div\n          style={{\n            marginBottom: \"26px\",\n            marginTop: \"20px\",\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\",\n          }}\n        >\n          <span\n            style={{\n              fontSize: \"16px\",\n              fontWeight: 400,\n              color: \"#6C757D\",\n              marginRight: \"40px\",\n            }}\n          >\n            New price per Kg:\n          </span>\n\n          <div>\n            <Formik initialValues={initialValues}>\n              {() => (\n                <Form>\n                  <Field\n                    as={TextField}\n                    name='newPrice'\n                    sx={{\n                      width: \"206px\",\n                      backgroundColor: \"#F3F3F4\",\n                      borderRadius: \"5px\",\n                    }}\n                    inputProps={{ style: { height: \"14px\" } }}\n                  />\n                </Form>\n              )}\n            </Formik>\n          </div>\n        </div>\n\n        <div>\n          <span\n            style={{\n              fontSize: \"16px\",\n              fontWeight: 400,\n              color: \"#6C757D\",\n              marginRight: \"70px\",\n            }}\n          >\n            Current Rate:\n          </span>\n          <span style={{ fontSize: \"16px\", fontWeight: 700, color: \"#6C757D\" }}>\n            N10,000.00\n          </span>\n        </div>\n      </div> */}\n\n      <DialogActions sx={{ p: 0 }}>\n        {/* <div className='buttons mt-8' style={{ width: \"100%\" }}>\n          <div>\n            <Button\n              value='cancel'\n              sx={{\n                // padding: \"10px 15px\",\n                backgroundColor: \"white\",\n                // fontSize: \"14px\",\n                // fontWeight: 600,\n                color: \"#6C757D\",\n                // borderRadius: \"5px\",\n                // marginRight: \"26px\",\n              }}\n            />\n          </div>\n          <div>\n            <Button\n              value='Submit'\n              sx={{\n                // padding: \"10px 15px\",\n                // backgroundColor: \"#009688\",\n                // fontSize: \"14px\",\n                // fontWeight: 600,\n                color: \"white\",\n                // borderRadius: \"5px\",\n              }}\n            />\n          </div>\n        </div> */}\n        <div\n          style={{\n            display: \"flex\",\n            gap: 24,\n            justifyContent: \"center\",\n            background: \"#009688\",\n            boxShadow: \"0px 5px 20px rgba(108, 117, 125, 0.15)\",\n            borderRadius: \"5px\",\n            padding: \"10px\",\n            maxWidth: \"100%\",\n            width: \"500px\",\n          }}\n        >\n          <button\n            // type='primary'\n            style={{\n              width: \"100%\",\n              height: \"40px\",\n              fontSize: \"14px\",\n              backgroundColor: \"#FFFFFF !important\",\n              fontWeight: 600,\n              color: \"green\",\n              borderRadius: \"5px\",\n              marginRight: \"26px\",\n            }}\n            // sx={{individual ? color: \"#000\" : color :\"#fff\" }}\n            //   button1: {\n            //     color: \"#000\",\n            //   },\n            //   button2: {\n            //     color: \"#fff\",\n            //     background: \"#009688\",\n            //   },\n            // className={individual ? classes.button1 : classes.button2}\n            // onClick={this.handleIndividual}\n          >\n            Individual Transfer\n          </button>\n          <button\n            style={{\n              width: \"100%\",\n              height: \"40px\",\n              fontSize: \"14px\",\n              background: \"#FFFFFF !important\",\n              fontWeight: 600,\n              color: \"white\",\n              borderRadius: \"5px\",\n              marginRight: \"26px\",\n            }}\n            // type='primary'\n            // className={individual ? classes.button2 : classes.button1}\n            // onClick={this.handleBulk}\n          >\n            Bulk Transfer\n          </button>\n        </div>\n      </DialogActions>\n    </Box>\n  );\n};\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getDialogActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogActions', slot);\n}\nconst dialogActionsClasses = generateUtilityClasses('MuiDialogActions', ['root', 'spacing']);\nexport default dialogActionsClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"disableSpacing\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogActionsUtilityClass } from './dialogActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getDialogActionsUtilityClass, classes);\n};\n\nconst DialogActionsRoot = styled('div', {\n  name: 'MuiDialogActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8,\n  justifyContent: 'flex-end',\n  flex: '0 0 auto'\n}, !ownerState.disableSpacing && {\n  '& > :not(:first-of-type)': {\n    marginLeft: 8\n  }\n}));\nconst DialogActions = /*#__PURE__*/React.forwardRef(function DialogActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogActions'\n  });\n\n  const {\n    className,\n    disableSpacing = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogActions.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogActions;"],"names":["textFieldStyles","borderRadius","backgroundColor","width","md","xs","border","dialogContentStyles","minWidth","nextHandler","prevHandler","limitHandler","page","totalRecords","limit","showLimit","hideOnMobile","totalPages","Math","ceil","className","onChange","value","disabled","onClick","props","type","wrapperStyle","boxSizing","height","padding","borderWidth","display","justifyContent","alignItems","textStyle","fontSize","fontWeight","borderColor","color","style","createBox","navigate","useNavigate","dispatch","useDispatch","useState","setPage","setLimit","totalRecord","setTotalRecord","dialogContent","setDialogContent","showModal","setShowModal","individual","bulk","data","setData","loading","setLoading","authenticatedUser","useSelector","state","AuthReducer","userProfile","wallet_balance","tenant","handleModalClose","getLoanList","useCallback","modalId","e","closeHandler","tenantId","config","headers","axiosServices","res","result","per_page","total","notify","console","log","useEffect","getUserProfile","tenant_id","columns","useMemo","Header","Cell","original","row","farmer","first_name","last_name","accessor","indicatorProps","status","selectIndicator","StatusIndicator","moment","created_at","format","tableData","id","breadcrumbs","Typography","Stack","direction","sx","flexWrap","marginTop","marginBottom","paddingTop","paddingBottom","paddingLeft","toFixed","spacing","my","Button","marginRight","Spinner","size","isLoading","TableControls","parseInt","target","handleLimitChange","Dialog","open","PendingPayments","title","p","CollectionSettings","flexDirection","initialValues","newPrice","as","TextField","name","inputProps","getDialogActionsUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","DialogActionsRoot","styled","overridesResolver","styles","ownerState","root","disableSpacing","_extends","flex","marginLeft","React","inProps","ref","useThemeProps","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx"],"sourceRoot":""}