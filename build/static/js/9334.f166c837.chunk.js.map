{"version":3,"file":"static/js/9334.f166c837.chunk.js","mappings":"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","sources":["layouts/dashboard/Profile/Profile.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Formik } from \"formik\";\n\nimport Stack from \"@mui/material/Stack\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport Typography from \"@mui/material/Typography\";\n\nimport { getUserProfile } from \"../../../redux/actions/AuthActions\";\nimport CustomAvater from \"../../../components/common/UserAvatar\";\nimport Button from \"../../../components/common/Button\";\n\n// const { notify } = require(\"../../../utils/toastNotification\");\n// import { textFieldStyles } from \"../../../components/Modals/globals\";\n\nconst textFieldStyles = {\n  backgroundColor: \"#F3F3F4\",\n  width: { xl: \"500px\", xs: \"100%\" },\n  mt: 1,\n};\n\nfunction Profile() {\n  const dispatch = useDispatch();\n  const authenticatedUser = useSelector(\n    (state) =>\n      state.AuthReducer.userProfile ||\n      JSON.parse(sessionStorage.getItem(\"user_profile\"))\n  );\n  const isLoading = useSelector((state) => state.AuthReducer.isLoading);\n  console.log(\"loading\", isLoading);\n\n  useEffect(() => {\n    dispatch(getUserProfile());\n  }, [dispatch]);\n\n  return (\n    <React.Fragment>\n      <section>\n        <nav id=\"quick-nav\">\n          <span>Profile</span>\n        </nav>\n\n        <Stack\n          direction=\"row\"\n          sx={{\n            px: 4,\n            py: 5,\n            backgroundColor: \"white\",\n            width: \"100%\",\n            minHeight: \"400px\",\n            boxShadow: \"0px 5px 20px rgba(108, 117, 125, 0.15)\",\n            borderRadius: \"5px\",\n            boxSizing: \"border-box\",\n            flexWrap: {\n              xs: \"wrap\",\n              lg: \"no-wrap\",\n            },\n          }}\n        >\n          <Stack\n            direction=\"column\"\n            alignItems=\"center\"\n            flexGrow={1}\n            sx={{\n              mx: { xs: \"auto\", lg: 1 },\n              mb: 4,\n              width: \"30%\",\n              minWidth: \"300px\",\n              maxWidth: \"600px\",\n              // border: \"1px solid\",\n              // borderColor: {\n              //   xs: \"red\",\n              //   sm: \"blue\",\n              //   md: \"green\",\n              //   lg: \"yellow\",\n              //   xl: \"orange\",\n              // },\n            }}\n          >\n            <CustomAvater\n              size=\"140px\"\n              fontSize=\"64px\"\n              firstname={authenticatedUser?.first_name || \"\"}\n              lastname={authenticatedUser?.last_name || \"\"}\n              avatarUrl=\"#\"\n            />\n            <Typography fontSize={18} fontWeight={700} mt={2}>{`${\n              authenticatedUser?.first_name || \"-\"\n            } ${authenticatedUser?.last_name || \"-\"}`}</Typography>\n            <Typography fontSize={16} fontWeight={700} sx={{\n              color: (theme) => theme.palette.primary.main\n            }}>\n              {authenticatedUser?.my_role?.role || \"-\"}\n            </Typography>\n            <Typography fontSize={14} fontWeight={600}>\n              {authenticatedUser?.mobile || \"-\"}\n            </Typography>\n            <Typography fontSize={14} fontWeight={600}>\n              {authenticatedUser?.email || \"-\"}\n            </Typography>\n          </Stack>\n\n          <Stack\n            direction=\"column\"\n            alignItems=\"center\"\n            flexGrow={1}\n            sx={{ mx: 1 }}\n          >\n            <Stack\n              direction=\"row\"\n              spacing={2}\n              sx={{\n                backgroundColor: (theme) => theme.palette.primary.main,\n                p: 1,\n                width: \"100%\",\n              }}\n            >\n              <Button\n                value=\"Edit Profile\"\n                sx={{\n                  backgroundColor: \"white\",\n                  color: \"black\",\n                }}\n              />\n              <Button value=\"Change Password\" />\n            </Stack>\n\n            <Stack\n              direction=\"column\"\n              flexGrow={1}\n              sx={{\n                width: \"100%\",\n              }}\n            >\n              <Formik\n                initialValues={{\n                  first_name: authenticatedUser?.first_name || \"\",\n                  last_name: authenticatedUser?.last_name || \"\",\n                  mobile: authenticatedUser?.mobile || \"\",\n                  email: authenticatedUser?.email || \"\",\n                }}\n                validate={(values) => {\n                  const errors = {};\n                  if (!values.first_name) {\n                    errors.first_name = \"First name cannot be empty\";\n                  } else if (!/[A-Za-z]{3,}/i.test(values.first_name)) {\n                    errors.first_name = \"Invalid first name\";\n                  }\n\n                  if (!values.last_name) {\n                    errors.last_name = \"Last name cannot be empty\";\n                  } else if (!/[A-Za-z]{3,}/i.test(values.last_name)) {\n                    errors.last_name = \"Invalid last name\";\n                  }\n\n                  // if (!values.mobile) {\n                  //   errors.mobile = \"Phone number is required\";\n                  // }\n\n                  if (!values.email) {\n                    errors.email = \"Email address is required\";\n                  }\n                  return errors;\n                }}\n                onSubmit={async (values, { setSubmitting }) => {\n                  const body = {\n                    first_name: values.first_name,\n                    last_name: values.last_name,\n                    mobile: values.mobile,\n                    email: values.email,\n                  };\n                  console.log(body);\n                  // dispatch(addSubCluster(body));\n                }}\n              >\n                {({\n                  values,\n                  errors,\n                  touched,\n                  handleChange,\n                  handleBlur,\n                  handleSubmit,\n                }) => (\n                  <form onSubmit={handleSubmit}>\n                    <Stack direction=\"row\" justifyContent=\"space-between\">\n                      <Stack direction=\"column\" mt={2}>\n                        <label htmlFor=\"first_name_input\">First Name</label>\n                        <TextField\n                          id=\"first_name_input\"\n                          name=\"first_name\"\n                          value={values.first_name}\n                          sx={textFieldStyles}\n                          InputProps={{ style: { height: \"44px\" } }}\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          className={\n                            errors.first_name && touched.first_name\n                              ? \"input-error\"\n                              : null\n                          }\n                        />\n                        {errors.first_name && touched.first_name && (\n                          <span className=\"error\">{errors.first_name}</span>\n                        )}\n                      </Stack>\n\n                      <Stack direction=\"column\" mt={2}>\n                        <label htmlFor=\"last_name_input\">Last Name</label>\n                        <TextField\n                          id=\"last_name_input\"\n                          name=\"last_name\"\n                          value={values.last_name}\n                          sx={textFieldStyles}\n                          InputProps={{ style: { height: \"44px\" } }}\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          className={\n                            errors.last_name && touched.last_name\n                              ? \"input-error\"\n                              : null\n                          }\n                        />\n                        {errors.last_name && touched.last_name && (\n                          <span className=\"error\">{errors.last_name}</span>\n                        )}\n                      </Stack>\n                    </Stack>\n\n                    <Stack direction=\"row\" justifyContent=\"space-between\">\n                      <Stack direction=\"column\" mt={2}>\n                        <label htmlFor=\"mobile_input\">Phone Number</label>\n                        <TextField\n                          id=\"mobile_input\"\n                          name=\"mobile\"\n                          value={values.mobile}\n                          sx={textFieldStyles}\n                          InputProps={{ style: { height: \"44px\" } }}\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          className={\n                            errors.mobile && touched.mobile\n                              ? \"input-error\"\n                              : null\n                          }\n                        />\n                        {errors.mobile && touched.mobile && (\n                          <span className=\"error\">{errors.mobile}</span>\n                        )}\n                      </Stack>\n\n                      <Stack direction=\"column\" mt={2}>\n                        <label htmlFor=\"email_input\">Email</label>\n                        <TextField\n                          id=\"email_input\"\n                          name=\"email\"\n                          value={values.email}\n                          sx={textFieldStyles}\n                          InputProps={{ style: { height: \"44px\" } }}\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          className={\n                            errors.email && touched.email ? \"input-error\" : null\n                          }\n                        />\n                        {errors.email && touched.email && (\n                          <span className=\"error\">{errors.email}</span>\n                        )}\n                      </Stack>\n                    </Stack>\n\n                    <Box mt={4}>\n                      <Button type=\"submit\" value=\"Submit\" />\n                    </Box>\n                  </form>\n                )}\n              </Formik>\n            </Stack>\n          </Stack>\n        </Stack>\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default Profile;\n"],"names":["textFieldStyles","backgroundColor","width","xl","xs","mt","dispatch","useDispatch","authenticatedUser","useSelector","state","AuthReducer","userProfile","JSON","parse","sessionStorage","getItem","isLoading","console","log","useEffect","getUserProfile","id","direction","sx","px","py","minHeight","boxShadow","borderRadius","boxSizing","flexWrap","lg","alignItems","flexGrow","mx","mb","minWidth","maxWidth","size","fontSize","firstname","first_name","lastname","last_name","avatarUrl","fontWeight","color","theme","palette","primary","main","my_role","role","mobile","email","spacing","p","value","initialValues","validate","values","errors","test","onSubmit","setSubmitting","body","touched","handleChange","handleBlur","handleSubmit","justifyContent","htmlFor","name","InputProps","style","height","onBlur","onChange","className","type"],"sourceRoot":""}