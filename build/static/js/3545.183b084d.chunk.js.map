{"version":3,"file":"static/js/3545.183b084d.chunk.js","mappings":"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","sources":["components/Modals/globals.js","components/common/CustomSelect.jsx","layouts/FarmManagement/AddFarmUnit.jsx","utils/convertJSONToFormData.js","redux/actions/UserManagementActions.js","utils/validations.js","../node_modules/@mui/material/DialogActions/dialogActionsClasses.js","../node_modules/@mui/material/DialogActions/DialogActions.js","../node_modules/@mui/material/Link/linkClasses.js","../node_modules/@mui/material/Link/getTextDecoration.js","../node_modules/@mui/material/Link/Link.js"],"sourcesContent":["export const textFieldStyles = {\n  borderRadius: \"5px\",\n  backgroundColor: \"#F3F3F4\",\n  width: { md: \"477.61px\", xs: \"100%\" },\n  \"& fieldset\": {\n    border: \"none\"\n  }\n};\n\nexport const dialogContentStyles = {\n  minWidth: { xs: \"320px\", md: \"initial\" }\n};\n\nexport const dialogContentStyles2 = {\n  minWidth: { xs: \"520px\", md: \"initial\" }\n};","import React, { useState } from \"react\";\n\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\n\nexport default function CustomSelect(props) {\n  const {\n    onChange = (e) => {},\n    noneLabel,\n    options = [],\n    iconType,\n    sx = {},\n    backgroundColor = \"#FFFFFF\",\n    ...rest\n  } = props;\n  const [selectValue, setSelectValue] = useState(\"\");\n\n  const handleChange = (event) => {\n    setSelectValue(event.target.value);\n    onChange(event);\n  };\n\n  let iconStyle;\n\n  switch (true) {\n    case !!iconType && iconType === \"filled\":\n      iconStyle = {\n        \"& .MuiSelect-icon\": {\n          backgroundColor: \"primary.main\",\n          fill: \"white\",\n          height: \"100%\",\n          width: props.iconwidth || \"48px\",\n          top: 0,\n          right: 0,\n        },\n      };\n      break;\n\n    default:\n      iconStyle = {};\n      break;\n  }\n\n  return (\n    <FormControl\n      sx={{\n        borderRadius: \"5px\",\n        minWidth: 120,\n        width: props.width,\n        height: props.height,\n        backgroundColor: props.backgroundColor,\n      }}\n    >\n      <Select\n        value={selectValue}\n        onChange={handleChange}\n        displayEmpty\n        inputProps={{ \"aria-label\": \"Without label\" }}\n        // IconComponent=\"ArrowDropDownOutlined\"\n        sx={{\n          overflow: \"hidden\",\n          boxShadow: props.disableshadow\n            ? \"none\"\n            : \"0px 5px 20px rgba(108, 117, 125, 0.15)\",\n          \"& *\": {\n            border: \"none\",\n          },\n          ...iconStyle,\n          ...sx,\n        }}\n        {...rest}\n      >\n        <MenuItem value=\"\">{noneLabel || <em>None</em>}</MenuItem>\n        {options.map((option, index) => {\n          return (\n            <MenuItem\n              key={index}\n              value={option.value}\n              selected={option.selected}\n            >\n              {option.name || \"\"}\n            </MenuItem>\n          );\n        })}\n      </Select>\n    </FormControl>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport Stack from \"@mui/material/Stack\";\nimport Typography from \"@mui/material/Typography\";\nimport Link from \"@mui/material/Link\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport TextField from \"@mui/material/TextField\";\n\nimport CustomSelect from \"../../components/common/CustomSelect\";\nimport BreadCrumb from \"../../components/common/CustomBreadCrumbs\";\nimport Button from \"../../components/common/Button\";\nimport { validations } from \"../../utils/validations\";\n\nimport { addFarmUnit } from \"../../redux/actions/FarmManagementActions\";\nimport { getLocalGovt, getStates } from \"../../redux/actions/AppActions\";\n\nimport { getFarmers } from \"../../redux/actions/UserManagementActions\";\nimport { getCropProfiles } from \"../../redux/actions/ConfigurationsActions\";\nimport { SET_LOCALS } from \"../../redux/types/AppActionTypes\";\nimport { textFieldStyles } from \"../../components/Modals/globals\";\n\nfunction AddFarmUnit() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const params = useParams();\n  const states = useSelector((state) => state.AppReducer?.states);\n  const authenticatedUser = useSelector(\n    (state) =>\n      state.AuthReducer?.userProfile ||\n      JSON.parse(sessionStorage.getItem(\"user_profile\"))\n  );\n\n  const customTextFieldStyles = {\n    ...textFieldStyles,\n    width: {\n      ...textFieldStyles.width,\n      md: \"auto\",\n    },\n  };\n\n  const localGovts = useSelector((state) => state.AppReducer?.localGovt || []);\n  const farmers = useSelector(\n    (state) => state.UserManagementReducer?.farmers || {}\n  );\n  const cropProfiles = useSelector(\n    (state) => state.ConfigReducer?.cropProfiles || {}\n  );\n\n  const stateChangeHandler = (handleChange) => (e) => {\n    // console.log({ state: e.target.value });\n    if (!e.target.value) {\n      dispatch({\n        type: SET_LOCALS,\n        payload: {\n          localGovt: [],\n        },\n      });\n    } else {\n      dispatch(getLocalGovt(e.target.value));\n    }\n    handleChange(e);\n  };\n\n  const validationSchema = Yup.object({\n    state: validations.blank().required(\"State is required\").matches(/\\d+/g),\n    address: validations.blank().required(\"Address is required\"),\n    community: validations.blank().required(\"Local govt is required\"),\n    crop: validations.blank().required(\"Crop is required\").matches(/\\d+/g),\n    farmer: validations.blank().required(\"Farmer is required\"),\n  });\n\n  useEffect(() => {\n    dispatch(getStates({}));\n    dispatch(getFarmers({ page: 1 }));\n    dispatch(getCropProfiles());\n  }, [authenticatedUser, dispatch, params.farmId]);\n\n  return (\n    <React.Fragment>\n      <section>\n        <nav id=\"quick-nav\">\n          <BreadCrumb\n            breadcrumbs={[\n              <Typography key=\"1\" color=\"inherit\">\n                Farm Management\n              </Typography>,\n              <Link href=\"/farm-management/farm-lots\" key=\"2\" color=\"inherit\">\n                Farm Units\n              </Link>,\n              <Typography key=\"3\" color=\"primary.main\">\n                Add Farm Unit\n              </Typography>,\n            ]}\n          />\n        </nav>\n\n        <Stack\n          direction=\"column\"\n          px={2}\n          py={3}\n          sx={{\n            backgroundColor: \"#FFF\",\n            boxShadow: \"0px 5px 20px rgba(108, 117, 125, 0.15)\",\n            borderRadius: \"5px\",\n          }}\n        >\n          <h2 style={{ fontSize: \"20px\", marginLeft: \"10px\" }}>\n            Add Farm Unit\n          </h2>\n\n          <Stack\n            sx={{\n              flexGrow: 1,\n            }}\n          >\n            <Formik\n              initialValues={{\n                state: \"\",\n                community: \"\",\n                address: \"\",\n                size: 0,\n                clay: 0,\n                slit: 0,\n                loam: 0,\n                nitrogen: 0,\n                phosphorus: 0,\n                potassium: 0,\n                crop: \"\",\n                farmer: \"\",\n              }}\n              validationSchema={validationSchema}\n              onSubmit={async (values, { resetForm }) => {\n                const body = {\n                  state: values.state,\n                  community: values.community,\n                  address: values.address,\n                  size: values.size,\n                  crop: values.crop,\n                  clay: values.clay,\n                  slit: values.slit,\n                  loam: values.loam,\n                  nitrogen: values.nitrogen,\n                  phosphorus: values.phosphorus,\n                  potassium: values.potassium,\n                  farmer: values.farmer,\n                };\n                console.log(body);\n\n                setIsSubmitting(true);\n                const response = dispatch(addFarmUnit(body));\n                response.then((result) => {\n                  setIsSubmitting(false);\n                  if (result?.data || result?.success) {\n                    resetForm();\n                    window.setTimeout(\n                      () => navigate(\"/farm-management/farm-lots\"),\n                      1000\n                    );\n                  }\n                });\n              }}\n            >\n              {({\n                values,\n                errors,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n              }) => (\n                <form\n                  onSubmit={handleSubmit}\n                  className=\"flex flex-col\"\n                  style={{ flexGrow: 1 }}\n                >\n                  <Stack\n                    direction=\"row\"\n                    justifyContent=\"space-between\"\n                    sx={{\n                      flexWrap: {\n                        xs: \"wrap\",\n                        md: \"nowrap\",\n                      },\n                    }}\n                  >\n                    <Stack\n                      direction=\"column\"\n                      sx={{\n                        mx: 1,\n                        width: \"100%\",\n                      }}\n                    >\n                      <label htmlFor=\"state\" className=\"second-text mb-4 mt-5\">\n                        State <small className=\"text-red-500\">*</small>\n                      </label>\n                      <CustomSelect\n                        id=\"state\"\n                        name=\"state\"\n                        value={values.state}\n                        onChange={stateChangeHandler(handleChange)}\n                        onBlur={handleBlur}\n                        noneLabel={<em>Select State</em>}\n                        options={Object.values(states).map((eachState) => ({\n                          name: eachState.name,\n                          value: eachState.state_id,\n                        }))}\n                        iconType=\"filled\"\n                        width={{ xs: \"100%\" }}\n                        height=\"44px\"\n                        sx={{ backgroundColor: \"grey\" }}\n                        backgroundColor=\"#F3F3F4\"\n                        iconwidth=\"48px\"\n                        disableshadow=\"true\"\n                        className={\n                          errors.state && touched.state ? \"input-error\" : null\n                        }\n                      />\n                      {errors.state && touched.state && (\n                        <span className=\"error\">{errors.state}</span>\n                      )}\n                    </Stack>\n\n                    <Stack\n                      direction=\"column\"\n                      sx={{\n                        mx: 1,\n                        width: \"100%\",\n                      }}\n                    >\n                      <label\n                        htmlFor=\"community\"\n                        className=\"second-text mb-4 mt-5\"\n                      >\n                        LGA <small className=\"text-red-500\">*</small>\n                      </label>\n                      <CustomSelect\n                        id=\"community\"\n                        name=\"community\"\n                        value={values.community}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        noneLabel={<em>Select LGA</em>}\n                        options={localGovts.map((eachLga) => ({\n                          name: eachLga.local_name,\n                          value: eachLga.local_id,\n                        }))}\n                        iconType=\"filled\"\n                        width={{ xs: \"100%\" }}\n                        height=\"44px\"\n                        sx={{ backgroundColor: \"grey\" }}\n                        backgroundColor=\"#F3F3F4\"\n                        iconwidth=\"48px\"\n                        disableshadow=\"true\"\n                        className={\n                          errors.community && touched.community\n                            ? \"input-error\"\n                            : null\n                        }\n                      />\n                      {errors.community && touched.community && (\n                        <span className=\"error\">{errors.community}</span>\n                      )}\n                    </Stack>\n                  </Stack>\n\n                  <Stack\n                    direction=\"column\"\n                    sx={{\n                      mx: 1,\n                    }}\n                  >\n                    <label htmlFor=\"address\" className=\"second-text mb-4 mt-4\">\n                      Address <small className=\"text-red-500\">*</small>\n                    </label>\n                    <TextField\n                      id=\"address\"\n                      name=\"address\"\n                      value={values.address}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      sx={customTextFieldStyles}\n                      InputProps={{ style: { height: \"44px\" } }}\n                      className={\n                        errors.address && touched.address ? \"input-error\" : null\n                      }\n                    />\n                    {errors.address && touched.address && (\n                      <span className=\"error\">{errors.address}</span>\n                    )}\n                  </Stack>\n\n                  <Stack\n                    direction=\"row\"\n                    justifyContent=\"space-between\"\n                    sx={{\n                      flexWrap: {\n                        xs: \"wrap\",\n                        lg: \"nowrap\",\n                      },\n                    }}\n                  >\n                    <Stack\n                      direction=\"column\"\n                      sx={{\n                        mx: 1,\n                        width: \"100%\",\n                      }}\n                    >\n                      <label htmlFor=\"clay\" className=\"second-text mb-4 mt-4\">\n                        Soil Profile (Clay) %\n                      </label>\n                      <TextField\n                        id=\"clay\"\n                        name=\"clay\"\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.clay}\n                        type=\"number\"\n                        sx={customTextFieldStyles}\n                        InputProps={{ style: { height: \"44px\" } }}\n                        className={\n                          errors.clay && touched.clay ? \"input-error\" : null\n                        }\n                      />\n                      {errors.clay && touched.clay && (\n                        <span className=\"error\">{errors.clay}</span>\n                      )}\n                    </Stack>\n\n                    <Stack\n                      direction=\"column\"\n                      sx={{\n                        mx: 1,\n                        width: \"100%\",\n                      }}\n                    >\n                      <label\n                        htmlFor=\"phosphorus\"\n                        className=\"second-text mb-4 mt-4\"\n                      >\n                        Phosphorus ( mg/L)\n                      </label>\n                      <TextField\n                        id=\"phosphorus\"\n                        name=\"phosphorus\"\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.phosphorus}\n                        type=\"number\"\n                        sx={customTextFieldStyles}\n                        InputProps={{ style: { height: \"44px\" } }}\n                        className={\n                          errors.phosphorus && touched.phosphorus\n                            ? \"input-error\"\n                            : null\n                        }\n                      />\n                      {errors.phosphorus && touched.phosphorus && (\n                        <span className=\"error\">{errors.phosphorus}</span>\n                      )}\n                    </Stack>\n                  </Stack>\n\n                  <Stack\n                    direction=\"row\"\n                    justifyContent=\"space-between\"\n                    sx={{\n                      flexWrap: {\n                        xs: \"wrap\",\n                        lg: \"nowrap\",\n                      },\n                    }}\n                  >\n                    <Stack\n                      direction=\"column\"\n                      sx={{\n                        mx: 1,\n                        width: \"100%\",\n                      }}\n                    >\n                      <label htmlFor=\"loam\" className=\"second-text mb-4 mt-4\">\n                        Soil Profile (Loam) %\n                      </label>\n                      <TextField\n                        id=\"loam\"\n                        name=\"loam\"\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.loam}\n                        type=\"number\"\n                        sx={customTextFieldStyles}\n                        InputProps={{ style: { height: \"44px\" } }}\n                        className={\n                          errors.loam && touched.loam ? \"input-error\" : null\n                        }\n                      />\n                      {errors.loam && touched.loam && (\n                        <span className=\"error\">{errors.loam}</span>\n                      )}\n                    </Stack>\n\n                    <Stack\n                      direction=\"column\"\n                      sx={{\n                        mx: 1,\n                        width: \"100%\",\n                      }}\n                    >\n                      <label\n                        htmlFor=\"nitrogen\"\n                        className=\"second-text mb-4 mt-4\"\n                      >\n                        Nitrogen (mg/L)\n                      </label>\n                      <TextField\n                        id=\"nitrogen\"\n                        name=\"nitrogen\"\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.nitrogen}\n                        type=\"number\"\n                        sx={customTextFieldStyles}\n                        InputProps={{ style: { height: \"44px\" } }}\n                        className={\n                          errors.nitrogen && touched.nitrogen\n                            ? \"input-error\"\n                            : null\n                        }\n                      />\n                      {errors.nitrogen && touched.nitrogen && (\n                        <span className=\"error\">{errors.nitrogen}</span>\n                      )}\n                    </Stack>\n                  </Stack>\n\n                  <Stack\n                    direction=\"row\"\n                    justifyContent=\"space-between\"\n                    sx={{\n                      flexWrap: {\n                        xs: \"wrap\",\n                        lg: \"nowrap\",\n                      },\n                    }}\n                  >\n                    <Stack\n                      direction=\"column\"\n                      sx={{\n                        mx: 1,\n                        width: \"100%\",\n                      }}\n                    >\n                      <label htmlFor=\"slit\" className=\"second-text mb-4 mt-4\">\n                        Soil Profile (Slit) %\n                      </label>\n                      <TextField\n                        id=\"slit\"\n                        name=\"slit\"\n                        value={values.slit}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        type=\"number\"\n                        sx={customTextFieldStyles}\n                        InputProps={{ style: { height: \"44px\" } }}\n                        className={\n                          errors.slit && touched.slit ? \"input-error\" : null\n                        }\n                      />\n                      {errors.slit && touched.slit && (\n                        <span className=\"error\">{errors.slit}</span>\n                      )}\n                    </Stack>\n\n                    <Stack\n                      direction=\"column\"\n                      sx={{\n                        mx: 1,\n                        width: \"100%\",\n                      }}\n                    >\n                      <label\n                        htmlFor=\"potassium\"\n                        className=\"second-text mb-4 mt-4\"\n                      >\n                        Potassium (mg/L)\n                      </label>\n                      <TextField\n                        id=\"potassium\"\n                        name=\"potassium\"\n                        value={values.potassium}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        type=\"number\"\n                        sx={customTextFieldStyles}\n                        InputProps={{ style: { height: \"44px\" } }}\n                        className={\n                          errors.potassium && touched.potassium\n                            ? \"input-error\"\n                            : null\n                        }\n                      />\n                      {errors.potassium && touched.potassium && (\n                        <span className=\"error\">{errors.potassium}</span>\n                      )}\n                    </Stack>\n                  </Stack>\n\n                  <Stack\n                    direction=\"column\"\n                    sx={{\n                      mx: 1,\n                    }}\n                  >\n                    <label htmlFor=\"size\" className=\"second-text mb-4 mt-4\">\n                      Size (Ha)\n                    </label>\n                    <TextField\n                      id=\"size\"\n                      name=\"size\"\n                      value={values.size}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      type=\"number\"\n                      sx={customTextFieldStyles}\n                      InputProps={{ style: { height: \"44px\" } }}\n                      className={\n                        errors.size && touched.size ? \"input-error\" : null\n                      }\n                    />\n                    {errors.size && touched.size && (\n                      <span className=\"error\">{errors.size}</span>\n                    )}\n                  </Stack>\n\n                  <Stack\n                    direction=\"row\"\n                    justifyContent=\"space-between\"\n                    sx={{\n                      flexWrap: {\n                        xs: \"wrap\",\n                        lg: \"nowrap\",\n                      },\n                    }}\n                  >\n                    <Stack\n                      direction=\"column\"\n                      sx={{\n                        mx: 1,\n                        width: \"100%\",\n                      }}\n                    >\n                      <label htmlFor=\"crop\" className=\"second-text mb-4 mt-4\">\n                        Crop <small className=\"text-red-500\">*</small>\n                      </label>\n                      <CustomSelect\n                        id=\"crop\"\n                        name=\"crop\"\n                        value={values.crop}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        noneLabel={<em>Select Crop</em>}\n                        options={cropProfiles?.data.map((eachCrop) => ({\n                          name: eachCrop.crop_name,\n                          value: eachCrop.id,\n                        }))}\n                        iconType=\"filled\"\n                        width=\"auto\"\n                        height=\"44px\"\n                        sx={{ backgroundColor: \"grey\" }}\n                        backgroundColor=\"#F3F3F4\"\n                        disableshadow=\"true\"\n                        iconwidth=\"48px\"\n                        className={\n                          errors.crop && touched.crop ? \"input-error\" : null\n                        }\n                      />\n                      {errors.crop && touched.crop && (\n                        <span className=\"error\">{errors.crop}</span>\n                      )}\n                    </Stack>\n\n                    <Stack\n                      direction=\"column\"\n                      sx={{\n                        mx: 1,\n                        width: \"100%\",\n                      }}\n                    >\n                      <label htmlFor=\"farmer\" className=\"second-text mb-4 mt-4\">\n                        Farmer <small className=\"text-red-500\">*</small>\n                      </label>\n                      <CustomSelect\n                        id=\"farmer\"\n                        name=\"farmer\"\n                        value={values.farmer}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        noneLabel={<em>Select Farmer</em>}\n                        options={farmers?.data.map((eachFarmer) => ({\n                          name: `${eachFarmer.first_name} ${eachFarmer.last_name}`,\n                          value: eachFarmer.id,\n                        }))}\n                        iconType=\"filled\"\n                        width=\"auto\"\n                        height=\"44px\"\n                        sx={{ backgroundColor: \"grey\" }}\n                        backgroundColor=\"#F3F3F4\"\n                        disableshadow=\"true\"\n                        iconwidth=\"48px\"\n                        className={\n                          errors.farmer && touched.farmer ? \"input-error\" : null\n                        }\n                      />\n                      {errors.farmer && touched.farmer && (\n                        <span className=\"error\">{errors.farmer}</span>\n                      )}\n                    </Stack>\n                  </Stack>\n\n                  <DialogActions>\n                    <div className=\"buttons mt-8\">\n                      <Button\n                        type=\"submit\"\n                        disabled={isSubmitting}\n                        value={isSubmitting ? \"Adding...\" : \"Submit\"}\n                        sx={{\n                          fontSize: \"14px\",\n                          borderRadius: \"5px\",\n                        }}\n                      />\n                    </div>\n                  </DialogActions>\n                </form>\n              )}\n            </Formik>\n          </Stack>\n        </Stack>\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default AddFarmUnit;\n","export function convertToFormData(body = {}) {\n  const bodyFormData = new FormData();\n  if (Object.keys(body).length > 0) {\n    console.log({ body });\n    Object.keys(body).forEach((key) => {\n      bodyFormData.append(key, body[key]);\n    });\n  }\n  return bodyFormData;\n}","import axiosServices, { useAxiosService } from \"../../services/axiosServices\";\nimport { notify } from \"../../utils/toastNotification\";\nimport { errorHandler } from \"../../utils/actionsErrorHandler\";\nimport { createQuery } from \"../../utils/createQuery\";\nimport { convertToFormData } from \"../../utils/convertJSONToFormData\";\nimport {\n  GET_USERS_SUCCESS,\n  GET_USERS_FAIL,\n  ADD_USER_SUCCESS,\n  ADD_USER_FAIL,\n  LOADING_USERS,\n  GET_FARMERS_SUCCESS,\n  GET_FARMER_FAIL,\n  ADD_FARMER_SUCCESS,\n  ADD_FARMER_FAIL,\n  LOADING_FARMER,\n  GET_SOURCING_AGENTS_SUCCESS,\n  GET_SOURCING_AGENTS_FAIL,\n  ADD_SOURCING_AGENT_SUCCESS,\n  ADD_SOURCING_AGENT_FAIL,\n  LOADING_SOURCING_AGENTS,\n} from \"../types/UserManagementTypes\";\n\nexport const getUsers =\n  (queryParams = {}) =>\n  async (dispatch) => {\n    let page = queryParams.page || 1;\n    let limit = queryParams.limit || 10;\n    let query = createQuery(queryParams);\n    dispatch({ type: LOADING_USERS });\n    queryParams = createQuery(queryParams);\n    try {\n      const res = await axiosServices.get(\n        `/viewusers?page=${page}&limit=${limit}&query=${query}`\n      );\n      dispatch({\n        type: GET_USERS_SUCCESS,\n        payload: res,\n      });\n      // console.log(\"first data\", res?.data);\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: GET_USERS_FAIL,\n      });\n      errorHandler(error, \"Failed to fetch users\");\n      return error;\n    }\n  };\n\nexport const addUser = (data) => async (dispatch) => {\n  // dispatch({ type: LOADING_USERS, payload: true });\n  try {\n    const res = await axiosServices.post(`/users`, data);\n\n    if (res?.success && res?.result) {\n      notify(\"User added successfully\", { type: \"success\" });\n      dispatch({\n        type: ADD_USER_SUCCESS,\n        payload: res.result,\n      });\n      return res;\n      // dispatch(getUsers({ page: 1 }));\n    }\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: ADD_USER_FAIL,\n    });\n    errorHandler(error, \"Failed to add user\");\n    return error;\n  }\n};\n\nexport const bulkUploadUsers = (data) => async (dispatch) => {\n  try {\n    data = convertToFormData(data);\n\n    const res = await useAxiosService(\"formData\").post(\n      `/users/bulk-upload`,\n      data,\n      {}\n    );\n\n    // console.log(res);\n\n    if (res?.success && res?.result) {\n      notify(\"Users uploaded successfully\", { type: \"success\" });\n      dispatch(getUsers({ page: 1 }));\n    }\n  } catch (error) {\n    console.log(error);\n    errorHandler(error, \"Failed to upload users\");\n    return error;\n  }\n};\n\nexport const updateUser = (userId, data) => async (dispatch) => {\n  // dispatch({ type: LOADING_USERS, payload: true });\n  try {\n    const res = await axiosServices.patch(`/users/${userId}`, data);\n\n    if (res?.success && res?.result) {\n      notify(\"User Updated successfully\", { type: \"success\" });\n      return res;\n    }\n  } catch (error) {\n    console.log(error);\n    errorHandler(error, \"Failed to update user\");\n    return error;\n  }\n};\n\nexport const deleteUser = (userId) => async (dispatch) => {\n  try {\n    const res = await axiosServices.delete(`/users/${userId}`);\n    if (res) {\n      notify(\"User deleted successfully\", { type: \"success\" });\n      dispatch(getUsers({ page: 1 }));\n    }\n  } catch (error) {\n    console.log(error);\n    errorHandler(error, \"Failed to delete user\");\n    return error;\n  }\n};\n\nexport const getFarmers =\n  (queryParams = {}) =>\n  async (dispatch) => {\n    dispatch({ type: LOADING_FARMER });\n    queryParams = createQuery(queryParams);\n    // console.log(queryParams);\n    try {\n      const res = await axiosServices.get(`/farmers${queryParams}`);\n\n      if (res?.success && res?.result) {\n        dispatch({\n          type: GET_FARMERS_SUCCESS,\n          payload: res?.result?.data,\n        });\n      } else {\n        dispatch({\n          type: GET_FARMER_FAIL,\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: GET_FARMER_FAIL,\n      });\n      errorHandler(error);\n      return error;\n    }\n  };\n\nexport const getSingleFarmer = async (farmerId) => {\n  try {\n    const res = await axiosServices.get(`/farmers/${farmerId}`);\n    return res?.result;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n};\n\nexport const addFarmer = (data) => async (dispatch) => {\n  try {\n    const res = await axiosServices.post(`/farmers`, data);\n\n    if (res?.success && res?.result) {\n      notify(\"Farmer added successfully\", { type: \"success\" });\n      dispatch({\n        type: ADD_FARMER_SUCCESS,\n        payload: res.result,\n      });\n      dispatch(getFarmers({ page: 1 }));\n    }\n    return res;\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: ADD_FARMER_FAIL,\n    });\n    errorHandler(error, \"Failed to add farmer\");\n    return error;\n  }\n};\n\nexport const updateFarmer = (farmerId, data) => async (dispatch) => {\n  try {\n    const res = await axiosServices.patch(`/farmers/${farmerId}`, data);\n\n    if (res?.success && res?.result) {\n      notify(\"Farmer updated successfully\", { type: \"success\" });\n    }\n    return res;\n  } catch (error) {\n    console.log(error);\n    errorHandler(error, \"Failed to update farmer\");\n    return error;\n  }\n};\n\nexport const bulkUploadFarmers = (data) => async (dispatch) => {\n  try {\n    data = convertToFormData(data);\n    const res = await useAxiosService(\"formData\")({\n      method: \"post\",\n      url: `/farmers/bulk-upload`,\n      data,\n    });\n\n    if (res?.success && res?.result) {\n      notify(\"Farmers uploaded successfully\", { type: \"success\" });\n      dispatch(getFarmers({ page: 1 }));\n    }\n  } catch (error) {\n    console.log(error);\n    errorHandler(error, \"Failed to add farmer\");\n    return error;\n  }\n};\n\n//\nexport const exportFarmerData = (data, navigate) => async (dispatch) => {\n  try {\n    const res = await axiosServices.post(\n      `/farmers/downloads/process-farmer-details`,\n      data\n    );\n\n    if (res?.success && res?.result) {\n      notify(\"Farmers exported successfully\", { type: \"success\" });\n      navigate(\"/user-management/farmers/exports\");\n    }\n  } catch (error) {\n    console.log(error);\n    errorHandler(error, \"Failed to export farmers\");\n    return error;\n  }\n};\n\nexport const getFarmerExports = async () => {\n  try {\n    const res = await axiosServices.get(`/farmers/downloads`);\n\n    if (res?.success && res?.result) {\n      return res?.result?.data;\n    }\n\n    return res;\n  } catch (error) {\n    console.log(error);\n    errorHandler(error, \"Failed to fetch exports\");\n    return error;\n  }\n};\n\nexport const downloadFarmerTemplate = (data) => async (dispatch) => {\n  try {\n    const res = await axiosServices.get(`/templates/farmers`);\n\n    if (res?.success && res?.result) {\n    } else {\n      dispatch({\n        type: GET_FARMER_FAIL,\n      });\n    }\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: GET_FARMER_FAIL,\n    });\n    errorHandler(error);\n    return error;\n  }\n};\n\n// SOURCING AGENTS\nexport const getSourcingAgents =\n  (queryParams = {}) =>\n  async (dispatch) => {\n    dispatch({ type: LOADING_SOURCING_AGENTS });\n    queryParams = createQuery(queryParams);\n    try {\n      const res = await axiosServices.get(`/sourcing-partners${queryParams}`);\n      dispatch({\n        type: GET_SOURCING_AGENTS_SUCCESS,\n        payload: res?.result?.sourcing_partners,\n      });\n\n      // console.log(\"first\", res?.result?.data);\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: GET_SOURCING_AGENTS_FAIL,\n      });\n      errorHandler(error, \"Failed to fetch sourcing agents\");\n      return error;\n    }\n  };\n\nexport const addSourcingAgent = (data) => async (dispatch) => {\n  // dispatch({ type: LOADING_SOURCING_AGENTS, payload: true });\n  try {\n    const res = await axiosServices.post(`/sourcing-partners`, data);\n    console.log(res);\n    if (res?.success && res?.result) {\n      notify(\"Sourcing agent added successfully\", { type: \"success\" });\n      dispatch({\n        type: ADD_SOURCING_AGENT_SUCCESS,\n        payload: res.result,\n      });\n      // dispatch(getUsers({ page: 1 }));\n    }\n    return res;\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: ADD_SOURCING_AGENT_FAIL,\n    });\n    errorHandler(error, \"Failed to add sourcing agent\");\n    return error;\n  }\n};\n\nexport const updateSourcingAgent = (userId, data) => async (dispatch) => {\n  // dispatch({ type: LOADING_SOURCING_AGENTS, payload: true });\n  try {\n    const res = await axiosServices.patch(`/users/${userId}`, data);\n\n    if (res?.success && res?.result) {\n      notify(\"Sourcing agent updated successfully\", { type: \"success\" });\n      // dispatch(getUsers({ page: 1 }));\n    }\n  } catch (error) {\n    console.log(error);\n    errorHandler(error, \"Failed to update sourcing agent\");\n    return error;\n  }\n};\n\nexport const deleteSourcingAgent = (userId) => async (dispatch) => {\n  try {\n    const res = await axiosServices.delete(`/sourcing-partners/${userId}`);\n    if (res) {\n      notify(\"Sourcing agent deleted successfully\", { type: \"success\" });\n      dispatch(getSourcingAgents({ page: 1 }));\n    }\n  } catch (error) {\n    console.log(error);\n    errorHandler(error, \"Failed to delete sourcing agent\");\n    return error;\n  }\n};\n","import * as Yup from \"yup\";\n\nexport const validations = {\n  name: (paramName) =>\n    Yup.string().min(\n      3,\n      paramName\n        ? `${paramName} must be 3 or more characters`\n        : \"Must be 3 or more characters\"\n    ),\n  number: (paramName, min = -1e20, max = 1e20) =>\n    Yup.number()\n      .min(\n        min,\n        paramName\n          ? `${paramName} must be greater than ${min}`\n          : `Must be greater than ${min}`\n      )\n      .max(\n        max,\n        paramName\n          ? `${paramName} must be less than ${max}`\n          : `Must be less than ${max}`\n      ),\n  email: (paramName) => Yup.string().email(),\n  password: (paramName, min = 8, max = 24) =>\n    Yup.string()\n      .min(\n        min,\n        paramName\n          ? `${paramName} must be ${min} or more characters`\n          : \"Must be 8 or more characters\"\n      )\n      .max(max, paramName ? `${paramName} is too long` : \"Too long\"),\n  date: (paramName) =>\n    Yup.string().matches(\n      /(\\d{4}(-|\\/|\\\\)\\d{1,2}(-|\\/|\\\\)\\d{1,2})|(\\d{1,2}(-|\\/|\\\\)\\d{1,2}(-|\\/|\\\\)\\d{4})/gi\n    ),\n  mobile: (paramName) => Yup.string().matches(/[0-9)(+]/gi, \"Invalid number\"),\n  bvn: (paramName) =>\n    Yup.string()\n      .matches(/\\d{11}/g, \"Invalid BVN\")\n      .length(11, \"BVN must be 11 digits long\"),\n  blank: () => Yup.string(),\n};\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getDialogActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogActions', slot);\n}\nconst dialogActionsClasses = generateUtilityClasses('MuiDialogActions', ['root', 'spacing']);\nexport default dialogActionsClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"disableSpacing\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogActionsUtilityClass } from './dialogActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getDialogActionsUtilityClass, classes);\n};\n\nconst DialogActionsRoot = styled('div', {\n  name: 'MuiDialogActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8,\n  justifyContent: 'flex-end',\n  flex: '0 0 auto'\n}, !ownerState.disableSpacing && {\n  '& > :not(:first-of-type)': {\n    marginLeft: 8\n  }\n}));\nconst DialogActions = /*#__PURE__*/React.forwardRef(function DialogActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogActions'\n  });\n\n  const {\n    className,\n    disableSpacing = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogActions.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogActions;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;","import { alpha, getPath } from '@mui/system';\nexport const colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\n\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\n\nconst getTextDecoration = ({\n  theme,\n  ownerState\n}) => {\n  const transformedColor = transformDeprecatedColors(ownerState.color);\n  const color = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);\n\n  if ('vars' in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n\n  return alpha(color, 0.4);\n};\n\nexport default getTextDecoration;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\", \"sx\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport getTextDecoration, { colorTransformations } from './getTextDecoration';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\n\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  return _extends({}, ownerState.underline === 'none' && {\n    textDecoration: 'none'\n  }, ownerState.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, ownerState.underline === 'always' && _extends({\n    textDecoration: 'underline'\n  }, ownerState.color !== 'inherit' && {\n    textDecorationColor: getTextDecoration({\n      theme,\n      ownerState\n    })\n  }, {\n    '&:hover': {\n      textDecorationColor: 'inherit'\n    }\n  }), ownerState.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    component = 'a',\n    onBlur,\n    onFocus,\n    TypographyClasses,\n    underline = 'always',\n    variant = 'inherit',\n    sx\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n\n  const handleBlur = event => {\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  const handleFocus = event => {\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    color: color,\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    ownerState: ownerState,\n    variant: variant,\n    sx: [...(!Object.keys(colorTransformations).includes(color) ? [{\n      color\n    }] : []), ...(Array.isArray(sx) ? sx : [sx])]\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .any,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * `classes` prop applied to the [`Typography`](/material-ui/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;"],"names":["textFieldStyles","borderRadius","backgroundColor","width","md","xs","border","dialogContentStyles","minWidth","CustomSelect","props","iconStyle","onChange","e","noneLabel","options","iconType","sx","rest","useState","selectValue","setSelectValue","fill","height","iconwidth","top","right","value","event","target","displayEmpty","inputProps","overflow","boxShadow","disableshadow","map","option","index","selected","name","dispatch","useDispatch","navigate","useNavigate","isSubmitting","setIsSubmitting","params","useParams","states","useSelector","state","AppReducer","authenticatedUser","AuthReducer","userProfile","JSON","parse","sessionStorage","getItem","customTextFieldStyles","localGovts","localGovt","farmers","UserManagementReducer","cropProfiles","ConfigReducer","stateChangeHandler","handleChange","getLocalGovt","type","SET_LOCALS","payload","validationSchema","Yup","validations","required","matches","address","community","crop","farmer","useEffect","getStates","getFarmers","page","getCropProfiles","farmId","id","breadcrumbs","color","href","direction","px","py","style","fontSize","marginLeft","flexGrow","initialValues","size","clay","slit","loam","nitrogen","phosphorus","potassium","onSubmit","values","resetForm","body","console","log","addFarmUnit","then","result","data","success","window","setTimeout","errors","touched","handleBlur","handleSubmit","className","justifyContent","flexWrap","mx","htmlFor","onBlur","Object","eachState","state_id","eachLga","local_name","local_id","InputProps","lg","eachCrop","crop_name","eachFarmer","first_name","last_name","disabled","convertToFormData","bodyFormData","FormData","keys","length","forEach","key","append","getUsers","queryParams","limit","query","createQuery","LOADING_USERS","axiosServices","res","GET_USERS_SUCCESS","GET_USERS_FAIL","errorHandler","addUser","notify","ADD_USER_SUCCESS","ADD_USER_FAIL","bulkUploadUsers","useAxiosService","post","updateUser","userId","deleteUser","LOADING_FARMER","GET_FARMERS_SUCCESS","GET_FARMER_FAIL","getSingleFarmer","farmerId","addFarmer","ADD_FARMER_SUCCESS","ADD_FARMER_FAIL","updateFarmer","bulkUploadFarmers","method","url","exportFarmerData","getFarmerExports","getSourcingAgents","LOADING_SOURCING_AGENTS","GET_SOURCING_AGENTS_SUCCESS","sourcing_partners","GET_SOURCING_AGENTS_FAIL","addSourcingAgent","ADD_SOURCING_AGENT_SUCCESS","ADD_SOURCING_AGENT_FAIL","deleteSourcingAgent","paramName","min","number","max","email","password","date","mobile","bvn","blank","getDialogActionsUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","DialogActionsRoot","styled","overridesResolver","styles","ownerState","root","disableSpacing","spacing","_extends","display","alignItems","padding","flex","React","inProps","ref","useThemeProps","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","getLinkUtilityClass","colorTransformations","primary","textPrimary","secondary","textSecondary","error","theme","transformedColor","transformDeprecatedColors","getPath","channelColor","alpha","LinkRoot","Typography","capitalize","underline","component","button","textDecoration","textDecorationColor","getTextDecoration","position","WebkitTapHighlightColor","outline","margin","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","linkClasses","onFocus","TypographyClasses","variant","useIsFocusVisible","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","focusVisible","setFocusVisible","handlerRef","useForkRef","current","includes","Array","isArray"],"sourceRoot":""}