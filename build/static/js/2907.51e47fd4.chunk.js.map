{"version":3,"file":"static/js/2907.51e47fd4.chunk.js","mappings":"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","sources":["components/common/CustomSearchField.jsx","components/icons/search.js","layouts/Configurations/CropCalendar.jsx"],"sourcesContent":["import React from \"react\";\nimport TextField from \"@mui/material/TextField\";\n\nconst CustomSearchField = (props) => {\n  const { sx = {}, placeholder = \"\", value=\"\", ...rest } = props;\n  return (\n    <TextField\n      // defaultValue={props.value || \"\"}\n      placeholder={placeholder}\n      sx={{\n        p: 0,\n        border: \"1px solid rgba(0, 150, 136, 0.2)\",\n        borderRadius: \"5px\",\n        backgroundColor: \"#FFF\",\n        \"& *\": {\n          borderColor: \"transparent\",\n        },\n        \"& input\": {\n          padding: \"10px\",\n        },\n        ...sx,\n      }}\n      value={value}\n      {...rest}\n    />\n  );\n};\n\nexport default CustomSearchField;\n","import { createSvgIcon } from '@mui/material/utils';\n\nexport const Search = createSvgIcon(\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n    <path\n      fillRule=\"evenodd\"\n      d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Search');\n","import React, {\n  useState,\n  useEffect,\n  useMemo,\n  useCallback,\n  useRef,\n} from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Stack from \"@mui/material/Stack\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\n\nimport { BiEditAlt as EditIcon } from \"react-icons/bi\";\nimport { RiDeleteBinLine as DeleteIcon } from \"react-icons/ri\";\nimport { Search as SearchIcon } from \"../../components/icons/search\";\n\nimport Table from \"../../components/Table/UserTable\";\nimport TableControls from \"../../components/Table/TableControls\";\nimport CustomSelect from \"../../components/common/CustomSelect\";\nimport CustomSearchField from \"../../components/common/CustomSearchField\";\nimport Button from \"../../components/common/Button\";\nimport Dialog from \"../../components/Modals/Dialog\";\nimport Spinner from \"../../components/Spinner\";\nimport BreadCrumb from \"../../components/common/CustomBreadCrumbs\";\n\nimport {\n  AddCategory as AddCategoryModalContent,\n  AddTask as AddTaskModalContent,\n  DeleteActivity as DeleteActivityModalContent,\n} from \"./ModalContents\";\n\nimport {\n  getCropCalendar,\n  getCropProfiles,\n  getActivityCategories,\n} from \"../../redux/actions/ConfigurationsActions\";\n\nfunction CropCalendarSection() {\n  const dispatch = useDispatch();\n\n  const [page, setPage] = useState(1);\n  const [limit, setLimit] = useState(10);\n  const [query, setQuery] = useState(\"\");\n\n  const [tasks, setTasks] = useState(\"\");\n  const [categories, setCategory] = useState(\"\");\n  const [status] = useState(\"\");\n\n  const queryRef = useRef(null);\n\n  const activityCategories = useSelector(\n    (state) => state.ConfigReducer.activityCategories?.data || []\n  );\n\n  // console.log(activityCategories);\n\n  const cropCalendar = useSelector((state) => state.ConfigReducer.cropCalendar);\n\n  const crops = useSelector(\n    (state) => state.ConfigReducer.cropProfiles?.data || []\n  );\n\n  // onChange function for select\n  const handleLimitChange = (e) => {\n    setLimit(parseInt(e.target.value));\n  };\n\n  const setPrev = () => {\n    if (page > 1) setPage(page - 1);\n  };\n\n  const setNext = () => {\n    setPage(page + 1);\n  };\n\n  const [dialogContent, setDialogContent] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n\n  const handleModalClose = () => {\n    setShowModal(false);\n  };\n\n  const handleModalOpen = useCallback(\n    (modalId, data = null) =>\n      (e) => {\n        switch (modalId) {\n          case \"add-category\":\n            // console.log(data);\n            setDialogContent(\n              <AddCategoryModalContent\n                closeHandler={handleModalClose}\n                cropProfiles={crops}\n                activityCategories={activityCategories}\n              />\n            );\n            break;\n\n          case \"add-task\":\n            setDialogContent(\n              <AddTaskModalContent\n                closeHandler={handleModalClose}\n                cropProfiles={crops}\n                activityCategories={activityCategories}\n              />\n            );\n            break;\n\n          case \"delete-activity\":\n            setDialogContent(\n              <DeleteActivityModalContent\n                closeHandler={handleModalClose}\n                data={data}\n              />\n            );\n            break;\n\n          default:\n            setDialogContent(null);\n            break;\n        }\n        setShowModal(true);\n      },\n    [activityCategories, crops]\n  );\n\n  useEffect(() => {\n    const taskFilters = {\n      page,\n      search: query\n    };\n\n    if (tasks !== '') {\n      taskFilters.task_name = tasks;\n    } else {\n      delete taskFilters.task;\n    }\n\n    if (categories !== '') {\n      taskFilters.category = categories;\n    } else {\n      delete taskFilters.category;\n    }\n\n    if (status === \"\") {\n      delete taskFilters.status;\n    } else {\n      taskFilters.status = status;\n    }\n\n    dispatch(getCropProfiles());\n    dispatch(getActivityCategories());\n    dispatch(getCropCalendar(taskFilters));\n  }, [categories, dispatch, page, query, status, tasks]);\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"Category\",\n        accessor: \"category.category\",\n      },\n      {\n        Header: \"Task\",\n        accessor: \"task\",\n      },\n      {\n        Header: \"Crop Profile\",\n        accessor: \"crop_profile.crop_name\",\n      },\n      {\n        Header: \"Expected Done Date\",\n        accessor: \"due_date\",\n      },\n      {\n        Header: \"Weight On Yield\",\n        accessor: \"crop_profile.yield\",\n      },\n      {\n        Header: \"Edit\",\n        Cell: ({ value, row }) => {\n          // const { original } = row;\n          // console.log(original);\n          return (\n            <IconButton>\n              <EditIcon />\n            </IconButton>\n          );\n        },\n      },\n      {\n        Header: \"Delete\",\n        Cell: ({ value, row }) => {\n          const { original } = row;\n          // console.log(original);\n          return (\n            <IconButton onClick={handleModalOpen(\"delete-activity\", original)}>\n              <DeleteIcon />\n            </IconButton>\n          );\n        },\n      },\n    ],\n    [handleModalOpen]\n  );\n\n  const tableData = useMemo(() => cropCalendar?.data || [], [cropCalendar]);\n\n  return (\n    <React.Fragment>\n      <section>\n        <nav id=\"quick-nav\">\n          <BreadCrumb\n            breadcrumbs={[\n              <Typography key=\"1\" color=\"inherit\">\n                Configurations\n              </Typography>,\n              <Typography key=\"2\" color=\"primary.main\">\n                Crop calendar\n              </Typography>,\n            ]}\n          />\n        </nav>\n\n        <Stack\n          direction=\"row\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n          sx={{\n            flexWrap: {\n              xs: \"wrap\",\n              md: \"no-wrap\",\n            },\n          }}\n        >\n          <CustomSearchField\n            InputProps={{\n              ref: queryRef,\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon fontSize=\"small\" />\n                </InputAdornment>\n              ),\n            }}\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            placeholder=\"Search Crop\"\n            sx={{\n              width: \"100%\",\n              maxWidth: { sm: \"250px\" },\n            }}\n          />\n\n          <Stack direction=\"row\" spacing={2} sx={{ my: 2 }}>\n            <Button\n              href=\"/configurations/crop-calendar/manage-categories\"\n              value=\"Manage Categories\"\n              disableElevation\n            />\n            <Button\n              onClick={handleModalOpen(\"add-category\")}\n              value=\"Add Category\"\n              disableElevation\n            />\n\n            <Button\n              onClick={handleModalOpen(\"add-task\")}\n              value=\"Add Task\"\n              disableElevation\n            />\n          </Stack>\n        </Stack>\n\n        <div className=\"farmmanagementheader flex flex-row items-center overflow-x-auto\" style={{\n          marginTop: \"1rem !important\",\n        }}>\n          <span className=\"filtertext mr-2 ml-2\">Filter by:</span>\n\n          <Stack direction=\"row\" alignItems=\"center\" flexWrap=\"wrap\">\n            <div className=\"mr-2 ml-2 component-wrapper\">\n              <CustomSelect\n                width=\"100%\"\n                height=\"32px\"\n                noneLabel={<em>All Categories</em>}\n                options={activityCategories?.map((category) => ({\n                  name: category.category,\n                  value: category.id,\n                }))}\n                sx={{ borderRadius: \"5px\" }}\n                backgroundColor=\"#FFFFFF\"\n                onChange={(e) => setCategory(e.target.value)}\n              />\n            </div>\n\n            <div className=\"mr-2 ml-2 component-wrapper\">\n              <CustomSelect\n                width=\"100%\"\n                height=\"32px\"\n                borderRadius=\"5px\"\n                backgroundColor=\"#FFFFFF\"\n                noneLabel={<em>All Tasks</em>}\n                options={cropCalendar?.data?.map((task) => ({\n                  name: task?.task,\n                  value: task?.task?.toLowerCase(),\n                }))}\n                onChange={(e) => setTasks(e.target.value)}\n              />\n            </div>\n\n            {/* <div className=\"mr-2 ml-2 component-wrapper\">\n              <CustomSelect\n                width=\"100%\"\n                height=\"32px\"\n                noneLabel={<em>All</em>}\n                options={[\n                  { name: \"Active\", value: true },\n                  { name: \"Not Active\", value: false },\n                ]}\n                borderRadius=\"5px\"\n                backgroundColor=\"#FFFFFF\"\n                onChange={(e) => setStatus(e.target.value)}\n              />\n            </div> */}\n          </Stack>\n        </div>\n\n        <Stack\n          direction=\"row\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n        >\n          <h2 className=\"with-spinner\" style={{ fontSize: \"20px\" }}>\n            <span>All Activities</span>\n            {cropCalendar.loading ? <Spinner size={20} color=\"primary\" /> : \"\"}\n          </h2>\n\n          <TableControls\n            nextHandler={() => setNext()}\n            prevHandler={() => setPrev()}\n            limitHandler={(e) => handleLimitChange(e)}\n            totalRecords={cropCalendar?.data?.length || 0}\n            page={page}\n            limit={limit}\n            showLimit={false}\n            hideOnMobile={true}\n          />\n        </Stack>\n\n        <Box>\n          <Table\n            columns={columns}\n            data={tableData}\n            isLoading={cropCalendar.loading}\n          />\n          <TableControls\n            nextHandler={() => setNext()}\n            prevHandler={() => setPrev()}\n            limitHandler={(e) => handleLimitChange(e)}\n            totalRecords={cropCalendar?.data?.length || 0}\n            page={page}\n            limit={limit}\n          />\n        </Box>\n      </section>\n\n      <Dialog open={showModal} closeHandler={handleModalClose}>\n        {dialogContent}\n      </Dialog>\n    </React.Fragment>\n  );\n}\n\nexport default CropCalendarSection;\n"],"names":["props","sx","placeholder","value","rest","p","border","borderRadius","backgroundColor","borderColor","padding","Search","createSvgIcon","xmlns","viewBox","fill","fillRule","d","clipRule","dispatch","useDispatch","useState","page","setPage","limit","setLimit","query","setQuery","tasks","setTasks","categories","setCategory","status","queryRef","useRef","activityCategories","useSelector","state","ConfigReducer","data","cropCalendar","crops","cropProfiles","handleLimitChange","e","parseInt","target","setPrev","setNext","dialogContent","setDialogContent","showModal","setShowModal","handleModalClose","handleModalOpen","useCallback","modalId","closeHandler","useEffect","taskFilters","search","task_name","task","category","getCropProfiles","getActivityCategories","getCropCalendar","columns","useMemo","Header","accessor","Cell","row","original","onClick","tableData","id","breadcrumbs","color","direction","justifyContent","alignItems","flexWrap","xs","md","InputProps","ref","startAdornment","position","fontSize","onChange","width","maxWidth","sm","spacing","my","href","disableElevation","className","style","marginTop","height","noneLabel","options","map","name","toLowerCase","loading","size","nextHandler","prevHandler","limitHandler","totalRecords","length","showLimit","hideOnMobile","isLoading","open"],"sourceRoot":""}