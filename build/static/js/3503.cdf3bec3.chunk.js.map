{"version":3,"file":"static/js/3503.cdf3bec3.chunk.js","mappings":"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","sources":["layouts/userManagement/Users.jsx"],"sourcesContent":["import React, {\n  useState,\n  useEffect,\n  useMemo,\n  useRef,\n  useCallback,\n} from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport moment from \"moment\";\n\nimport Stack from \"@mui/material/Stack\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport IconButton from \"@mui/material/IconButton\";\n\nimport { Search as SearchIcon } from \"../../components/icons/search\";\n\nimport { BiEditAlt as EditIcon } from \"react-icons/bi\";\nimport { RiDeleteBinLine as DeleteIcon } from \"react-icons/ri\";\n\nimport Table from \"../../components/Table/UserTable\";\nimport TableControls from \"../../components/Table/TableControls\";\nimport CustomSearchField from \"../../components/common/CustomSearchField\";\nimport BreadCrumb from \"../../components/common/CustomBreadCrumbs\";\nimport Button from \"../../components/common/Button\";\nimport Dialog from \"../../components/Modals/Dialog\";\nimport Spinner from \"../../components/Spinner\";\n\nimport Can from \"../../utils/rbac/Can\";\n\nimport { getUsers } from \"../../redux/actions/UserManagementActions\";\n\nimport {\n  AddNewUser as AddUserModalContent,\n  EditUser as EditUserModalContent,\n  DeleteUser as DeleteUserModalContent,\n  UploadUsers as UploadUsersModalContent,\n} from \"./ModalContents\";\nimport { getRoles, getStates } from \"../../redux/actions/AppActions\";\n// import { Tooltip } from \"@mui/material\";\n\nfunction Users() {\n  const dispatch = useDispatch();\n  const [page, setPage] = useState(1);\n  const [limit, setLimit] = useState(15);\n  const [query, setQuery] = useState(\"\");\n  const [roles, setRoles] = useState({});\n\n  const [dialogContent, setDialogContent] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n\n  const queryRef = useRef(null);\n\n  const authenticatedUser = useSelector(\n    (state) =>\n      state.AuthReducer.userProfile ||\n      JSON.parse(sessionStorage.getItem(\"user_profile\"))\n  );\n  const users = useSelector((state) => state.UserManagementReducer.users);\n  const states = useSelector((state) => state.AppReducer.states);\n\n  console.log(\"uÂ§sers\", users);\n\n  // onChange function for select\n  const handleLimitChange = (e) => {\n    setLimit(parseInt(e.target.value));\n  };\n\n  const setPrev = () => {\n    if (page > 1) setPage(page - 1);\n  };\n\n  const setNext = () => {\n    setPage(page + 1);\n  };\n\n  const handleModalClose = () => {\n    setShowModal(false);\n  };\n\n  const setFormattedRoles = (data) => {\n    const formattedRoles = {};\n    data.forEach((role) => {\n      formattedRoles[role.id] = role.role;\n    });\n    setRoles(formattedRoles);\n  };\n\n  const handleModalOpen = useCallback(\n    (modalId, data = null) =>\n      (e) => {\n        switch (modalId) {\n          case \"add-user\":\n            // console.log(data);\n            setDialogContent(\n              <AddUserModalContent\n                closeHandler={handleModalClose}\n                roles={data?.roles}\n              />\n            );\n            break;\n\n          case \"upload-users\":\n            setDialogContent(\n              <UploadUsersModalContent closeHandler={handleModalClose} />\n            );\n            break;\n\n          case \"edit-user\":\n            setDialogContent(\n              <EditUserModalContent\n                closeHandler={handleModalClose}\n                data={data?.data}\n                roles={data?.roles}\n              />\n            );\n            break;\n\n          case \"delete-user\":\n            setDialogContent(\n              <DeleteUserModalContent\n                closeHandler={handleModalClose}\n                data={data}\n              />\n            );\n            break;\n\n          default:\n            setDialogContent(null);\n            break;\n        }\n        setShowModal(true);\n      },\n    []\n  );\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"First Name\",\n        accessor: \"first_name\",\n      },\n      {\n        Header: \"Last Name\",\n        accessor: \"last_name\",\n      },\n      {\n        Header: \"Email\",\n        accessor: \"email\",\n      },\n      {\n        Header: \"Group\",\n        Cell: ({ value, row }) => {\n          const { original } = row;\n          const getRoleName = (roleId) => {\n            if (/\\d+/g.test(`${roleId}`)) {\n              return roles[roleId] || \"-\";\n            }\n\n            return roleId;\n          };\n          return <span>{getRoleName(original.group)}</span>;\n        },\n      },\n      {\n        Header: \"Association\",\n        accessor: \"association\",\n        Cell: ({ value, row }) => {\n          const { original } = row;\n          return <span>{original.association || \"-\"}</span>;\n        },\n      },\n      {\n        Header: \"State\",\n        accessor: \"state\",\n        Cell: ({ value, row }) => {\n          const { original } = row;\n          return <span>{original.state || \"-\"}</span>;\n        },\n      },\n      {\n        Header: \"Last Login\",\n        accessor: \"last_login\",\n        Cell: ({ value, row }) => {\n          const { original } = row;\n          return original.last_login ? (\n            <Stack direction='column' spacing={0.2}>\n              <span>{moment(original.last_login).format(\"YYYY-MM-DD\")}</span>\n              <Typography\n                variant='span'\n                fontSize='12px'\n                sx={{ color: (theme) => theme.palette.primary.main }}\n              >\n                {moment(original.last_login).format(\"HH:mm:ss\")}\n              </Typography>\n            </Stack>\n          ) : (\n            <span>{original.last_login || \"-\"}</span>\n          );\n        },\n      },\n      {\n        Header: \"Edit\",\n        Cell: ({ value, row }) => {\n          const { original } = row;\n          // console.log(original);\n          return (\n            <Can\n              role={authenticatedUser?.my_role?.role}\n              perform='user:edit'\n              yes={() => (\n                <IconButton href={`/user-management/edit-user/${original.id}`}>\n                  <EditIcon />\n                </IconButton>\n              )}\n              no={() => null}\n              // no={() => (\n              //   <Tooltip title={`${authenticatedUser?.my_role?.role} cannot perform this action`}>\n              //     <IconButton>\n              //       <EditIcon />\n              //     </IconButton>\n              //   </Tooltip>\n              // )}\n            />\n          );\n        },\n      },\n      {\n        Header: \"Delete\",\n        Cell: ({ value, row }) => {\n          const { original } = row;\n          // console.log(original);\n          return (\n            <Can\n              role={authenticatedUser?.my_role?.role}\n              perform='user:delete'\n              yes={() => (\n                <IconButton onClick={handleModalOpen(\"delete-user\", original)}>\n                  <DeleteIcon />\n                </IconButton>\n              )}\n              no={() => null}\n              // no={() => (\n              //   <Tooltip title={`${authenticatedUser?.my_role?.role} cannot perform this action`}>\n              //     <IconButton>\n              //       <DeleteIcon/>\n              //     </IconButton>\n              //   </Tooltip>\n              // )}\n            />\n          );\n        },\n      },\n    ],\n    [authenticatedUser?.my_role?.role, handleModalOpen, roles]\n  );\n\n  const tableData = useMemo(\n    () =>\n      users?.data.map((user) => {\n        return {\n          ...user,\n          state: states[user.state]?.name,\n        };\n      }) || [],\n    [users, states]\n  );\n\n  // const tableData = [];\n\n  useEffect(() => {\n    const filters = { page, per_page: limit };\n\n    if (query && query.length > 1) {\n      filters.search_by_name = query;\n    }\n\n    dispatch(getUsers(filters));\n    dispatch(getStates({}));\n    getRoles({}, setFormattedRoles);\n  }, [dispatch, page, limit, query]);\n\n  return (\n    <React.Fragment>\n      <section>\n        <nav id='quick-nav'>\n          <BreadCrumb\n            breadcrumbs={[\n              <Typography key='1' color='inherit'>\n                User Management\n              </Typography>,\n              <Typography key='2' color='primary.main'>\n                Manage Users\n              </Typography>,\n            ]}\n          />\n        </nav>\n\n        <Box\n          sx={{\n            padding: \"20px 40px\",\n            background: \"#FFFFFF\",\n            borderRadius: \"10px\",\n          }}\n        >\n          <h2 className='with-spinner' style={{ fontSize: \"20px\" }}>\n            <span>All Users</span>\n            {users.loading ? <Spinner size={20} color='primary' /> : \"\"}\n          </h2>\n\n          <Stack\n            direction='row'\n            justifyContent='space-between'\n            alignItems='center'\n            sx={{\n              flexWrap: { xs: \"wrap\", md: \"nowrap\" },\n              marginBottom: \"20px\",\n            }}\n          >\n            <CustomSearchField\n              InputProps={{\n                ref: queryRef,\n                startAdornment: (\n                  <InputAdornment position='start'>\n                    <SearchIcon fontSize='small' />\n                  </InputAdornment>\n                ),\n              }}\n              value={query}\n              onChange={(e) => setQuery(e.target.value)}\n              placeholder='Search customers'\n              sx={{\n                width: \"100%\",\n                maxWidth: { sm: \"250px\" },\n              }}\n            />\n\n            <Stack\n              direction='row'\n              spacing={2}\n              sx={{\n                mt: { xs: 2, md: 0 },\n                mb: { xs: 2, md: 0 },\n              }}\n            >\n              {/* <Can\n              role={authenticatedUser?.my_role?.role}\n              perform='user:create'\n              yes={() => ( */}\n              <Button\n                // onClick={handleModalOpen(\"add-user\", {\n                //   roles: roles || [],\n                // })}\n                href='/user-management/add-user'\n                value='Create New User'\n                disableElevation\n              />\n              {/* )}\n              no={() => null}\n              data={null}\n            /> */}\n\n              {/* <Can\n              role={authenticatedUser?.my_role?.role}\n              perform='users:upload'\n              yes={() => ( */}\n              <Button\n                onClick={handleModalOpen(\"upload-users\")}\n                value='Upload Users'\n                disableElevation\n              />\n              {/* )}\n              no={() => null}\n              data={null}\n            /> */}\n            </Stack>\n          </Stack>\n\n          <Box>\n            <Table\n              columns={columns}\n              data={tableData}\n              isLoading={users.loading}\n            />\n            <TableControls\n              nextHandler={() => setNext()}\n              prevHandler={() => setPrev()}\n              limitHandler={(e) => handleLimitChange(e)}\n              totalRecords={users?.total}\n              page={page}\n              limit={limit}\n            />\n          </Box>\n        </Box>\n      </section>\n\n      <Dialog\n        open={showModal}\n        closeHandler={handleModalClose}\n        PaperProps={{ sx: { maxWidth: \"unset\" } }}\n      >\n        {dialogContent}\n      </Dialog>\n    </React.Fragment>\n  );\n}\n\nexport default Users;\n"],"names":["dispatch","useDispatch","useState","page","setPage","limit","setLimit","query","setQuery","roles","setRoles","dialogContent","setDialogContent","showModal","setShowModal","queryRef","useRef","authenticatedUser","useSelector","state","AuthReducer","userProfile","JSON","parse","sessionStorage","getItem","users","UserManagementReducer","states","AppReducer","console","log","handleModalClose","setFormattedRoles","data","formattedRoles","forEach","role","id","handleModalOpen","useCallback","modalId","e","closeHandler","columns","useMemo","Header","accessor","Cell","value","roleId","original","row","group","test","association","last_login","direction","spacing","moment","format","variant","fontSize","sx","color","theme","palette","primary","main","my_role","perform","yes","href","no","onClick","tableData","map","user","name","useEffect","filters","per_page","length","search_by_name","getUsers","getStates","getRoles","breadcrumbs","padding","background","borderRadius","className","style","loading","size","justifyContent","alignItems","flexWrap","xs","md","marginBottom","InputProps","ref","startAdornment","position","onChange","target","placeholder","width","maxWidth","sm","mt","mb","disableElevation","isLoading","nextHandler","prevHandler","limitHandler","parseInt","handleLimitChange","totalRecords","total","open","PaperProps"],"sourceRoot":""}