{"version":3,"file":"static/js/8927.26d65b50.chunk.js","mappings":"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","sources":["components/Table/TableControls.jsx","components/common/CustomSearchField.jsx","components/icons/search.js","layouts/downloads/Downloads.jsx","redux/actions/InputActions.js"],"sourcesContent":["import React from \"react\";\n\nimport { IoIosArrowBack, IoIosArrowForward } from \"react-icons/io\";\n\nconst TableActions = ({\n  nextHandler,\n  prevHandler,\n  limitHandler,\n  page,\n  totalRecords = 0,\n  limit = 1,\n  showLimit = true,\n  hideOnMobile = false\n}) => {\n  const totalPages = Math.ceil(totalRecords / limit);\n  return (\n    <div className={`flex justify-end table-controls ${hideOnMobile ? 'hide-on-mobile' : ''} `}>\n      {!showLimit || showLimit === \"false\" || showLimit === false ? null : (\n        <div className=\"filter-input mr-5\">\n          <label>Rows per page: </label>\n          <select onChange={limitHandler}>\n            <option value=\"15\">15</option>\n            <option value=\"25\">25</option>\n            <option value=\"50\">50</option>\n            <option value=\"100\">100</option>\n          </select>\n        </div>\n      )}\n\n      <div className=\"flex text-green-500\">\n        <p className=\"px-4\">\n          Viewing {((page - 1) * limit) + 1} -{\" \"}\n          {limit * page > totalRecords ? totalRecords : limit * page} of{\" \"}\n          {totalRecords}\n        </p>\n        <button disabled={page <= 1} onClick={prevHandler}>\n          <IoIosArrowBack />\n        </button>\n        <button disabled={page >= totalPages} onClick={nextHandler}>\n          <IoIosArrowForward />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default TableActions;\n","import React from \"react\";\nimport TextField from \"@mui/material/TextField\";\n\nconst CustomSearchField = (props) => {\n  const { sx = {}, placeholder = \"\", value=\"\", ...rest } = props;\n  return (\n    <TextField\n      // defaultValue={props.value || \"\"}\n      placeholder={placeholder}\n      sx={{\n        p: 0,\n        border: \"1px solid rgba(0, 150, 136, 0.2)\",\n        borderRadius: \"5px\",\n        backgroundColor: \"#FFF\",\n        \"& *\": {\n          borderColor: \"transparent\",\n        },\n        \"& input\": {\n          padding: \"10px\",\n        },\n        ...sx,\n      }}\n      value={value}\n      {...rest}\n    />\n  );\n};\n\nexport default CustomSearchField;\n","import { createSvgIcon } from '@mui/material/utils';\n\nexport const Search = createSvgIcon(\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n    <path\n      fillRule=\"evenodd\"\n      d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Search');\n","import moment from \"moment\";\nimport React, {\n  useState,\n  useEffect,\n  useMemo,\n  useCallback,\n  useRef,\n} from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Box from \"@mui/material/Box\";\nimport Stack from \"@mui/material/Stack\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\n\nimport { RiDeleteBinLine as DeleteIcon } from \"react-icons/ri\";\nimport { BiEditAlt as EditIcon } from \"react-icons/bi\";\nimport Table from \"../../components/Table/UserTable\";\nimport TableControls from \"../../components/Table/TableControls\";\nimport Button from \"../../components/common/Button\";\nimport Spinner from \"../../components/Spinner\";\nimport Dialog from \"../../components/Modals/Dialog\";\n\nimport { Search as SearchIcon } from \"../../components/icons/search\";\n\nimport { getInputs } from \"../../redux/actions/InputActions\";\n\nimport CustomSearchField from \"../../components/common/CustomSearchField\";\nimport { InputAdornment } from \"@mui/material\";\n\nconst Downloads = () => {\n  const dispatch = useDispatch();\n  const inputs = useSelector((state) => state.InputReducer.inputs);\n  const isLoading = useSelector((state) => state.InputReducer.loading);\n  const totalInputs = useSelector((state) => state.InputReducer.total);\n\n  const [page, setPage] = useState(1);\n  const [limit, setLimit] = useState(15);\n\n  const queryRef = useRef(null);\n  const [query, setQuery] = useState(\"\");\n\n  const [dialogContent, setDialogContent] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n\n  const handleModalClose = () => {\n    setShowModal(false);\n  };\n\n  // onChange function for select\n  const handleLimitChange = (e) => {\n    setLimit(parseInt(e.target.value));\n  };\n\n  const setPrev = () => {\n    if (page > 1) setPage(page - 1);\n    // dispatch(getInputs(page - 1));\n  };\n\n  const setNext = () => {\n    setPage(page + 1);\n    // dispatch(getUsers(page + 1));\n  };\n\n  useEffect(() => {\n    dispatch(getInputs({ page }));\n  }, [dispatch, page]);\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"Name\",\n        accessor: \"name\",\n      },\n      {\n        Header: \"Description\",\n        accessor: \"description\",\n      },\n      {\n        Header: \"Tenants\",\n        accessor: \"tenant_id\",\n      },\n    ],\n    []\n  );\n\n  const tableData = useMemo(() => inputs || [], [inputs]);\n\n  return (\n    <React.Fragment>\n      <section>\n        <nav id='quick-nav'>\n          <span>Downloads</span>\n        </nav>\n\n        {/* <Stack\n          direction=\"row\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n          sx={{\n            flexWrap: { xs: \"wrap\", md: \"nowrap\" },\n          }}\n        >\n          <h2 className=\"with-spinner\" style={{ fontSize: \"20px\" }}>\n            <span>Input</span>\n            {isLoading ? <Spinner size={20} color=\"primary\" /> : null}\n          </h2>\n\n          <Button\n            value=\"Add Input Type\"\n            disableElevation\n            onClick={handleModalOpen(\"add-input\")}\n          />\n        </Stack> */}\n\n        <Box\n          sx={{\n            padding: \"20px 40px\",\n            background: \"#FFFFFF\",\n            borderRadius: \"10px\",\n          }}\n        >\n          {/* <h2 className='with-spinner' style={{ fontSize: \"20px\" }}>\n            <span>Downloads</span>\n            {users.loading ? <Spinner size={20} color='primary' /> : \"\"}\n          </h2> */}\n\n          <Box>\n            <Table columns={columns} data={tableData} isLoading={isLoading} />\n            <TableControls\n              nextHandler={() => setNext()}\n              prevHandler={() => setPrev()}\n              limitHandler={(e) => handleLimitChange(e)}\n              totalRecords={totalInputs}\n              page={page}\n              limit={limit}\n            />\n          </Box>\n        </Box>\n      </section>\n\n      <Dialog open={showModal} closeHandler={handleModalClose}>\n        {dialogContent}\n      </Dialog>\n    </React.Fragment>\n  );\n};\n\nexport default Downloads;\n","import axiosServices from \"../../services/axiosServices\";\nimport { notify } from \"../../utils/toastNotification\";\nimport { createQuery } from \"../../utils/createQuery\";\nimport { errorHandler } from \"../../utils/actionsErrorHandler\";\n\nimport {\n  GET_INPUTS,\n  GET_INPUTS_SUCCESS,\n  GET_INPUTS_FAIL,\n} from \"../types/InputTypes\";\n\nexport const addInput = (data) => async (dispatch) => {\n  try {\n    const response = await axiosServices.post(\"/input-types\", data);\n    // console.log(response);\n\n    if (response?.success) {\n      notify(\"Input created\", { type: \"success\" });\n    } else {\n      notify(response.message || \"An error occured\", { type: \"error\" });\n    }\n  } catch (error) {\n    console.log(error);\n    errorHandler(error, \"Failed to add input\");\n    return error;\n  }\n};\n\nexport const getInputs =\n  (queryParams = {}) =>\n  async (dispatch) => {\n    const page = 1;\n    const limit = 10;\n    const query = createQuery({ page, limit, ...queryParams });\n    try {\n      dispatch({\n        type: GET_INPUTS,\n      });\n\n      const response = await axiosServices.get(\n        `/viewtenants?page=${page}&limit=${limit}&query=${query}`\n      );\n      console.log(\"response\", response);\n      // return;\n      // // console.log(cropProfiles);\n      const success = response.success;\n      const inputTypes = response.result?.input_types;\n\n      // console.log(inputTypes);\n      // if (success && inputTypes) {\n      dispatch({\n        type: GET_INPUTS_SUCCESS,\n        payload: {\n          data: response.data,\n          total: response.totalpages,\n        },\n      });\n      // }\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: GET_INPUTS_FAIL,\n      });\n      errorHandler(error);\n      return error;\n    }\n  };\n\nexport const deleteInput = (data) => async (dispatch) => {\n  try {\n    const response = await axiosServices.delete(`/input-types/${data.id}`);\n    // console.log(response);\n\n    if (response?.success) {\n      notify(\"Input deleted\", { type: \"success\" });\n    } else {\n      notify(response.message || \"An error occured\", { type: \"error\" });\n    }\n  } catch (error) {\n    console.log(error);\n    errorHandler(error, \"Failed to delete input\");\n    return error;\n  }\n};\n"],"names":["nextHandler","prevHandler","limitHandler","page","totalRecords","limit","showLimit","hideOnMobile","totalPages","Math","ceil","className","onChange","value","disabled","onClick","props","sx","placeholder","rest","p","border","borderRadius","backgroundColor","borderColor","padding","Search","createSvgIcon","xmlns","viewBox","fill","fillRule","d","clipRule","dispatch","useDispatch","inputs","useSelector","state","InputReducer","isLoading","loading","totalInputs","total","useState","setPage","setLimit","useRef","dialogContent","showModal","setShowModal","useEffect","getInputs","columns","useMemo","Header","accessor","tableData","id","background","data","e","parseInt","target","handleLimitChange","open","closeHandler","addInput","axiosServices","response","success","notify","type","message","console","log","errorHandler","queryParams","query","createQuery","GET_INPUTS","result","input_types","GET_INPUTS_SUCCESS","payload","totalpages","GET_INPUTS_FAIL","deleteInput"],"sourceRoot":""}