{"version":3,"file":"static/js/3626.dc8d16a9.chunk.js","mappings":"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","sources":["components/common/StatusIndicator.jsx","layouts/userManagement/Farmers.jsx"],"sourcesContent":["import React from \"react\";\n\nconst Status = (props) => {\n  const { value, type = \"pending\" } = props;\n\n  const wrapperStyle = {\n    boxSizing: \"border-box\",\n    width: \"auto\",\n    height: \"26px\",\n    padding: \"8px\",\n    borderRadius: \"13px\",\n    borderWidth: \"0.6px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  };\n\n  const textStyle = {\n    fontSize: \"12px\",\n    fontWeight: 600,\n    display: \"block\",\n  };\n\n  switch (type) {\n    case \"success\":\n      wrapperStyle.backgroundColor = \"#F6FFED\";\n      wrapperStyle.borderColor = \"#B7EB8F\";\n      textStyle.color = \"#52C41A\";\n      break;\n\n    case \"pending\":\n      wrapperStyle.backgroundColor = \"#FFF7E6\";\n      wrapperStyle.borderColor = \"#FA8C16\";\n      textStyle.color = \"#FA8C16\";\n      break;\n\n    case \"error\":\n      wrapperStyle.backgroundColor = \"#FFF1F0\";\n      wrapperStyle.borderColor = \"#F5222D\";\n      textStyle.color = \"#F5222D\";\n      break;\n\n    default:\n      wrapperStyle.backgroundColor = \"#FFF1F0\";\n      wrapperStyle.borderColor = \"#F5222D\";\n      textStyle.color = \"#F5222D\";\n      break;\n  }\n  return (\n    <div style={wrapperStyle}>\n      <span style={textStyle}>{value}</span>\n    </div>\n  );\n};\n\nexport default Status;\n\n// \"#FFF1F0\"\n// borderColor\n// \"#F5222D\"\n","import React, {\n  useState,\n  useEffect,\n  useMemo,\n  useRef,\n  useCallback,\n} from \"react\";\nimport { BiEditAlt as EditIcon } from \"react-icons/bi\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport moment from \"moment\";\n// import CsvDownloader from \"react-csv-downloader\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport Stack from \"@mui/material/Stack\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport IconButton from \"@mui/material/IconButton\";\n\nimport { Search as SearchIcon } from \"../../components/icons/search\";\n\nimport Table from \"../../components/Table/UserTable\";\nimport TableControls from \"../../components/Table/TableControls\";\nimport CustomSearchField from \"../../components/common/CustomSearchField\";\nimport CustomSelect from \"../../components/common/CustomSelect\";\nimport StatusIndicator from \"../../components/common/StatusIndicator\";\nimport BreadCrumb from \"../../components/common/CustomBreadCrumbs\";\nimport Button from \"../../components/common/Button\";\nimport Dialog from \"../../components/Modals/Dialog\";\n\nimport {\n  getFarmers,\n  exportFarmerData,\n} from \"../../redux/actions/UserManagementActions\";\nimport { SET_LOCALS } from \"../../redux/types/AppActionTypes\";\nimport { getLocalGovt, getStates } from \"../../redux/actions/AppActions\";\nimport Can from \"../../utils/rbac/Can\";\nimport { UploadFarmer as UploadFarmerModalContent } from \"./ModalContents\";\n// import { Tooltip } from \"@mui/material\";\n\n// const { notify } = require(\"../../utils/toastNotification\");\n\nfunction Farmers() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const farmers = useSelector((state) => state.UserManagementReducer.farmers);\n  const [page, setPage] = useState(1);\n  const [limit, setLimit] = useState(15);\n  const [query, setQuery] = useState(\"\");\n\n  const [status, setStatus] = useState(\"\");\n  const [state, setState] = useState(\"\");\n  const [lga, setLga] = useState(\"\");\n  const [season, setSeason] = useState(\"\");\n\n  const [dialogContent, setDialogContent] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n\n  const authenticatedUser = useSelector(\n    (state) =>\n      state.AuthReducer.userProfile ||\n      JSON.parse(sessionStorage.getItem(\"user_profile\"))\n  );\n\n  const availableStates = useSelector(\n    (state) => state.AppReducer?.states || {}\n  );\n\n  const localGovts = useSelector((state) => state.AppReducer?.localGovt || []);\n\n  const stateChangeHandler = (e) => {\n    console.log({ state: e.target.value });\n    if (!e.target.value) {\n      setLga(\"\");\n      setState(\"\");\n      dispatch({\n        type: SET_LOCALS,\n        payload: {\n          localGovt: [],\n        },\n      });\n    } else {\n      setState(e.target.value);\n      dispatch(getLocalGovt(e.target.value));\n    }\n  };\n\n  const queryRef = useRef(null);\n\n  // onChange function for select\n  const handleLimitChange = (e) => {\n    setLimit(parseInt(e.target.value));\n  };\n\n  const setPrev = () => {\n    if (page > 1) setPage(page - 1);\n  };\n\n  const setNext = () => {\n    setPage(page + 1);\n  };\n\n  const handleModalClose = () => {\n    setShowModal(false);\n  };\n\n  const handleModalOpen = useCallback(\n    (modalId, data = null) =>\n      (e) => {\n        switch (modalId) {\n          case \"upload-farmers\":\n            // console.log(data);\n            setDialogContent(\n              <UploadFarmerModalContent closeHandler={handleModalClose} />\n            );\n            break;\n\n          default:\n            setDialogContent(null);\n            break;\n        }\n        setShowModal(true);\n      },\n    []\n  );\n\n  const handleExport = (e) => {\n    // e.preventDefault();\n    const data = {\n      tenant: authenticatedUser?.tenant?.id,\n      tenant_id: authenticatedUser?.tenant?.tenant_id,\n    };\n    dispatch(exportFarmerData(data, navigate));\n  };\n\n  useEffect(() => {\n    const body = {\n      page,\n      per_page: limit,\n      search_farmer_by_name: query,\n    };\n\n    if (state !== \"\") {\n      body.state = state;\n    } else {\n      delete body.state;\n    }\n\n    if (status !== \"\") {\n      body.status = status;\n    } else {\n      delete body.status;\n    }\n\n    if (lga !== \"\") {\n      body.lga = lga;\n    } else {\n      delete body.lga;\n    }\n\n    if (season !== \"\") {\n      body.season = season;\n    } else {\n      delete body.season;\n    }\n\n    dispatch(getFarmers(body));\n    dispatch(getStates());\n  }, [dispatch, page, limit, status, state, lga, season, query]);\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"Surname\",\n        accessor: \"last_name\",\n      },\n      {\n        Header: \"Other Names\",\n        Cell: ({ value, row }) => {\n          const { original } = row;\n          // console.log(original);\n          return (\n            <span style={{ textTransform: \"capitalize\" }}>{`${\n              original.first_name\n            } ${original?.middle_name?.charAt(0).toUpperCase()}.`}</span>\n          );\n        },\n      },\n      {\n        Header: \"Mobile\",\n        accessor: \"mobile\",\n      },\n      {\n        Header: \"Status\",\n        Cell: ({ value, row }) => {\n          const { original } = row;\n          // console.log(original);\n          return (\n            <StatusIndicator\n              value={original.status ? \"Farm Added\" : \"Farm Not Added\"}\n              type={original.status ? \"success\" : \"error\"}\n            />\n          );\n        },\n      },\n      {\n        Header: \"State\",\n        accessor: \"state.name\",\n      },\n      {\n        Header: \"LGA\",\n        accessor: \"lga.local_name\",\n      },\n      {\n        Header: \"Date Created\",\n        accessor: \"date_created\",\n        Cell: ({ value, row }) => {\n          const { original } = row;\n          // console.log(original);\n          return (\n            <Stack direction=\"column\" spacing={0.2}>\n              <span>{moment(original.date_created).format(\"YYYY-MM-DD\")}</span>\n              <Typography\n                variant=\"span\"\n                fontSize=\"12px\"\n                sx={{ color: (theme) => theme.palette.primary.main }}\n              >\n                {moment(original.date_created).format(\"HH:mm:ss\")}\n              </Typography>\n            </Stack>\n          );\n        },\n      },\n      {\n        Header: \"Edit\",\n        Cell: ({ value, row }) => {\n          const { original } = row;\n          // console.log(original);\n          return (\n            <Can\n              role={authenticatedUser?.my_role?.role}\n              perform=\"farmer:edit\"\n              yes={() => (\n                <IconButton\n                  href={`/user-management/edit-farmer/${original.id}`}\n                >\n                  <EditIcon />\n                </IconButton>\n              )}\n              no={() => (\n                null\n                // <Tooltip\n                //   title={`${authenticatedUser?.my_role?.role} cannot perform this action`}\n                // >\n                //   <IconButton>\n                //     <EditIcon />\n                //   </IconButton>\n                // </Tooltip>\n              )}\n            />\n          );\n        },\n      },\n    ],\n    [authenticatedUser?.my_role?.role]\n  );\n\n  const tableData = useMemo(() => farmers.data || [], [farmers]);\n  // const csvData = tableData;\n\n  return (\n    <React.Fragment>\n      <section>\n        <nav id=\"quick-nav\">\n          <BreadCrumb\n            breadcrumbs={[\n              <Typography key=\"1\" color=\"inherit\">\n                User Management\n              </Typography>,\n              <Typography key=\"2\" color=\"primary.main\">\n                Manage Farmers\n              </Typography>,\n            ]}\n          />\n        </nav>\n\n        <Stack\n          direction=\"row\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n          sx={{\n            flexWrap: { xs: \"wrap\", lg: \"nowrap\" },\n          }}\n        >\n          <CustomSearchField\n            InputProps={{\n              ref: queryRef,\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon fontSize=\"small\" />\n                </InputAdornment>\n              ),\n            }}\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            placeholder=\"Search\"\n            sx={{\n              width: \"100%\",\n              maxWidth: { sm: \"300px\" },\n            }}\n          />\n\n          <Stack\n            direction=\"row\"\n            spacing={2}\n            sx={{\n              mt: { xs: 2, lg: 0 },\n              mb: { xs: 2, lg: 0 },\n            }}\n          >\n            <Can\n              role={authenticatedUser?.my_role?.role}\n              perform=\"farmer:create\"\n              yes={() => (\n                <Button\n                  href=\"/user-management/add-farmer\"\n                  // onClick={handler}\n                  value=\"Add New Farmer\"\n                  disableElevation\n                />\n              )}\n              no={() => null}\n              data={null}\n            />\n            <Can\n              role={authenticatedUser?.my_role?.role}\n              perform=\"farmers:upload\"\n              yes={() => (\n                <Button\n                  onClick={handleModalOpen(\"upload-farmers\")}\n                  value=\"Upload Farmers\"\n                  disableElevation\n                />\n              )}\n              no={() => null}\n              data={null}\n            />\n\n            {/* <Can\n              role={authenticatedUser?.my_role?.role}\n              perform=\"farmers:bulk-edit\"\n              yes={() => (\n                <Button\n                  onClick={handler}\n                  disabled={true}\n                  value=\"Bulk Edit Farmer\"\n                  disableElevation\n                />\n              )}\n              no={() => null}\n              data={null}\n            /> */}\n          </Stack>\n        </Stack>\n\n        <div className=\"farmmanagementheader flex flex-row items-stretch overflow-x-auto\">\n          <div style={{ flexGrow: 1 }}>\n            <span className=\"filtertext mr-2 ml-2\">Filter by:</span>\n\n            <Stack direction=\"row\" alignItems=\"center\" flexWrap=\"wrap\">\n              <div className=\"mr-2 ml-2 component-wrapper\">\n                <CustomSelect\n                  width=\"100%\"\n                  height=\"32px\"\n                  borderRadius=\"5px\"\n                  backgroundColor=\"#FFFFFF\"\n                  noneLabel={<em>Status</em>}\n                  options={[\n                    { name: \"Farm Added\", value: 1 },\n                    { name: \"Farm Not Added\", value: 0 },\n                  ]}\n                  onChange={(e) => setStatus(e.target.value)}\n                />\n              </div>\n\n              <div className=\"mr-2 ml-2 component-wrapper\">\n                <CustomSelect\n                  width=\"100%\"\n                  height=\"32px\"\n                  noneLabel={<em>State</em>}\n                  options={Object.values(availableStates).map((eachState) => {\n                    // console.log(eachState);\n                    return {\n                      name: eachState.name,\n                      value: eachState.state_id,\n                    };\n                  })}\n                  sx={{ borderRadius: \"5px\" }}\n                  backgroundColor=\"#FFFFFF\"\n                  onChange={stateChangeHandler}\n                />\n              </div>\n\n              <div className=\"mr-2 ml-2 component-wrapper\">\n                <CustomSelect\n                  width=\"100%\"\n                  height=\"32px\"\n                  noneLabel={<em>LGA</em>}\n                  options={localGovts.map((eachLga) => {\n                    // console.log(eachLga);\n                    return {\n                      name: eachLga.local_name,\n                      value: eachLga.local_id,\n                    };\n                  })}\n                  borderRadius=\"5px\"\n                  backgroundColor=\"#FFFFFF\"\n                  onChange={(e) => setLga(e.target.value)}\n                />\n              </div>\n\n              <div className=\"mr-2 ml-2 component-wrapper\">\n                <CustomSelect\n                  width=\"100%\"\n                  height=\"32px\"\n                  noneLabel={<em>Season</em>}\n                  options={[\n                    { name: \"Rainy Season\", value: \"Rainy\" },\n                    { name: \"Dry Season\", value: \"Dry\" },\n                    { name: \"Harmattan\", value: \"harmattan\" },\n                  ]}\n                  borderRadius=\"5px\"\n                  backgroundColor=\"#FFFFFF\"\n                  onChange={(e) => setSeason(e.target.value)}\n                />\n              </div>\n            </Stack>\n          </div>\n\n          {!authenticatedUser.tenant || !authenticatedUser.tenant_id ? null : (\n            <div\n              className=\"flex mr-2 ml-2 component-wrapper\"\n              style={{ justifyContent: \"flex-end\", alignItems: \"flex-end\" }}\n            >\n              <Button\n                value=\"Export data\"\n                disableElevation\n                onClick={handleExport}\n                sx={{\n                  color: (theme) => theme.palette.primary.main,\n                  backgroundColor: \"white\",\n                  height: \"32px\",\n                }}\n              />\n              {/* <CsvDownloader\n              datas={csvData}\n              filename=\"FARMER_EXPORTED_DATA\"\n              extension=\".csv\"\n              // separator=\";\"\n              disabled={csvData.length === 0}\n            >\n              <Button\n                value=\"Export data\"\n                disableElevation\n                disabled={csvData.length === 0}\n                sx={{\n                  color: (theme) => theme.palette.primary.main,\n                  backgroundColor: \"white\",\n                  height: \"32px\",\n                }}\n              />\n            </CsvDownloader> */}\n            </div>\n          )}\n        </div>\n\n        <Box>\n          <Table\n            columns={columns}\n            data={tableData}\n            isLoading={farmers.loading}\n          />\n          <TableControls\n            nextHandler={() => setNext()}\n            prevHandler={() => setPrev()}\n            limitHandler={(e) => handleLimitChange(e)}\n            totalRecords={farmers.total}\n            page={page}\n            limit={limit}\n          />\n        </Box>\n      </section>\n\n      <Dialog\n        open={showModal}\n        closeHandler={handleModalClose}\n        PaperProps={{ sx: { maxWidth: \"unset\" } }}\n      >\n        {dialogContent}\n      </Dialog>\n    </React.Fragment>\n  );\n}\n\nexport default Farmers;\n"],"names":["props","value","type","wrapperStyle","boxSizing","width","height","padding","borderRadius","borderWidth","display","justifyContent","alignItems","textStyle","fontSize","fontWeight","backgroundColor","borderColor","color","style","dispatch","useDispatch","navigate","useNavigate","farmers","useSelector","state","UserManagementReducer","useState","page","setPage","limit","setLimit","query","setQuery","status","setStatus","setState","lga","setLga","season","setSeason","dialogContent","setDialogContent","showModal","setShowModal","authenticatedUser","AuthReducer","userProfile","JSON","parse","sessionStorage","getItem","availableStates","AppReducer","states","localGovts","localGovt","queryRef","useRef","handleModalClose","handleModalOpen","useCallback","modalId","e","closeHandler","useEffect","body","per_page","search_farmer_by_name","getFarmers","getStates","columns","useMemo","Header","accessor","Cell","original","row","textTransform","first_name","middle_name","charAt","toUpperCase","direction","spacing","moment","date_created","format","variant","sx","theme","palette","primary","main","role","my_role","perform","yes","href","id","no","tableData","data","breadcrumbs","flexWrap","xs","lg","InputProps","ref","startAdornment","position","onChange","target","placeholder","maxWidth","sm","mt","mb","disableElevation","onClick","className","flexGrow","noneLabel","options","name","Object","values","map","eachState","state_id","console","log","getLocalGovt","SET_LOCALS","payload","eachLga","local_name","local_id","tenant","tenant_id","exportFarmerData","isLoading","loading","nextHandler","prevHandler","limitHandler","parseInt","handleLimitChange","totalRecords","total","open","PaperProps"],"sourceRoot":""}