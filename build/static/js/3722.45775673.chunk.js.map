{"version":3,"file":"static/js/3722.45775673.chunk.js","mappings":"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","sources":["components/Modals/globals.js","components/Table/TableControls.jsx","components/Table/TableWithCheck.jsx","layouts/Payment/Collections.jsx","layouts/Payment/ModalContents/index.js","../node_modules/@mui/material/DialogActions/dialogActionsClasses.js","../node_modules/@mui/material/DialogActions/DialogActions.js"],"sourcesContent":["export const textFieldStyles = {\n  borderRadius: \"5px\",\n  backgroundColor: \"#F3F3F4\",\n  width: { md: \"477.61px\", xs: \"100%\" },\n  \"& fieldset\": {\n    border: \"none\"\n  }\n};\n\nexport const dialogContentStyles = {\n  minWidth: { xs: \"320px\", md: \"initial\" }\n};\n\nexport const dialogContentStyles2 = {\n  minWidth: { xs: \"520px\", md: \"initial\" }\n};","import React from \"react\";\n\nimport { IoIosArrowBack, IoIosArrowForward } from \"react-icons/io\";\n\nconst TableActions = ({\n  nextHandler,\n  prevHandler,\n  limitHandler,\n  page,\n  totalRecords = 0,\n  limit = 1,\n  showLimit = true,\n  hideOnMobile = false\n}) => {\n  const totalPages = Math.ceil(totalRecords / limit);\n  return (\n    <div className={`flex justify-end table-controls ${hideOnMobile ? 'hide-on-mobile' : ''} `}>\n      {!showLimit || showLimit === \"false\" || showLimit === false ? null : (\n        <div className=\"filter-input mr-5\">\n          <label>Rows per page: </label>\n          <select onChange={limitHandler}>\n            <option value=\"15\">15</option>\n            <option value=\"25\">25</option>\n            <option value=\"50\">50</option>\n            <option value=\"100\">100</option>\n          </select>\n        </div>\n      )}\n\n      <div className=\"flex text-green-500\">\n        <p className=\"px-4\">\n          Viewing {((page - 1) * limit) + 1} -{\" \"}\n          {limit * page > totalRecords ? totalRecords : limit * page} of{\" \"}\n          {totalRecords}\n        </p>\n        <button disabled={page <= 1} onClick={prevHandler}>\n          <IoIosArrowBack />\n        </button>\n        <button disabled={page >= totalPages} onClick={nextHandler}>\n          <IoIosArrowForward />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default TableActions;\n","import React, { useEffect } from \"react\";\nimport { useTable, useRowSelect } from \"react-table\";\nimport Spinner from \"../Spinner\";\n\nexport default function TableWithCheck({ columns, data, isLoading = false, setSelectedRows = () => {} }) {\n  const IndeterminateCheckbox = React.forwardRef(\n    ({ indeterminate, ...rest }, ref) => {\n      const defaultRef = React.useRef();\n      const resolvedRef = ref || defaultRef;\n      React.useEffect(() => {\n        resolvedRef.current.indeterminate = indeterminate;\n      }, [resolvedRef, indeterminate]);\n      return (\n        <>\n          <input type=\"checkbox\" ref={resolvedRef} {...rest} />\n        </>\n      );\n    }\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    selectedFlatRows,\n  } = useTable({ columns, data }, useRowSelect, (hooks) => {\n    hooks.visibleColumns.push((columns) => [\n      // Let's make a column for selection\n      {\n        id: \"selection\",\n        Header: ({ getToggleAllRowsSelectedProps }) => (\n          <div>\n            <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\n          </div>\n        ),\n        Cell: ({ row }) => {\n          // const { original } = row;\n          // console.log(\"kdkdkddk\", row.getToggleRowSelectedProps());\n          const checkProps = row.getToggleRowSelectedProps();\n          return (\n            <div>\n              <IndeterminateCheckbox {...checkProps} />\n            </div>\n          );\n        },\n      },\n      ...columns,\n    ]);\n  });\n\n  // console.log('flatRows', selectedFlatRows);\n  useEffect(() => {\n    setSelectedRows(selectedFlatRows.map(\n      d => d.original\n    ));\n  }, [selectedFlatRows, setSelectedRows]);\n\n  return (\n    <div className=\"mt-2 mb-5 flex flex-col overflow-x-auto border\">\n      <div className=\"-my-2 -mx-4 sm:-mx-6 lg:-mx-8\">\n        <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n          <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n            <table\n              {...getTableProps()}\n              className=\"min-w-full divide-y divide-gray-200\"\n            >\n              <thead className=\"bg-gray-50\">\n                {headerGroups.map((headerGroup) => (\n                  <tr {...headerGroup.getHeaderGroupProps()}>\n                    {headerGroup.headers.map((column) => (\n                      <th\n                        {...column.getHeaderProps()}\n                        scope=\"col\"\n                        className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                      >\n                        {column.render(\"Header\")}\n                      </th>\n                    ))}\n                  </tr>\n                ))}\n              </thead>\n              <tbody\n                {...getTableBodyProps()}\n                className=\"bg-white divide-y divide-gray-200\"\n              >\n                {rows.map((row) => {\n                  prepareRow(row);\n                  return (\n                    <tr {...row.getRowProps()}>\n                      {row.cells.map((cell, index) => {\n                        return (\n                          <td\n                            key={index}\n                            {...cell.getCellProps}\n                            className=\"px-6 py-4 whitespace-nowrap\"\n                          >\n                            {cell.render(\"Cell\")}\n                          </td>\n                        );\n                      })}\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n            {data.length === 0 ? (\n              <div className=\"bg-gray-50 no-table-data\">\n                {isLoading ? (\n                  <Spinner size={20} color=\"primary\" />\n                ) : (\n                  <div\n                    className=\"flex flex-col\"\n                    style={{ alignItems: \"center\" }}\n                  >\n                    <svg\n                      width=\"36\"\n                      height=\"30\"\n                      viewBox=\"0 0 36 30\"\n                      fill=\"none\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                      <path\n                        d=\"M34.1995 10.7998H6.19993L2 28.9995H29.9995L34.1995 10.7998Z\"\n                        stroke=\"#009688\"\n                        strokeOpacity=\"0.4\"\n                        strokeWidth=\"2\"\n                        strokeMiterlimit=\"10\"\n                      />\n                      <path\n                        d=\"M2 28.9995V1H11.0999L13.8998 4.49994H32.0995V10.7998\"\n                        stroke=\"#009688\"\n                        strokeOpacity=\"0.4\"\n                        strokeWidth=\"2\"\n                        strokeMiterlimit=\"10\"\n                      />\n                    </svg>\n                    <span className=\"mt-2\">No Data</span>\n                  </div>\n                )}\n              </div>\n            ) : null}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useCallback, useMemo } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport Box from \"@mui/material/Box\";\nimport Stack from \"@mui/material/Stack\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\n\nimport { BiEditAlt as EditIcon } from \"react-icons/bi\";\nimport { RiDeleteBinLine as DeleteIcon } from \"react-icons/ri\";\n\nimport Button from \"../../components/common/Button\";\nimport Dialog from \"../../components/Modals/Dialog\";\nimport Spinner from \"../../components/Spinner\";\nimport BreadCrumb from \"../../components/common/CustomBreadCrumbs\";\nimport Table from \"../../components/Table/TableWithCheck\";\nimport TableControls from \"../../components/Table/TableControls\";\n\nimport {\n  PendingPayments as PendingPaymentsModalContent,\n  CollectionSettings as CollectionSettingsModalContent,\n} from \"./ModalContents\";\n\nconst Collections = () => {\n  const [page, setPage] = useState(1);\n  const [limit, setLimit] = useState(5);\n  // const [query, setQuery] = useState(\"\");\n\n  const [dialogContent, setDialogContent] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n\n  const handleLimitChange = (e) => {\n    setLimit(parseInt(e.target.value));\n  };\n\n  const setPrev = () => {\n    if (page > 1) setPage(page - 1);\n  };\n\n  const setNext = () => {\n    setPage(page + 1);\n  };\n\n  const handleModalClose = () => {\n    setShowModal(false);\n  };\n\n  const handleModalOpen = useCallback(\n    (modalId, data = null) =>\n      (e) => {\n        switch (modalId) {\n          case \"pending-payments\":\n            // console.log(data);\n            setDialogContent(\n              <PendingPaymentsModalContent closeHandler={handleModalClose} />\n            );\n            break;\n\n          case \"collection-settings\":\n            setDialogContent(\n              <CollectionSettingsModalContent closeHandler={handleModalClose} />\n            );\n            break;\n\n          default:\n            setDialogContent(null);\n            break;\n        }\n        setShowModal(true);\n      },\n    []\n  );\n\n  const collections = useSelector(\n    (state) => state.ConfigReducer.collections?.data || []\n  );\n\n  const isLoading = useSelector(\n    (state) => state.ConfigReducer.cropCalendar?.loading || false\n  );\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"Category\",\n        accessor: \"category.category\",\n      },\n      {\n        Header: \"Task\",\n        accessor: \"task\",\n      },\n      {\n        Header: \"Crop Profile\",\n        accessor: \"crop_profile.crop_name\",\n      },\n      {\n        Header: \"Expected Done Date\",\n        accessor: \"due_date\",\n      },\n      {\n        Header: \"Weight On Yield\",\n        accessor: \"crop_profile.yield\",\n      },\n      {\n        Header: \"Edit\",\n        Cell: ({ value, row }) => {\n          // const { original } = row;\n          // console.log(original);\n          return (\n            <IconButton>\n              <EditIcon />\n            </IconButton>\n          );\n        },\n      },\n      {\n        Header: \"Delete\",\n        Cell: ({ value, row }) => {\n          const { original } = row;\n          // console.log(original);\n          return (\n            <IconButton onClick={handleModalOpen(\"delete-activity\", original)}>\n              <DeleteIcon />\n            </IconButton>\n          );\n        },\n      },\n    ],\n    [handleModalOpen]\n  );\n\n  const tableData = useMemo(() => collections || [], [collections]);\n\n  return (\n    <React.Fragment>\n      <section>\n        <nav id=\"quick-nav\">\n          <BreadCrumb\n            breadcrumbs={[\n              <Typography key=\"1\" color=\"inherit\">\n                Payments\n              </Typography>,\n              <Typography key=\"2\" color=\"primary.main\">\n                Collections\n              </Typography>,\n            ]}\n          />\n        </nav>\n\n        <Stack\n          direction=\"row\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n          sx={{\n            flexWrap: {\n              xs: \"wrap\",\n              md: \"no-wrap\"\n            },\n          }}\n        >\n          <h2 className=\"with-spinner\" style={{ fontSize: \"20px\" }}>\n            <span>All Collections</span>\n            {isLoading ? <Spinner size={20} color=\"primary\" /> : \"\"}\n          </h2>\n\n          <Stack direction=\"row\" spacing={2} sx={{\n            mb: {\n              xs: 2,\n              md: 0\n            },\n          }}>\n            <Button\n              value=\"Process Pending Payments\"\n              sx={{ marginRight: \"21px\" }}\n              onClick={handleModalOpen(\"pending-payments\")}\n            />\n            <Button\n              value=\"Settings\"\n              onClick={handleModalOpen(\"collection-settings\")}\n            />\n          </Stack>\n        </Stack>\n\n        <Box>\n          <Table columns={columns} data={tableData} />\n          <TableControls\n            nextHandler={() => setNext()}\n            prevHandler={() => setPrev()}\n            limitHandler={(e) => handleLimitChange(e)}\n            totalpages={2}\n            page={page}\n            limit={limit}\n          />\n        </Box>\n      </section>\n\n      <Dialog open={showModal} closeHandler={handleModalClose}>\n        {dialogContent}\n      </Dialog>\n    </React.Fragment>\n  );\n};\n\nexport default Collections;\n","import React from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport TextField from \"@mui/material/TextField\";\nimport Box from \"@mui/material/Box\";\nimport DialogActions from \"@mui/material/DialogActions\";\n\nimport Button from \"../../../components/common/Button\";\nimport DialogHeader from \"../../../components/Modals/DialogHeader\";\n\nimport {\n  dialogContentStyles,\n  dialogContentStyles2,\n} from \"../../../components/Modals/globals\";\n\nexport const PendingPayments = ({ closeHandler }) => {\n  return (\n    <Box sx={dialogContentStyles}>\n      <DialogHeader title={\"Pending Payments\"} closeHandler={closeHandler} />\n      <div>\n        <div style={{ marginBottom: \"26px\", marginTop: \"20px\" }}>\n          <span\n            style={{\n              fontSize: \"16px\",\n              fontWeight: 400,\n              color: \"#6C757D\",\n              marginRight: \"49px\",\n            }}\n          >\n            Name:\n          </span>\n          <span style={{ fontSize: \"16px\", fontWeight: 700, color: \"#6C757D\" }}>\n            Alatiwa Ajakaye\n          </span>\n        </div>\n\n        <div>\n          <span\n            style={{\n              fontSize: \"16px\",\n              fontWeight: 400,\n              color: \"#6C757D\",\n              marginRight: \"33.79px\",\n            }}\n          >\n            Amount:\n          </span>\n          <span style={{ fontSize: \"16px\", fontWeight: 700, color: \"#6C757D\" }}>\n            N10,000.00\n          </span>\n        </div>\n      </div>\n\n      <DialogActions sx={{ p: 0 }}>\n        <div className='buttons mt-8' style={{ width: \"100%\" }}>\n          <div>\n            <Button\n              value='cancel'\n              sx={{\n                backgroundColor: \"white\",\n                color: \"#6C757D\",\n              }}\n            />\n          </div>\n          <div>\n            <Button\n              value='Process Payments'\n              sx={{\n                color: \"white\",\n              }}\n            />\n          </div>\n        </div>\n      </DialogActions>\n    </Box>\n  );\n};\n\nexport const CollectionSettings = ({ closeHandler }) => {\n  const initialValues = {\n    newPrice: \"\",\n  };\n  return (\n    <Box sx={dialogContentStyles}>\n      <DialogHeader title={\"Collection Settings\"} closeHandler={closeHandler} />\n      <div>\n        <div\n          style={{\n            marginBottom: \"26px\",\n            marginTop: \"20px\",\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\",\n          }}\n        >\n          <span\n            style={{\n              fontSize: \"16px\",\n              fontWeight: 400,\n              color: \"#6C757D\",\n              marginRight: \"40px\",\n            }}\n          >\n            New price per Kg:\n          </span>\n\n          <div>\n            <Formik initialValues={initialValues}>\n              {() => (\n                <Form>\n                  <Field\n                    as={TextField}\n                    name='newPrice'\n                    sx={{\n                      width: \"206px\",\n                      backgroundColor: \"#F3F3F4\",\n                      borderRadius: \"5px\",\n                    }}\n                    inputProps={{ style: { height: \"14px\" } }}\n                  />\n                </Form>\n              )}\n            </Formik>\n          </div>\n        </div>\n\n        <div>\n          <span\n            style={{\n              fontSize: \"16px\",\n              fontWeight: 400,\n              color: \"#6C757D\",\n              marginRight: \"70px\",\n            }}\n          >\n            Current Rate:\n          </span>\n          <span style={{ fontSize: \"16px\", fontWeight: 700, color: \"#6C757D\" }}>\n            N10,000.00\n          </span>\n        </div>\n      </div>\n\n      <DialogActions sx={{ p: 0 }}>\n        <div className='buttons mt-8' style={{ width: \"100%\" }}>\n          <div>\n            <Button\n              value='cancel'\n              sx={{\n                // padding: \"10px 15px\",\n                backgroundColor: \"white\",\n                // fontSize: \"14px\",\n                // fontWeight: 600,\n                color: \"#6C757D\",\n                // borderRadius: \"5px\",\n                // marginRight: \"26px\",\n              }}\n            />\n          </div>\n          <div>\n            <Button\n              value='Submit'\n              sx={{\n                // padding: \"10px 15px\",\n                // backgroundColor: \"#009688\",\n                // fontSize: \"14px\",\n                // fontWeight: 600,\n                color: \"white\",\n                // borderRadius: \"5px\",\n              }}\n            />\n          </div>\n        </div>\n      </DialogActions>\n    </Box>\n  );\n};\n\n// const styles = (theme) => ({\n//   root: {\n//     display: \"flex\",\n//   },\n//   toolbar: {\n//     display: \"flex\",\n//     alignItems: \"center\",\n//     justifyContent: \"flex-end\",\n//     padding: \"0 8px\",\n//     ...theme.mixins.toolbar,\n//   },\n//   content: {\n//     flexGrow: 1,\n//     padding: theme.spacing.unit * 3,\n//   },\n//   button: {\n//     marginTop: theme.spacing.unit * 3,\n//     // marginBottom: theme.spacing.unit * 3,\n//     marginRight: 3,\n//     color: \"#fff\",\n//   },\n//   button1: {\n//     color: \"#000\",\n//   },\n//   button2: {\n//     color: \"#fff\",\n//     background: \"#009688\",\n//   },\n//   searchBar: {\n//     marginTop: theme.spacing.unit * 3,\n//     marginBottom: theme.spacing.unit * 3,\n//   },\n// });\n\nexport const SendMoney = ({ closeHandler, individual, bulk }) => {\n  // const initialValues = {\n  //   newPrice: \"\",\n  // };\n\n  return (\n    <Box sx={dialogContentStyles2}>\n      <DialogHeader title={\"Send Money\"} closeHandler={closeHandler} />\n      {/* <div>\n        <div\n          style={{\n            marginBottom: \"26px\",\n            marginTop: \"20px\",\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\",\n          }}\n        >\n          <span\n            style={{\n              fontSize: \"16px\",\n              fontWeight: 400,\n              color: \"#6C757D\",\n              marginRight: \"40px\",\n            }}\n          >\n            New price per Kg:\n          </span>\n\n          <div>\n            <Formik initialValues={initialValues}>\n              {() => (\n                <Form>\n                  <Field\n                    as={TextField}\n                    name='newPrice'\n                    sx={{\n                      width: \"206px\",\n                      backgroundColor: \"#F3F3F4\",\n                      borderRadius: \"5px\",\n                    }}\n                    inputProps={{ style: { height: \"14px\" } }}\n                  />\n                </Form>\n              )}\n            </Formik>\n          </div>\n        </div>\n\n        <div>\n          <span\n            style={{\n              fontSize: \"16px\",\n              fontWeight: 400,\n              color: \"#6C757D\",\n              marginRight: \"70px\",\n            }}\n          >\n            Current Rate:\n          </span>\n          <span style={{ fontSize: \"16px\", fontWeight: 700, color: \"#6C757D\" }}>\n            N10,000.00\n          </span>\n        </div>\n      </div> */}\n\n      <DialogActions sx={{ p: 0 }}>\n        {/* <div className='buttons mt-8' style={{ width: \"100%\" }}>\n          <div>\n            <Button\n              value='cancel'\n              sx={{\n                // padding: \"10px 15px\",\n                backgroundColor: \"white\",\n                // fontSize: \"14px\",\n                // fontWeight: 600,\n                color: \"#6C757D\",\n                // borderRadius: \"5px\",\n                // marginRight: \"26px\",\n              }}\n            />\n          </div>\n          <div>\n            <Button\n              value='Submit'\n              sx={{\n                // padding: \"10px 15px\",\n                // backgroundColor: \"#009688\",\n                // fontSize: \"14px\",\n                // fontWeight: 600,\n                color: \"white\",\n                // borderRadius: \"5px\",\n              }}\n            />\n          </div>\n        </div> */}\n        <div\n          style={{\n            display: \"flex\",\n            gap: 24,\n            justifyContent: \"center\",\n            background: \"#009688\",\n            boxShadow: \"0px 5px 20px rgba(108, 117, 125, 0.15)\",\n            borderRadius: \"5px\",\n            padding: \"10px\",\n            maxWidth: \"100%\",\n            width: \"500px\",\n          }}\n        >\n          <button\n            // type='primary'\n            style={{\n              width: \"100%\",\n              height: \"40px\",\n              fontSize: \"14px\",\n              backgroundColor: \"#FFFFFF !important\",\n              fontWeight: 600,\n              color: \"green\",\n              borderRadius: \"5px\",\n              marginRight: \"26px\",\n            }}\n            // sx={{individual ? color: \"#000\" : color :\"#fff\" }}\n            //   button1: {\n            //     color: \"#000\",\n            //   },\n            //   button2: {\n            //     color: \"#fff\",\n            //     background: \"#009688\",\n            //   },\n            // className={individual ? classes.button1 : classes.button2}\n            // onClick={this.handleIndividual}\n          >\n            Individual Transfer\n          </button>\n          <button\n            style={{\n              width: \"100%\",\n              height: \"40px\",\n              fontSize: \"14px\",\n              background: \"#FFFFFF !important\",\n              fontWeight: 600,\n              color: \"white\",\n              borderRadius: \"5px\",\n              marginRight: \"26px\",\n            }}\n            // type='primary'\n            // className={individual ? classes.button2 : classes.button1}\n            // onClick={this.handleBulk}\n          >\n            Bulk Transfer\n          </button>\n        </div>\n      </DialogActions>\n    </Box>\n  );\n};\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getDialogActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogActions', slot);\n}\nconst dialogActionsClasses = generateUtilityClasses('MuiDialogActions', ['root', 'spacing']);\nexport default dialogActionsClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"disableSpacing\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogActionsUtilityClass } from './dialogActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getDialogActionsUtilityClass, classes);\n};\n\nconst DialogActionsRoot = styled('div', {\n  name: 'MuiDialogActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8,\n  justifyContent: 'flex-end',\n  flex: '0 0 auto'\n}, !ownerState.disableSpacing && {\n  '& > :not(:first-of-type)': {\n    marginLeft: 8\n  }\n}));\nconst DialogActions = /*#__PURE__*/React.forwardRef(function DialogActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogActions'\n  });\n\n  const {\n    className,\n    disableSpacing = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogActions.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogActions;"],"names":["textFieldStyles","borderRadius","backgroundColor","width","md","xs","border","dialogContentStyles","minWidth","nextHandler","prevHandler","limitHandler","page","totalRecords","limit","showLimit","hideOnMobile","totalPages","Math","ceil","className","onChange","value","disabled","onClick","TableWithCheck","columns","data","isLoading","setSelectedRows","IndeterminateCheckbox","React","ref","indeterminate","rest","defaultRef","resolvedRef","current","type","useTable","useRowSelect","hooks","visibleColumns","push","id","Header","getToggleAllRowsSelectedProps","Cell","checkProps","row","getToggleRowSelectedProps","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","selectedFlatRows","useEffect","map","d","original","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","scope","render","getRowProps","cells","cell","index","getCellProps","length","size","color","style","alignItems","height","viewBox","fill","xmlns","stroke","strokeOpacity","strokeWidth","strokeMiterlimit","useState","setPage","setLimit","dialogContent","setDialogContent","showModal","setShowModal","handleModalClose","handleModalOpen","useCallback","modalId","e","closeHandler","collections","useSelector","state","ConfigReducer","cropCalendar","loading","useMemo","accessor","tableData","breadcrumbs","direction","justifyContent","sx","flexWrap","fontSize","spacing","mb","marginRight","parseInt","target","handleLimitChange","totalpages","open","PendingPayments","title","marginBottom","marginTop","fontWeight","p","CollectionSettings","display","flexDirection","initialValues","newPrice","as","TextField","name","inputProps","getDialogActionsUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","DialogActionsRoot","styled","overridesResolver","props","styles","ownerState","root","disableSpacing","_extends","padding","flex","marginLeft","inProps","useThemeProps","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx"],"sourceRoot":""}