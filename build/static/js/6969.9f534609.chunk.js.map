{"version":3,"file":"static/js/6969.9f534609.chunk.js","mappings":"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","sources":["components/Modals/globals.js","components/common/CustomSelect.jsx","layouts/userManagement/AddFarmer.jsx","utils/convertJSONToFormData.js","redux/actions/UserManagementActions.js","utils/validations.js","../node_modules/@mui/material/Link/linkClasses.js","../node_modules/@mui/material/Link/getTextDecoration.js","../node_modules/@mui/material/Link/Link.js"],"sourcesContent":["export const textFieldStyles = {\n  borderRadius: \"5px\",\n  backgroundColor: \"#F3F3F4\",\n  width: { md: \"477.61px\", xs: \"100%\" },\n  \"& fieldset\": {\n    border: \"none\"\n  }\n};\n\nexport const dialogContentStyles = {\n  minWidth: { xs: \"320px\", md: \"initial\" }\n};\n\nexport const dialogContentStyles2 = {\n  minWidth: { xs: \"520px\", md: \"initial\" }\n};","import React, { useState } from \"react\";\n\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\n\nexport default function CustomSelect(props) {\n  const {\n    onChange = (e) => {},\n    noneLabel,\n    options = [],\n    iconType,\n    sx = {},\n    backgroundColor = \"#FFFFFF\",\n    ...rest\n  } = props;\n  const [selectValue, setSelectValue] = useState(\"\");\n\n  const handleChange = (event) => {\n    setSelectValue(event.target.value);\n    onChange(event);\n  };\n\n  let iconStyle;\n\n  switch (true) {\n    case !!iconType && iconType === \"filled\":\n      iconStyle = {\n        \"& .MuiSelect-icon\": {\n          backgroundColor: \"primary.main\",\n          fill: \"white\",\n          height: \"100%\",\n          width: props.iconwidth || \"48px\",\n          top: 0,\n          right: 0,\n        },\n      };\n      break;\n\n    default:\n      iconStyle = {};\n      break;\n  }\n\n  return (\n    <FormControl\n      sx={{\n        borderRadius: \"5px\",\n        minWidth: 120,\n        width: props.width,\n        height: props.height,\n        backgroundColor: props.backgroundColor,\n      }}\n    >\n      <Select\n        value={selectValue}\n        onChange={handleChange}\n        displayEmpty\n        inputProps={{ \"aria-label\": \"Without label\" }}\n        // IconComponent=\"ArrowDropDownOutlined\"\n        sx={{\n          overflow: \"hidden\",\n          boxShadow: props.disableshadow\n            ? \"none\"\n            : \"0px 5px 20px rgba(108, 117, 125, 0.15)\",\n          \"& *\": {\n            border: \"none\",\n          },\n          ...iconStyle,\n          ...sx,\n        }}\n        {...rest}\n      >\n        <MenuItem value=\"\">{noneLabel || <em>None</em>}</MenuItem>\n        {options.map((option, index) => {\n          return (\n            <MenuItem\n              key={index}\n              value={option.value}\n              selected={option.selected}\n            >\n              {option.name || \"\"}\n            </MenuItem>\n          );\n        })}\n      </Select>\n    </FormControl>\n  );\n}\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { validations } from \"../../utils/validations\";\n\nimport Stack from \"@mui/material/Stack\";\nimport Typography from \"@mui/material/Typography\";\nimport Link from \"@mui/material/Link\";\nimport TextField from \"@mui/material/TextField\";\n\nimport CustomSelect from \"../../components/common/CustomSelect\";\nimport BreadCrumb from \"../../components/common/CustomBreadCrumbs\";\nimport Button from \"../../components/common/Button\";\n\nimport { addFarmer } from \"../../redux/actions/UserManagementActions\";\nimport { getLocalGovt, getStates } from \"../../redux/actions/AppActions\";\n\n// import { notify } from \"../../utils/toastNotification\";\nimport { textFieldStyles } from \"../../components/Modals/globals\";\nimport { SET_LOCALS } from \"../../redux/types/AppActionTypes\";\nimport axiosServices from \"../../services/axiosServices\";\n\nfunction AddFarmer() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [isAdding, setIsAdding] = useState(false);\n  const [banks, setBanks] = useState([]);\n  const states = useSelector((state) => state.AppReducer?.states || {});\n\n  // const authenticatedUser = useSelector(\n  //   (state) =>\n  //     state.AuthReducer.userProfile ||\n  //     JSON.parse(sessionStorage.getItem(\"user_profile\"))\n  // );\n\n  const fetchBanks = useCallback(async () => {\n    try {\n      const bankRes = await axiosServices.get(\"/all/banks\");\n      // console.log(bankRes?.entity);\n      setBanks(bankRes?.result?.banks?.data || []);\n    } catch (error) {\n      console.log(error);\n      return error;\n    }\n  }, []);\n\n  const customTextFieldStyles = {\n    ...textFieldStyles,\n    width: {\n      ...textFieldStyles.width,\n      md: \"auto\",\n    },\n  };\n\n  const localGovts = useSelector((state) => state.AppReducer?.localGovt || []);\n\n  const stateChangeHandler = (handleChange) => (e) => {\n    console.log({ state: e.target.value });\n    if (!e.target.value) {\n      dispatch({\n        type: SET_LOCALS,\n        payload: {\n          localGovt: [],\n        },\n      });\n    } else {\n      dispatch(getLocalGovt(e.target.value));\n    }\n\n    handleChange(e);\n  };\n\n  useEffect(() => {\n    fetchBanks();\n    dispatch(getStates({}));\n  }, [dispatch, fetchBanks]);\n\n  const validationSchema = Yup.object({\n    first_name: validations\n      .name(\"First name\")\n      .required(\"First name is required\"),\n    last_name: validations.name(\"Last name\").required(\"Last name is required\"),\n    middle_name: validations.name(\"Middle name\"),\n    mobile: validations.mobile(),\n    home_state: validations.blank().required(\"State is required\"),\n    home_address: validations.blank(),\n    home_lga: validations.blank().required(\"Local govt is required\"),\n    gender: validations.blank().required(\"Gender is required\"),\n    dob: validations\n      .date(\"Date of birth\")\n      .required(\"Date of birth is required\"),\n    account_no: validations.blank().when(\"bank\", {\n      is: (bank) => !bank,\n      then: validations\n        .blank()\n        .matches(/[0-9]/g, \"Invalid account number\")\n        .min(10, \"Account number must atleast 10 digits\"),\n      otherwise: validations\n        .blank()\n        .matches(/[0-9]/g, \"Invalid account number\")\n        .min(10, \"Account number must atleast 10 digits\")\n        .required(\"Account number is required\"),\n    }),\n  });\n\n  return (\n    <React.Fragment>\n      <section>\n        <nav id=\"quick-nav\">\n          <BreadCrumb\n            breadcrumbs={[\n              <Typography key=\"1\" color=\"inherit\">\n                User Management\n              </Typography>,\n              <Link href=\"/user-management/farmers\" key=\"2\" color=\"inherit\">\n                Manage Farmers\n              </Link>,\n              <Typography key=\"3\" color=\"primary.main\">\n                Add Farmer\n              </Typography>,\n            ]}\n          />\n        </nav>\n\n        <Stack\n          direction=\"column\"\n          px={4}\n          py={3}\n          alignItems=\"flex-start\"\n          sx={{\n            backgroundColor: \"#FFF\",\n            boxShadow: \"0px 5px 20px rgba(108, 117, 125, 0.15)\",\n            borderRadius: \"5px\",\n          }}\n        >\n          <h2 className=\"first-text ml-1.5\">Add New Farmer</h2>\n          <Formik\n            initialValues={{\n              first_name: \"\",\n              last_name: \"\",\n              middle_name: \"\",\n              mobile: \"\",\n              home_state: \"\",\n              home_address: \"\",\n              home_lga: \"\",\n              gender: \"\",\n              dob: \"\",\n              bank: \"\",\n            }}\n            validationSchema={validationSchema}\n            onSubmit={async (values, { resetForm }) => {\n              const body = {\n                first_name: values.first_name,\n                last_name: values.last_name,\n                middle_name: values.middle_name,\n                mobile: values.mobile,\n                home_state: values.home_state,\n                home_address: values.home_address,\n                home_lga: values.home_lga,\n                gender: values.gender,\n                dob: values.dob,\n                bank: values.bank,\n              };\n              // console.log(body);\n              setIsAdding(true);\n              const response = dispatch(addFarmer(body));\n\n              response.then((result) => {\n                setIsAdding(false);\n                // console.log(result?.data);\n                if (result?.data || result?.success) {\n                  resetForm();\n                  window.setTimeout(() => navigate('/user-management/farmers'), 1000);\n                }\n              });\n            }}\n          >\n            {({\n              values,\n              errors,\n              touched,\n              handleChange,\n              handleBlur,\n              handleSubmit,\n            }) => (\n              <form\n                onSubmit={handleSubmit}\n                style={{ width: \"100%\", border: \"1px solid transparent\" }}\n              >\n                <Stack\n                  direction=\"row\"\n                  justifyContent=\"space-between\"\n                  sx={{\n                    flexWrap: {\n                      xs: \"wrap\",\n                      lg: \"nowrap\",\n                    },\n                  }}\n                >\n                  <Stack\n                    direction=\"column\"\n                    sx={{\n                      mx: 1,\n                      width: \"100%\",\n                    }}\n                  >\n                    <label htmlFor=\"first_name\" className=\"second-text my-3\">\n                      First Name <small className=\"text-red-500\">*</small>\n                    </label>\n                    <TextField\n                      id=\"first_name\"\n                      sx={customTextFieldStyles}\n                      name=\"first_name\"\n                      InputProps={{ style: { height: \"44px\" } }}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      value={values.first_name}\n                      className={\n                        errors.first_name && touched.first_name\n                          ? \"input-error\"\n                          : null\n                      }\n                    />\n                    {errors.first_name && touched.first_name && (\n                      <span className=\"error\">{errors.first_name}</span>\n                    )}\n                  </Stack>\n\n                  <Stack\n                    direction=\"column\"\n                    sx={{\n                      mx: 1,\n                      width: \"100%\",\n                    }}\n                  >\n                    <label htmlFor=\"last_name\" className=\"second-text my-3\">\n                      Last Name <small className=\"text-red-500\">*</small>\n                    </label>\n                    <TextField\n                      sx={customTextFieldStyles}\n                      id=\"last_name\"\n                      name=\"last_name\"\n                      InputProps={{ style: { height: \"44px\" } }}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      value={values.last_name}\n                      className={\n                        errors.last_name && touched.last_name\n                          ? \"input-error\"\n                          : null\n                      }\n                    />\n                    {errors.last_name && touched.last_name && (\n                      <span className=\"error\">{errors.last_name}</span>\n                    )}\n                  </Stack>\n                </Stack>\n\n                <Stack\n                  direction=\"column\"\n                  sx={{\n                    mx: 1,\n                    width: {\n                      xs: \"100%\",\n                      md: \"auto\",\n                    },\n                  }}\n                >\n                  <label htmlFor=\"middle_name\" className=\"second-text my-3\">\n                    Middle Name\n                  </label>\n                  <TextField\n                    sx={customTextFieldStyles}\n                    id=\"middle_name\"\n                    name=\"middle_name\"\n                    InputProps={{ style: { height: \"44px\" } }}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.middle_name}\n                    className={\n                      errors.middle_name && touched.middle_name\n                        ? \"input-error\"\n                        : null\n                    }\n                  />\n                  {errors.middle_name && touched.middle_name && (\n                    <span className=\"error\">{errors.middle_name}</span>\n                  )}\n                </Stack>\n\n                <Stack\n                  direction=\"column\"\n                  sx={{\n                    mx: 1,\n                    width: {\n                      xs: \"100%\",\n                      md: \"auto\",\n                    },\n                  }}\n                >\n                  <label htmlFor=\"mobile\" className=\"second-text my-3\">\n                    Phone Number\n                  </label>\n                  <TextField\n                    sx={customTextFieldStyles}\n                    id=\"mobile\"\n                    name=\"mobile\"\n                    InputProps={{ style: { height: \"44px\" } }}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.mobile}\n                    className={\n                      errors.mobile && touched.mobile ? \"input-error\" : null\n                    }\n                  />\n                  {errors.mobile && touched.mobile && (\n                    <span className=\"error\">{errors.mobile}</span>\n                  )}\n                </Stack>\n\n                <Stack\n                  direction=\"row\"\n                  justifyContent=\"space-between\"\n                  sx={{\n                    mb: 2,\n                    flexWrap: {\n                      xs: \"wrap\",\n                      lg: \"nowrap\",\n                    },\n                  }}\n                >\n                  <Stack\n                    direction=\"column\"\n                    sx={{\n                      mx: 1,\n                      width: \"100%\",\n                    }}\n                  >\n                    <label htmlFor=\"dob\" className=\"second-text my-3\">\n                      Date Of Birth <small className=\"text-red-500\">*</small>\n                    </label>\n                    <TextField\n                      type=\"date\"\n                      sx={customTextFieldStyles}\n                      id=\"dob\"\n                      name=\"dob\"\n                      InputProps={{ style: { height: \"44px\" } }}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      value={values.dob}\n                      className={\n                        errors.dob && touched.dob ? \"input-error\" : null\n                      }\n                    />\n                    {errors.dob && touched.dob && (\n                      <span className=\"error\">{errors.dob}</span>\n                    )}\n                  </Stack>\n\n                  <Stack\n                    direction=\"column\"\n                    sx={{\n                      mx: 1,\n                      width: {\n                        xs: \"100%\",\n                        // md: \"auto\",\n                      },\n                    }}\n                  >\n                    <label htmlFor=\"gender\" className=\"second-text my-3\">\n                      Gender <small className=\"text-red-500\">*</small>\n                    </label>\n                    <CustomSelect\n                      name=\"gender\"\n                      id=\"gender\"\n                      value={values.gender}\n                      onChange={handleChange}\n                      noneLabel={<em>Select Gender</em>}\n                      iconType=\"filled\"\n                      width={{ md: \"400px\", xs: \"100%\" }}\n                      height=\"44px\"\n                      sx={{ backgroundColor: \"grey\" }}\n                      backgroundColor=\"#F3F3F4\"\n                      disableshadow=\"true\"\n                      options={[\n                        {\n                          value: \"Male\",\n                          name: \"Male\",\n                        },\n                        {\n                          value: \"Female\",\n                          name: \"Female\",\n                        },\n                      ]}\n                      className={\n                        errors.gender && touched.gender ? \"input-error\" : null\n                      }\n                    />\n                    {errors.gender && touched.gender && (\n                      <span className=\"error\">{errors.gender}</span>\n                    )}\n                  </Stack>\n                </Stack>\n\n                <h3 style={{ marginTop: \"2rem\", marginBottom: \"0.5rem\" }}>\n                  Other Information\n                </h3>\n                <Stack\n                  direction=\"column\"\n                  sx={{\n                    mx: 1,\n                    width: {\n                      xs: \"100%\",\n                      md: \"auto\",\n                    },\n                  }}\n                >\n                  <label htmlFor=\"bank\" className=\"second-text my-3\">\n                    Bank\n                  </label>\n                  <CustomSelect\n                    name=\"bank\"\n                    id=\"bank\"\n                    value={values.bank}\n                    onChange={handleChange}\n                    noneLabel={<em>Select Bank</em>}\n                    iconType=\"filled\"\n                    width=\"100%\"\n                    height=\"44px\"\n                    sx={{ backgroundColor: \"grey\" }}\n                    backgroundColor=\"#F3F3F4\"\n                    disableshadow=\"true\"\n                    options={banks.map((bank) => ({\n                      name: bank.name,\n                      value: bank.name,\n                    }))}\n                  />\n                  {errors.bank && touched.bank && (\n                    <span className=\"error\">{errors.bank}</span>\n                  )}\n                </Stack>\n\n                <Stack\n                  direction=\"column\"\n                  sx={{\n                    mx: 1,\n                    width: {\n                      xs: \"100%\",\n                      md: \"auto\",\n                    },\n                  }}\n                >\n                  <label htmlFor=\"account_no\" className=\"second-text my-3\">\n                    Account Number\n                  </label>\n                  <TextField\n                    sx={customTextFieldStyles}\n                    id=\"account_no\"\n                    name=\"account_no\"\n                    InputProps={{ style: { height: \"44px\" } }}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.account_no}\n                    className={\n                      errors.account_no && touched.account_no\n                        ? \"input-error\"\n                        : null\n                    }\n                  />\n                  {errors.account_no && touched.account_no && (\n                    <span className=\"error\">{errors.account_no}</span>\n                  )}\n                </Stack>\n\n                <Stack\n                  direction=\"column\"\n                  sx={{\n                    mx: 1,\n                    width: {\n                      xs: \"100%\",\n                      md: \"auto\",\n                    },\n                  }}\n                >\n                  <label htmlFor=\"loan\" className=\"second-text my-3\">\n                    Loan Amount\n                  </label>\n                  <TextField\n                    sx={customTextFieldStyles}\n                    id=\"loan\"\n                    name=\"loan\"\n                    type=\"number\"\n                    InputProps={{ style: { height: \"44px\" } }}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.loan}\n                    className={\n                      errors.loan && touched.loan ? \"input-error\" : null\n                    }\n                  />\n                  {errors.loan && touched.loan && (\n                    <span className=\"error\">{errors.loan}</span>\n                  )}\n                </Stack>\n\n                <Stack\n                  direction=\"column\"\n                  sx={{\n                    mx: 1,\n                    width: {\n                      xs: \"100%\",\n                      md: \"auto\",\n                    },\n                  }}\n                >\n                  <label htmlFor=\"home_address\" className=\"second-text my-3\">\n                    Home Address\n                  </label>\n                  <TextField\n                    sx={customTextFieldStyles}\n                    id=\"home_address\"\n                    name=\"home_address\"\n                    // variant=\"multiline\"\n                    InputProps={{ style: { height: \"44px\" } }}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.home_address}\n                    className={\n                      errors.home_address && touched.home_address\n                        ? \"input-error\"\n                        : null\n                    }\n                  />\n                  {errors.home_address && touched.home_address && (\n                    <span className=\"error\">{errors.home_address}</span>\n                  )}\n                </Stack>\n\n                <Stack\n                  direction=\"row\"\n                  justifyContent=\"space-between\"\n                  sx={{\n                    mb: 2,\n                    flexWrap: {\n                      xs: \"wrap\",\n                      lg: \"nowrap\",\n                    },\n                  }}\n                >\n                  <Stack\n                    direction=\"column\"\n                    sx={{\n                      mx: 1,\n                      width: {\n                        xs: \"100%\",\n                      },\n                    }}\n                  >\n                    <label htmlFor=\"home_state\" className=\"second-text my-3\">\n                      Home State <small className=\"text-red-500\">*</small>\n                    </label>\n                    <CustomSelect\n                      name=\"home_state\"\n                      id=\"home_state\"\n                      value={values.home_state}\n                      onChange={stateChangeHandler(handleChange)}\n                      noneLabel={<em>Select State</em>}\n                      iconType=\"filled\"\n                      width={{ md: \"400px\", xs: \"100%\" }}\n                      height=\"44px\"\n                      sx={{ backgroundColor: \"grey\" }}\n                      backgroundColor=\"#F3F3F4\"\n                      disableshadow=\"true\"\n                      options={Object.values(states).map((eachState) => {\n                        // console.log(eachState);\n                        return {\n                          name: eachState.name,\n                          value: eachState.state_id,\n                        };\n                      })}\n                      className={\n                        errors.home_state && touched.home_state\n                          ? \"input-error\"\n                          : null\n                      }\n                    />\n                    {errors.home_state && touched.home_state && (\n                      <span className=\"error\">{errors.home_state}</span>\n                    )}\n                  </Stack>\n\n                  <Stack\n                    direction=\"column\"\n                    sx={{\n                      mx: 1,\n                      width: \"100%\",\n                    }}\n                  >\n                    <label htmlFor=\"home_lga\" className=\"second-text my-3\">\n                      LGA <small className=\"text-red-500\">*</small>\n                    </label>\n                    <CustomSelect\n                      name=\"home_lga\"\n                      id=\"home_lga\"\n                      value={values.home_lga}\n                      onChange={handleChange}\n                      noneLabel={<em>Select LGA</em>}\n                      iconType=\"filled\"\n                      width={{ md: \"400px\", xs: \"100%\" }}\n                      height=\"44px\"\n                      sx={{ backgroundColor: \"grey\" }}\n                      backgroundColor=\"#F3F3F4\"\n                      disableshadow=\"true\"\n                      options={localGovts.map((eachLga) => {\n                        // console.log(eachLga);\n                        return {\n                          name: eachLga.local_name,\n                          value: eachLga.local_id,\n                        };\n                      })}\n                      className={\n                        errors.home_lga && touched.home_lga\n                          ? \"input-error\"\n                          : null\n                      }\n                    />\n                    {errors.home_lga && touched.home_lga && (\n                      <span className=\"error\">{errors.home_lga}</span>\n                    )}\n                  </Stack>\n                </Stack>\n\n                <div className=\"buttons mt-8 ml-1.5\">\n                  <div className=\"\">\n                    <Button\n                      type=\"submit\"\n                      value={isAdding ? \"Adding...\" : \"Submit\"}\n                      disabled={isAdding}\n                    />\n                  </div>\n                </div>\n              </form>\n            )}\n          </Formik>\n        </Stack>\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default AddFarmer;\n","export function convertToFormData(body = {}) {\n  const bodyFormData = new FormData();\n  if (Object.keys(body).length > 0) {\n    console.log({ body });\n    Object.keys(body).forEach((key) => {\n      bodyFormData.append(key, body[key]);\n    });\n  }\n  return bodyFormData;\n}","import axiosServices, { useAxiosService } from \"../../services/axiosServices\";\nimport { notify } from \"../../utils/toastNotification\";\nimport { errorHandler } from \"../../utils/actionsErrorHandler\";\nimport { createQuery } from \"../../utils/createQuery\";\nimport { convertToFormData } from \"../../utils/convertJSONToFormData\";\nimport {\n  GET_USERS_SUCCESS,\n  GET_USERS_FAIL,\n  ADD_USER_SUCCESS,\n  ADD_USER_FAIL,\n  LOADING_USERS,\n  GET_FARMERS_SUCCESS,\n  GET_FARMER_FAIL,\n  ADD_FARMER_SUCCESS,\n  ADD_FARMER_FAIL,\n  LOADING_FARMER,\n  GET_SOURCING_AGENTS_SUCCESS,\n  GET_SOURCING_AGENTS_FAIL,\n  ADD_SOURCING_AGENT_SUCCESS,\n  ADD_SOURCING_AGENT_FAIL,\n  LOADING_SOURCING_AGENTS,\n} from \"../types/UserManagementTypes\";\n\nexport const getUsers =\n  (queryParams = {}) =>\n  async (dispatch) => {\n    let page = queryParams.page || 1;\n    let limit = queryParams.limit || 10;\n    let query = createQuery(queryParams);\n    dispatch({ type: LOADING_USERS });\n    queryParams = createQuery(queryParams);\n    try {\n      const res = await axiosServices.get(\n        `/viewusers?page=${page}&limit=${limit}&query=${query}`\n      );\n      dispatch({\n        type: GET_USERS_SUCCESS,\n        payload: res,\n      });\n      // console.log(\"first data\", res?.data);\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: GET_USERS_FAIL,\n      });\n      errorHandler(error, \"Failed to fetch users\");\n      return error;\n    }\n  };\n\nexport const addUser = (data) => async (dispatch) => {\n  // dispatch({ type: LOADING_USERS, payload: true });\n  try {\n    const res = await axiosServices.post(`/users`, data);\n\n    if (res?.success && res?.result) {\n      notify(\"User added successfully\", { type: \"success\" });\n      dispatch({\n        type: ADD_USER_SUCCESS,\n        payload: res.result,\n      });\n      return res;\n      // dispatch(getUsers({ page: 1 }));\n    }\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: ADD_USER_FAIL,\n    });\n    errorHandler(error, \"Failed to add user\");\n    return error;\n  }\n};\n\nexport const bulkUploadUsers = (data) => async (dispatch) => {\n  try {\n    data = convertToFormData(data);\n\n    const res = await useAxiosService(\"formData\").post(\n      `/users/bulk-upload`,\n      data,\n      {}\n    );\n\n    // console.log(res);\n\n    if (res?.success && res?.result) {\n      notify(\"Users uploaded successfully\", { type: \"success\" });\n      dispatch(getUsers({ page: 1 }));\n    }\n  } catch (error) {\n    console.log(error);\n    errorHandler(error, \"Failed to upload users\");\n    return error;\n  }\n};\n\nexport const updateUser = (userId, data) => async (dispatch) => {\n  // dispatch({ type: LOADING_USERS, payload: true });\n  try {\n    const res = await axiosServices.patch(`/users/${userId}`, data);\n\n    if (res?.success && res?.result) {\n      notify(\"User Updated successfully\", { type: \"success\" });\n      return res;\n    }\n  } catch (error) {\n    console.log(error);\n    errorHandler(error, \"Failed to update user\");\n    return error;\n  }\n};\n\nexport const deleteUser = (userId) => async (dispatch) => {\n  try {\n    const res = await axiosServices.delete(`/users/${userId}`);\n    if (res) {\n      notify(\"User deleted successfully\", { type: \"success\" });\n      dispatch(getUsers({ page: 1 }));\n    }\n  } catch (error) {\n    console.log(error);\n    errorHandler(error, \"Failed to delete user\");\n    return error;\n  }\n};\n\nexport const getFarmers =\n  (queryParams = {}) =>\n  async (dispatch) => {\n    dispatch({ type: LOADING_FARMER });\n    queryParams = createQuery(queryParams);\n    // console.log(queryParams);\n    try {\n      const res = await axiosServices.get(`/farmers${queryParams}`);\n\n      if (res?.success && res?.result) {\n        dispatch({\n          type: GET_FARMERS_SUCCESS,\n          payload: res?.result?.data,\n        });\n      } else {\n        dispatch({\n          type: GET_FARMER_FAIL,\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: GET_FARMER_FAIL,\n      });\n      errorHandler(error);\n      return error;\n    }\n  };\n\nexport const getSingleFarmer = async (farmerId) => {\n  try {\n    const res = await axiosServices.get(`/farmers/${farmerId}`);\n    return res?.result;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n};\n\nexport const addFarmer = (data) => async (dispatch) => {\n  try {\n    const res = await axiosServices.post(`/farmers`, data);\n\n    if (res?.success && res?.result) {\n      notify(\"Farmer added successfully\", { type: \"success\" });\n      dispatch({\n        type: ADD_FARMER_SUCCESS,\n        payload: res.result,\n      });\n      dispatch(getFarmers({ page: 1 }));\n    }\n    return res;\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: ADD_FARMER_FAIL,\n    });\n    errorHandler(error, \"Failed to add farmer\");\n    return error;\n  }\n};\n\nexport const updateFarmer = (farmerId, data) => async (dispatch) => {\n  try {\n    const res = await axiosServices.patch(`/farmers/${farmerId}`, data);\n\n    if (res?.success && res?.result) {\n      notify(\"Farmer updated successfully\", { type: \"success\" });\n    }\n    return res;\n  } catch (error) {\n    console.log(error);\n    errorHandler(error, \"Failed to update farmer\");\n    return error;\n  }\n};\n\nexport const bulkUploadFarmers = (data) => async (dispatch) => {\n  try {\n    data = convertToFormData(data);\n    const res = await useAxiosService(\"formData\")({\n      method: \"post\",\n      url: `/farmers/bulk-upload`,\n      data,\n    });\n\n    if (res?.success && res?.result) {\n      notify(\"Farmers uploaded successfully\", { type: \"success\" });\n      dispatch(getFarmers({ page: 1 }));\n    }\n  } catch (error) {\n    console.log(error);\n    errorHandler(error, \"Failed to add farmer\");\n    return error;\n  }\n};\n\n//\nexport const exportFarmerData = (data, navigate) => async (dispatch) => {\n  try {\n    const res = await axiosServices.post(\n      `/farmers/downloads/process-farmer-details`,\n      data\n    );\n\n    if (res?.success && res?.result) {\n      notify(\"Farmers exported successfully\", { type: \"success\" });\n      navigate(\"/user-management/farmers/exports\");\n    }\n  } catch (error) {\n    console.log(error);\n    errorHandler(error, \"Failed to export farmers\");\n    return error;\n  }\n};\n\nexport const getFarmerExports = async () => {\n  try {\n    const res = await axiosServices.get(`/farmers/downloads`);\n\n    if (res?.success && res?.result) {\n      return res?.result?.data;\n    }\n\n    return res;\n  } catch (error) {\n    console.log(error);\n    errorHandler(error, \"Failed to fetch exports\");\n    return error;\n  }\n};\n\nexport const downloadFarmerTemplate = (data) => async (dispatch) => {\n  try {\n    const res = await axiosServices.get(`/templates/farmers`);\n\n    if (res?.success && res?.result) {\n    } else {\n      dispatch({\n        type: GET_FARMER_FAIL,\n      });\n    }\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: GET_FARMER_FAIL,\n    });\n    errorHandler(error);\n    return error;\n  }\n};\n\n// SOURCING AGENTS\nexport const getSourcingAgents =\n  (queryParams = {}) =>\n  async (dispatch) => {\n    dispatch({ type: LOADING_SOURCING_AGENTS });\n    queryParams = createQuery(queryParams);\n    try {\n      const res = await axiosServices.get(`/sourcing-partners${queryParams}`);\n      dispatch({\n        type: GET_SOURCING_AGENTS_SUCCESS,\n        payload: res?.result?.sourcing_partners,\n      });\n\n      // console.log(\"first\", res?.result?.data);\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: GET_SOURCING_AGENTS_FAIL,\n      });\n      errorHandler(error, \"Failed to fetch sourcing agents\");\n      return error;\n    }\n  };\n\nexport const addSourcingAgent = (data) => async (dispatch) => {\n  // dispatch({ type: LOADING_SOURCING_AGENTS, payload: true });\n  try {\n    const res = await axiosServices.post(`/sourcing-partners`, data);\n    console.log(res);\n    if (res?.success && res?.result) {\n      notify(\"Sourcing agent added successfully\", { type: \"success\" });\n      dispatch({\n        type: ADD_SOURCING_AGENT_SUCCESS,\n        payload: res.result,\n      });\n      // dispatch(getUsers({ page: 1 }));\n    }\n    return res;\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: ADD_SOURCING_AGENT_FAIL,\n    });\n    errorHandler(error, \"Failed to add sourcing agent\");\n    return error;\n  }\n};\n\nexport const updateSourcingAgent = (userId, data) => async (dispatch) => {\n  // dispatch({ type: LOADING_SOURCING_AGENTS, payload: true });\n  try {\n    const res = await axiosServices.patch(`/users/${userId}`, data);\n\n    if (res?.success && res?.result) {\n      notify(\"Sourcing agent updated successfully\", { type: \"success\" });\n      // dispatch(getUsers({ page: 1 }));\n    }\n  } catch (error) {\n    console.log(error);\n    errorHandler(error, \"Failed to update sourcing agent\");\n    return error;\n  }\n};\n\nexport const deleteSourcingAgent = (userId) => async (dispatch) => {\n  try {\n    const res = await axiosServices.delete(`/sourcing-partners/${userId}`);\n    if (res) {\n      notify(\"Sourcing agent deleted successfully\", { type: \"success\" });\n      dispatch(getSourcingAgents({ page: 1 }));\n    }\n  } catch (error) {\n    console.log(error);\n    errorHandler(error, \"Failed to delete sourcing agent\");\n    return error;\n  }\n};\n","import * as Yup from \"yup\";\n\nexport const validations = {\n  name: (paramName) =>\n    Yup.string().min(\n      3,\n      paramName\n        ? `${paramName} must be 3 or more characters`\n        : \"Must be 3 or more characters\"\n    ),\n  number: (paramName, min = -1e20, max = 1e20) =>\n    Yup.number()\n      .min(\n        min,\n        paramName\n          ? `${paramName} must be greater than ${min}`\n          : `Must be greater than ${min}`\n      )\n      .max(\n        max,\n        paramName\n          ? `${paramName} must be less than ${max}`\n          : `Must be less than ${max}`\n      ),\n  email: (paramName) => Yup.string().email(),\n  password: (paramName, min = 8, max = 24) =>\n    Yup.string()\n      .min(\n        min,\n        paramName\n          ? `${paramName} must be ${min} or more characters`\n          : \"Must be 8 or more characters\"\n      )\n      .max(max, paramName ? `${paramName} is too long` : \"Too long\"),\n  date: (paramName) =>\n    Yup.string().matches(\n      /(\\d{4}(-|\\/|\\\\)\\d{1,2}(-|\\/|\\\\)\\d{1,2})|(\\d{1,2}(-|\\/|\\\\)\\d{1,2}(-|\\/|\\\\)\\d{4})/gi\n    ),\n  mobile: (paramName) => Yup.string().matches(/[0-9)(+]/gi, \"Invalid number\"),\n  bvn: (paramName) =>\n    Yup.string()\n      .matches(/\\d{11}/g, \"Invalid BVN\")\n      .length(11, \"BVN must be 11 digits long\"),\n  blank: () => Yup.string(),\n};\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;","import { alpha, getPath } from '@mui/system';\nexport const colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\n\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\n\nconst getTextDecoration = ({\n  theme,\n  ownerState\n}) => {\n  const transformedColor = transformDeprecatedColors(ownerState.color);\n  const color = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);\n\n  if ('vars' in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n\n  return alpha(color, 0.4);\n};\n\nexport default getTextDecoration;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\", \"sx\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport getTextDecoration, { colorTransformations } from './getTextDecoration';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\n\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  return _extends({}, ownerState.underline === 'none' && {\n    textDecoration: 'none'\n  }, ownerState.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, ownerState.underline === 'always' && _extends({\n    textDecoration: 'underline'\n  }, ownerState.color !== 'inherit' && {\n    textDecorationColor: getTextDecoration({\n      theme,\n      ownerState\n    })\n  }, {\n    '&:hover': {\n      textDecorationColor: 'inherit'\n    }\n  }), ownerState.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    component = 'a',\n    onBlur,\n    onFocus,\n    TypographyClasses,\n    underline = 'always',\n    variant = 'inherit',\n    sx\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n\n  const handleBlur = event => {\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  const handleFocus = event => {\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    color: color,\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    ownerState: ownerState,\n    variant: variant,\n    sx: [...(!Object.keys(colorTransformations).includes(color) ? [{\n      color\n    }] : []), ...(Array.isArray(sx) ? sx : [sx])]\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .any,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * `classes` prop applied to the [`Typography`](/material-ui/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;"],"names":["textFieldStyles","borderRadius","backgroundColor","width","md","xs","border","dialogContentStyles","minWidth","CustomSelect","props","iconStyle","onChange","e","noneLabel","options","iconType","sx","rest","useState","selectValue","setSelectValue","fill","height","iconwidth","top","right","value","event","target","displayEmpty","inputProps","overflow","boxShadow","disableshadow","map","option","index","selected","name","dispatch","useDispatch","navigate","useNavigate","isAdding","setIsAdding","banks","setBanks","states","useSelector","state","AppReducer","fetchBanks","useCallback","axiosServices","bankRes","result","data","console","log","customTextFieldStyles","localGovts","localGovt","stateChangeHandler","handleChange","getLocalGovt","type","SET_LOCALS","payload","useEffect","getStates","validationSchema","Yup","first_name","validations","required","last_name","middle_name","mobile","home_state","home_address","home_lga","gender","dob","account_no","when","is","bank","then","matches","min","otherwise","id","breadcrumbs","color","href","direction","px","py","alignItems","className","initialValues","onSubmit","values","resetForm","body","addFarmer","success","window","setTimeout","errors","touched","handleBlur","handleSubmit","style","justifyContent","flexWrap","lg","mx","htmlFor","InputProps","onBlur","mb","marginTop","marginBottom","loan","Object","eachState","state_id","eachLga","local_name","local_id","disabled","convertToFormData","bodyFormData","FormData","keys","length","forEach","key","append","getUsers","queryParams","page","limit","query","createQuery","LOADING_USERS","res","GET_USERS_SUCCESS","GET_USERS_FAIL","errorHandler","addUser","notify","ADD_USER_SUCCESS","ADD_USER_FAIL","bulkUploadUsers","useAxiosService","post","updateUser","userId","deleteUser","getFarmers","LOADING_FARMER","GET_FARMERS_SUCCESS","GET_FARMER_FAIL","getSingleFarmer","farmerId","ADD_FARMER_SUCCESS","ADD_FARMER_FAIL","updateFarmer","bulkUploadFarmers","method","url","exportFarmerData","getFarmerExports","getSourcingAgents","LOADING_SOURCING_AGENTS","GET_SOURCING_AGENTS_SUCCESS","sourcing_partners","GET_SOURCING_AGENTS_FAIL","addSourcingAgent","ADD_SOURCING_AGENT_SUCCESS","ADD_SOURCING_AGENT_FAIL","deleteSourcingAgent","paramName","number","max","email","password","date","bvn","blank","getLinkUtilityClass","slot","generateUtilityClass","generateUtilityClasses","colorTransformations","primary","textPrimary","secondary","textSecondary","error","theme","ownerState","transformedColor","transformDeprecatedColors","getPath","channelColor","alpha","_excluded","LinkRoot","styled","Typography","overridesResolver","styles","root","capitalize","underline","component","button","_extends","textDecoration","textDecorationColor","getTextDecoration","position","WebkitTapHighlightColor","outline","margin","padding","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","linkClasses","React","inProps","ref","useThemeProps","onFocus","TypographyClasses","variant","other","_objectWithoutPropertiesLoose","useIsFocusVisible","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","focusVisible","setFocusVisible","handlerRef","useForkRef","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","current","includes","Array","isArray"],"sourceRoot":""}