{"version":3,"file":"static/js/667.c7d81f8f.chunk.js","mappings":"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","sources":["components/Table/TableWithCheck.jsx","components/common/CustomSearchField.jsx","components/common/StatusIndicator.jsx","components/icons/search.js","layouts/FarmManagement/ManageFarmLots.jsx","../node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/InputAdornment/InputAdornment.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useTable, useRowSelect } from \"react-table\";\nimport Spinner from \"../Spinner\";\n\nexport default function TableWithCheck({ columns, data, isLoading = false, setSelectedRows = () => {} }) {\n  const IndeterminateCheckbox = React.forwardRef(\n    ({ indeterminate, ...rest }, ref) => {\n      const defaultRef = React.useRef();\n      const resolvedRef = ref || defaultRef;\n      React.useEffect(() => {\n        resolvedRef.current.indeterminate = indeterminate;\n      }, [resolvedRef, indeterminate]);\n      return (\n        <>\n          <input type=\"checkbox\" ref={resolvedRef} {...rest} />\n        </>\n      );\n    }\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    selectedFlatRows,\n  } = useTable({ columns, data }, useRowSelect, (hooks) => {\n    hooks.visibleColumns.push((columns) => [\n      // Let's make a column for selection\n      {\n        id: \"selection\",\n        Header: ({ getToggleAllRowsSelectedProps }) => (\n          <div>\n            <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\n          </div>\n        ),\n        Cell: ({ row }) => {\n          // const { original } = row;\n          // console.log(\"kdkdkddk\", row.getToggleRowSelectedProps());\n          const checkProps = row.getToggleRowSelectedProps();\n          return (\n            <div>\n              <IndeterminateCheckbox {...checkProps} />\n            </div>\n          );\n        },\n      },\n      ...columns,\n    ]);\n  });\n\n  // console.log('flatRows', selectedFlatRows);\n  useEffect(() => {\n    setSelectedRows(selectedFlatRows.map(\n      d => d.original\n    ));\n  }, [selectedFlatRows, setSelectedRows]);\n\n  return (\n    <div className=\"mt-2 mb-5 flex flex-col overflow-x-auto border\">\n      <div className=\"-my-2 -mx-4 sm:-mx-6 lg:-mx-8\">\n        <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n          <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n            <table\n              {...getTableProps()}\n              className=\"min-w-full divide-y divide-gray-200\"\n            >\n              <thead className=\"bg-gray-50\">\n                {headerGroups.map((headerGroup) => (\n                  <tr {...headerGroup.getHeaderGroupProps()}>\n                    {headerGroup.headers.map((column) => (\n                      <th\n                        {...column.getHeaderProps()}\n                        scope=\"col\"\n                        className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                      >\n                        {column.render(\"Header\")}\n                      </th>\n                    ))}\n                  </tr>\n                ))}\n              </thead>\n              <tbody\n                {...getTableBodyProps()}\n                className=\"bg-white divide-y divide-gray-200\"\n              >\n                {rows.map((row) => {\n                  prepareRow(row);\n                  return (\n                    <tr {...row.getRowProps()}>\n                      {row.cells.map((cell, index) => {\n                        return (\n                          <td\n                            key={index}\n                            {...cell.getCellProps}\n                            className=\"px-6 py-4 whitespace-nowrap\"\n                          >\n                            {cell.render(\"Cell\")}\n                          </td>\n                        );\n                      })}\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n            {data.length === 0 ? (\n              <div className=\"bg-gray-50 no-table-data\">\n                {isLoading ? (\n                  <Spinner size={20} color=\"primary\" />\n                ) : (\n                  <div\n                    className=\"flex flex-col\"\n                    style={{ alignItems: \"center\" }}\n                  >\n                    <svg\n                      width=\"36\"\n                      height=\"30\"\n                      viewBox=\"0 0 36 30\"\n                      fill=\"none\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                      <path\n                        d=\"M34.1995 10.7998H6.19993L2 28.9995H29.9995L34.1995 10.7998Z\"\n                        stroke=\"#009688\"\n                        strokeOpacity=\"0.4\"\n                        strokeWidth=\"2\"\n                        strokeMiterlimit=\"10\"\n                      />\n                      <path\n                        d=\"M2 28.9995V1H11.0999L13.8998 4.49994H32.0995V10.7998\"\n                        stroke=\"#009688\"\n                        strokeOpacity=\"0.4\"\n                        strokeWidth=\"2\"\n                        strokeMiterlimit=\"10\"\n                      />\n                    </svg>\n                    <span className=\"mt-2\">No Data</span>\n                  </div>\n                )}\n              </div>\n            ) : null}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport TextField from \"@mui/material/TextField\";\n\nconst CustomSearchField = (props) => {\n  const { sx = {}, placeholder = \"\", value=\"\", ...rest } = props;\n  return (\n    <TextField\n      // defaultValue={props.value || \"\"}\n      placeholder={placeholder}\n      sx={{\n        p: 0,\n        border: \"1px solid rgba(0, 150, 136, 0.2)\",\n        borderRadius: \"5px\",\n        backgroundColor: \"#FFF\",\n        \"& *\": {\n          borderColor: \"transparent\",\n        },\n        \"& input\": {\n          padding: \"10px\",\n        },\n        ...sx,\n      }}\n      value={value}\n      {...rest}\n    />\n  );\n};\n\nexport default CustomSearchField;\n","import React from \"react\";\n\nconst Status = (props) => {\n  const { value, type = \"pending\" } = props;\n\n  const wrapperStyle = {\n    boxSizing: \"border-box\",\n    width: \"auto\",\n    height: \"26px\",\n    padding: \"8px\",\n    borderRadius: \"13px\",\n    borderWidth: \"0.6px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  };\n\n  const textStyle = {\n    fontSize: \"12px\",\n    fontWeight: 600,\n    display: \"block\",\n  };\n\n  switch (type) {\n    case \"success\":\n      wrapperStyle.backgroundColor = \"#F6FFED\";\n      wrapperStyle.borderColor = \"#B7EB8F\";\n      textStyle.color = \"#52C41A\";\n      break;\n\n    case \"pending\":\n      wrapperStyle.backgroundColor = \"#FFF7E6\";\n      wrapperStyle.borderColor = \"#FA8C16\";\n      textStyle.color = \"#FA8C16\";\n      break;\n\n    case \"error\":\n      wrapperStyle.backgroundColor = \"#FFF1F0\";\n      wrapperStyle.borderColor = \"#F5222D\";\n      textStyle.color = \"#F5222D\";\n      break;\n\n    default:\n      wrapperStyle.backgroundColor = \"#FFF1F0\";\n      wrapperStyle.borderColor = \"#F5222D\";\n      textStyle.color = \"#F5222D\";\n      break;\n  }\n  return (\n    <div style={wrapperStyle}>\n      <span style={textStyle}>{value}</span>\n    </div>\n  );\n};\n\nexport default Status;\n\n// \"#FFF1F0\"\n// borderColor\n// \"#F5222D\"\n","import { createSvgIcon } from '@mui/material/utils';\n\nexport const Search = createSvgIcon(\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n    <path\n      fillRule=\"evenodd\"\n      d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Search');\n","import React, {\n  useState,\n  useEffect,\n  useMemo,\n  useRef,\n  useCallback,\n} from \"react\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Stack from \"@mui/material/Stack\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MuiButton from \"@mui/material/Button\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\n\nimport { Search as SearchIcon } from \"../../components/icons/search\";\nimport { RiMore2Fill as ActionMenuIcon } from \"react-icons/ri\";\n\nimport CustomSearchField from \"../../components/common/CustomSearchField\";\nimport TableControls from \"../../components/Table/TableControls\";\nimport CustomSelect from \"../../components/common/CustomSelect\";\nimport Button from \"../../components/common/Button\";\nimport StatusIndicator from \"../../components/common/StatusIndicator\";\nimport TableWithCheck from \"../../components/Table/TableWithCheck\";\nimport Dialog from \"../../components/Modals/Dialog\";\nimport BreadCrumb from \"../../components/common/CustomBreadCrumbs\";\n// import Spinner from \"../../components/Spinner\";\n\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport {\n  // AddFarmUnit as AddFarmUnitModalContent,\n  ViewMap as ViewMapModalContent,\n  AssignFarm as AssignFarmModalContent,\n  BulkAssignFarms as BulkAssignFarmsModalContent,\n} from \"./ModalContents\";\n\nimport { SET_LOCALS } from \"../../redux/types/AppActionTypes\";\nimport { getFarmLots } from \"../../redux/actions/FarmManagementActions\";\nimport { getStates, getLocalGovt } from \"../../redux/actions/AppActions\";\nimport Can from \"../../utils/rbac/Can\";\nimport { notify } from \"../../utils/toastNotification\";\n\nfunction ActionMenu(props) {\n  const { handleModalOpen } = props;\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const mapViewHandler = (e) => {\n    handleClose(e);\n    handleModalOpen(\"view-map\", props.data)(e);\n  };\n\n  const assignFarmHandler = (e) => {\n    handleClose(e);\n    handleModalOpen(\"assign-farm\", props.data)(e);\n  };\n\n  return (\n    <div>\n      <IconButton\n        id=\"basic-button\"\n        aria-controls={open ? \"basic-menu\" : undefined}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? \"true\" : undefined}\n        onClick={handleClick}\n      >\n        <ActionMenuIcon />\n      </IconButton>\n\n      <Menu\n        id=\"basic-menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        MenuListProps={{\n          \"aria-labelledby\": \"basic-button\",\n        }}\n        sx={{\n          \"& .MuiMenu-paper\": {\n            borderRadius: \"15px\",\n            boxShadow: \"0px 5px 20px rgba(108, 117, 125, 0.4)\",\n          },\n        }}\n      >\n        <MenuItem onClick={handleClose}>\n          <MuiButton\n            href={`/farm-management/edit-farm-unit/${props.data?.id}`}\n            sx={{\n              p: 0,\n              m: 0,\n              textTransform: \"capitalize\",\n              color: \"inherit\",\n              fontSize: \"inherit\",\n              \"&:hover\": {\n                backgroundColor: \"transparent\",\n              },\n            }}\n          >\n            View Farm Unit\n          </MuiButton>\n        </MenuItem>\n        <MenuItem onClick={mapViewHandler}>View Map</MenuItem>\n        <Can\n          role={props.role}\n          perform=\"farm-management:farm:bulk-assign\"\n          yes={() => (\n            <MenuItem onClick={assignFarmHandler}>Assign Farm</MenuItem>\n          )}\n          no={() => null}\n        />\n      </Menu>\n    </div>\n  );\n}\n\nfunction ManageFarmLots() {\n  const dispatch = useDispatch();\n  const [page, setPage] = useState(1);\n  const [limit, setLimit] = useState(15);\n\n  // Filters\n  const queryRef = useRef(null);\n  const [query, setQuery] = useState(\"\");\n  const [mapped, setMapped] = useState(\"\");\n  const [state, setState] = useState(\"\");\n  const [lga, setLga] = useState(\"\");\n  const [clientName, setClientName] = useState(\"\");\n\n  const availableStates = useSelector(\n    (state) => state.AppReducer?.states || {}\n  );\n  const localGovts = useSelector((state) => state.AppReducer?.localGovt || []);\n\n  // Page data\n  const farmLots = useSelector((state) => state.FarmMangementReducer?.farmLots);\n\n  const [dialogContent, setDialogContent] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n\n  const [selectedRows, setSelectedRows] = useState([]);\n\n  const authenticatedUser = useSelector(\n    (state) =>\n      state.AuthReducer.userProfile ||\n      JSON.parse(sessionStorage.getItem(\"user_profile\"))\n  );\n\n  const stateChangeHandler = (e) => {\n    console.log({ state: e.target.value });\n    if (!e.target.value) {\n      setLga(\"\");\n      setState(\"\");\n      dispatch({\n        type: SET_LOCALS,\n        payload: {\n          localGovt: [],\n        },\n      });\n    } else {\n      setState(e.target.value);\n      dispatch(getLocalGovt(e.target.value));\n    }\n  };\n\n  const handleModalClose = () => {\n    setShowModal(false);\n  };\n\n  const handleModalOpen = useCallback(\n    (modalId, data = null) =>\n      (e) => {\n        switch (modalId) {\n          // case \"add-farm-unit\":\n          //   setDialogContent(\n          //     <AddFarmUnitModalContent\n          //       closeHandler={handleModalClose}\n          //       states={Object.values(availableStates).map((eachState) => ({\n          //         name: eachState.name,\n          //         value: eachState.state_id,\n          //       }))}\n          //     />\n          //   );\n          //   break;\n\n          case \"view-map\":\n            setDialogContent(\n              <ViewMapModalContent\n                closeHandler={handleModalClose}\n                data={data}\n              />\n            );\n            break;\n\n          case \"assign-farm\":\n            setDialogContent(\n              <AssignFarmModalContent\n                closeHandler={handleModalClose}\n                farm={data}\n              />\n            );\n            break;\n\n          case \"bulk-assign-farms\":\n            setDialogContent(\n              <BulkAssignFarmsModalContent\n                closeHandler={handleModalClose}\n                selections={data}\n              />\n            );\n            break;\n\n          default:\n            setDialogContent(null);\n            break;\n        }\n        setShowModal(true);\n      },\n    []\n  );\n\n  // onChange function for select\n  const handleLimitChange = (e) => {\n    setLimit(parseInt(e.target.value));\n  };\n\n  const setPrev = () => {\n    if (page > 1) setPage(page - 1);\n  };\n\n  const setNext = () => {\n    setPage(page + 1);\n  };\n\n  const handleBulkAssign = (e) => {\n    if (selectedRows.length > 0) {\n      handleModalOpen(\"bulk-assign-farms\", selectedRows)(e);\n    } else {\n      notify(\"Please select at least one row\", { type: \"info\" });\n    }\n    console.log(selectedRows);\n  };\n\n  useEffect(() => {\n    const filters = {\n      page,\n      search: query,\n    };\n\n    if (clientName !== \"\") {\n      filters.client_name = clientName;\n    } else {\n      delete filters.client_name;\n    }\n\n    if (mapped !== \"\") {\n      filters.mapped = mapped;\n    } else {\n      delete filters.mapped;\n    }\n\n    if (state) {\n      filters.state = state;\n    } else {\n      delete filters.state;\n    }\n\n    if (lga) {\n      filters.community = lga;\n    } else {\n      delete filters.community;\n    }\n\n    dispatch(getFarmLots(filters));\n    dispatch(getStates());\n  }, [clientName, dispatch, mapped, page, state, lga, query]);\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"Lots ID\",\n        accessor: \"farm_id\",\n      },\n      {\n        Header: \"Farmer\",\n        accessor: \"farmer_name\",\n        // Cell: ({ value, row }) => {\n        //   const { original } = row;\n        //   // console.log(original);\n        //   return (\n        //     <span>\n        //       {original.farmer\n        //         ? `${original.farmer.first_name} ${original.farmer.last_name}`\n        //         : \"-\"}\n        //     </span>\n        //   );\n        // },\n      },\n      {\n        Header: \"Crop\",\n        accessor: \"crop\",\n      },\n      {\n        Header: \"State\",\n        accessor: \"state\",\n        // Cell: ({ value, row }) => {\n        //   const { original } = row;\n        //   const stateId = original?.lga?.state_id;\n        //   // console.log(availableStates[stateId]);\n\n        //   return <span>{availableStates[stateId]?.name || \"-\"}</span>;\n        // },\n      },\n      {\n        Header: \"LGA\",\n        accessor: \"lga\",\n      },\n      {\n        Header: \"Mapped\",\n        Cell: ({ value, row }) => {\n          const { original } = row;\n          // console.log(original);\n          return (\n            <StatusIndicator\n              value={!original.mapped ? \"Not Mapped\" : \"Mapped\"}\n              type={!original.mapped ? \"error\" : \"success\"}\n            />\n          );\n        },\n      },\n      {\n        Header: \"Client Name\",\n        accessor: \"last_login\",\n      },\n      {\n        Header: \"Sub Cluster\",\n        Cell: ({ value, row }) => {\n          const { original } = row;\n          // console.log(original);\n          return <span>{original.sub_cluster || \"-\"}</span>;\n        },\n      },\n      {\n        Header: \"Actions\",\n        Cell: ({ value, row }) => {\n          const { original } = row;\n          // console.log(original);\n          return (\n            <ActionMenu\n              data={original}\n              role={authenticatedUser?.my_role?.role}\n              handleModalOpen={handleModalOpen}\n              handleModalClose={handleModalClose}\n            />\n          );\n        },\n      },\n    ],\n    [authenticatedUser?.my_role?.role, handleModalOpen]\n  );\n\n  const tableData = useMemo(\n    () =>\n      farmLots.data?.map((each) => {\n        // console.log(lot);\n        return {\n          id: each.id,\n          address: each.address.replace(/,/g, \".\"),\n          clay: each.clay,\n          cluster: each.cluster,\n          community: each.community,\n          created: each.created,\n          crop: each.crop,\n          farm_id: each.farm_id,\n          farmer_id: each.farmer?.id,\n          farmer_name: `${each.farmer?.first_name} ${each.farmer?.middle_name} ${each.farmer?.last_name}`,\n          mapped: each.farmer?.mapped,\n          state: availableStates[each.state.state_id]?.name,\n          lga: each.lga?.local_name,\n          loam: each.loam,\n          nitrogen: each.nitrogen,\n          phosphorus: each.phosphorus,\n          potassium: each.potassium,\n          size: each.size,\n          slit: each.slit,\n          status: each.status,\n          sub_cluster: each.sub_cluster?.name,\n          tenant: each.tenant,\n          tenant_id: each.tenant_id,\n        };\n      }) || [],\n    [availableStates, farmLots.data]\n  );\n\n  // console.log(csvData);\n  return (\n    <React.Fragment>\n      <section>\n        <nav id=\"quick-nav\">\n          <BreadCrumb\n            breadcrumbs={[\n              <Typography key=\"1\" color=\"inherit\">\n                Farm Management\n              </Typography>,\n              <Typography key=\"2\" color=\"primary.main\">\n                Farm Units\n              </Typography>,\n            ]}\n          />\n        </nav>\n\n        <Stack\n          direction=\"row\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n          sx={{\n            flexWrap: {\n              xs: \"wrap\",\n              md: \"no-wrap\",\n            },\n          }}\n        >\n          <CustomSearchField\n            InputProps={{\n              ref: queryRef,\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon fontSize=\"small\" />\n                </InputAdornment>\n              ),\n            }}\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            placeholder=\"Search\"\n            sx={{\n              width: \"100%\",\n              maxWidth: { sm: \"250px\" },\n            }}\n          />\n\n          <Stack direction=\"row\" spacing={2} sx={{ my: 2 }}>\n            <Can\n              role={authenticatedUser?.my_role?.role}\n              perform=\"farm-management:farm:create\"\n              yes={() => (\n                <Button\n                  href=\"/farm-management/add-farm-unit\"\n                  // onClick={handleModalOpen(\"add-farm-unit\")}\n                  value=\"Add New Unit\"\n                  disableElevation\n                />\n              )}\n              no={() => null}\n            />\n            <Can\n              role={authenticatedUser?.my_role?.role}\n              perform=\"farm-management:farm:bulk-assign\"\n              yes={() => (\n                <Button\n                  value=\"Bulk Assign\"\n                  onClick={handleBulkAssign}\n                  disableElevation\n                  disabled={selectedRows.length === 0}\n                />\n              )}\n              no={() => null}\n            />\n          </Stack>\n        </Stack>\n\n        {/* {isLoading ? <Spinner size={20} color=\"primary\" /> : null} */}\n        {selectedRows.length > 0 && (\n          <div\n            style={{ marginBottom: \"-25px\" }}\n          >{`${selectedRows.length} selected farms`}</div>\n        )}\n        <div\n          className=\"farmmanagementheader flex flex-row items-end space-between overflow-x-auto\"\n          style={{ justifyContent: \"space-between\" }}\n        >\n          <div style={{ flexGrow: 1 }}>\n            <span className=\"filtertext mr-2 ml-2\">Filter by:</span>\n\n            <Stack direction=\"row\" alignItems=\"center\" flexWrap=\"wrap\">\n              <div className=\"mr-2 ml-2 component-wrapper\">\n                <CustomSelect\n                  width=\"100%\"\n                  height=\"32px\"\n                  borderRadius=\"5px\"\n                  backgroundColor=\"#FFFFFF\"\n                  noneLabel={<em>All</em>}\n                  options={[\n                    { name: \"Mapped\", value: 1 },\n                    { name: \"Not Mapped\", value: 0 },\n                  ]}\n                  onChange={(e) => setMapped(e.target.value)}\n                />\n              </div>\n\n              <div className=\"mr-2 ml-2 component-wrapper\">\n                <CustomSelect\n                  width=\"100%\"\n                  height=\"32px\"\n                  noneLabel={<em>State</em>}\n                  options={Object.values(availableStates).map((eachState) => {\n                    return {\n                      name: eachState.name,\n                      value: eachState.state_id,\n                    };\n                  })}\n                  sx={{ borderRadius: \"5px\" }}\n                  backgroundColor=\"#FFFFFF\"\n                  onChange={stateChangeHandler}\n                />\n              </div>\n\n              <div className=\"mr-2 ml-2 component-wrapper\">\n                <CustomSelect\n                  width=\"100%\"\n                  height=\"32px\"\n                  noneLabel={<em>All L.G.A</em>}\n                  options={localGovts.map((eachLga) => {\n                    return {\n                      name: eachLga.local_name,\n                      value: eachLga.local_id,\n                    };\n                  })}\n                  borderRadius=\"5px\"\n                  backgroundColor=\"#FFFFFF\"\n                  onChange={(e) => setLga(e.target.value)}\n                />\n              </div>\n\n              <div className=\"mr-2 ml-2 component-wrapper\">\n                <CustomSelect\n                  width=\"100%\"\n                  height=\"32px\"\n                  noneLabel={<em>Client Name</em>}\n                  options={[{ name: \"Abc Client\", value: \"abc client\" }]}\n                  borderRadius=\"5px\"\n                  backgroundColor=\"#FFFFFF\"\n                  onChange={(e) => setClientName(e.target.value)}\n                />\n              </div>\n            </Stack>\n          </div>\n        </div>\n\n        <Box>\n          {/* <div>\n            {JSON.stringify(selectedRows)}\n          </div> */}\n          <TableWithCheck\n            columns={columns}\n            data={tableData}\n            isLoading={farmLots.loading}\n            setSelectedRows={setSelectedRows}\n          />\n          <TableControls\n            nextHandler={() => setNext()}\n            prevHandler={() => setPrev()}\n            limitHandler={(e) => handleLimitChange(e)}\n            page={page}\n            totalRecords={farmLots.total}\n            limit={limit}\n          />\n        </Box>\n      </section>\n\n      <Dialog\n        open={showModal}\n        closeHandler={handleModalClose}\n        PaperProps={{ sx: { maxWidth: \"unset\" } }}\n      >\n        {dialogContent}\n      </Dialog>\n    </React.Fragment>\n  );\n}\n\nexport default ManageFarmLots;\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _span;\n\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\n\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n\n  const {\n    children,\n    className,\n    component = 'div',\n    disablePointerEvents = false,\n    disableTypography = false,\n    position,\n    variant: variantProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ?\n        /* notranslate needed while Google Translate will not fix zero-width space issue */\n        _span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        })) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;"],"names":["TableWithCheck","columns","data","isLoading","setSelectedRows","IndeterminateCheckbox","React","ref","indeterminate","rest","defaultRef","resolvedRef","current","type","useTable","useRowSelect","hooks","visibleColumns","push","id","Header","getToggleAllRowsSelectedProps","Cell","checkProps","row","getToggleRowSelectedProps","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","selectedFlatRows","useEffect","map","d","original","className","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","scope","render","getRowProps","cells","cell","index","getCellProps","length","size","color","style","alignItems","width","height","viewBox","fill","xmlns","stroke","strokeOpacity","strokeWidth","strokeMiterlimit","props","sx","placeholder","value","p","border","borderRadius","backgroundColor","borderColor","padding","wrapperStyle","boxSizing","borderWidth","display","justifyContent","textStyle","fontSize","fontWeight","Search","createSvgIcon","fillRule","clipRule","ActionMenu","handleModalOpen","anchorEl","setAnchorEl","open","Boolean","handleClose","assignFarmHandler","e","undefined","onClick","event","currentTarget","onClose","MenuListProps","boxShadow","href","m","textTransform","role","perform","yes","no","dispatch","useDispatch","useState","page","setPage","limit","setLimit","queryRef","useRef","query","setQuery","mapped","setMapped","state","setState","lga","setLga","clientName","setClientName","availableStates","useSelector","AppReducer","states","localGovts","localGovt","farmLots","FarmMangementReducer","dialogContent","setDialogContent","showModal","setShowModal","selectedRows","authenticatedUser","AuthReducer","userProfile","JSON","parse","sessionStorage","getItem","handleModalClose","useCallback","modalId","closeHandler","farm","selections","handleBulkAssign","notify","console","log","filters","search","client_name","community","getFarmLots","getStates","useMemo","accessor","sub_cluster","my_role","tableData","each","address","replace","clay","cluster","created","crop","farm_id","farmer_id","farmer","farmer_name","first_name","middle_name","last_name","state_id","name","local_name","loam","nitrogen","phosphorus","potassium","slit","status","tenant","tenant_id","breadcrumbs","direction","flexWrap","xs","md","InputProps","startAdornment","position","onChange","target","maxWidth","sm","spacing","my","disableElevation","disabled","marginBottom","flexGrow","noneLabel","options","Object","values","eachState","getLocalGovt","SET_LOCALS","payload","eachLga","local_id","loading","nextHandler","prevHandler","limitHandler","parseInt","handleLimitChange","totalRecords","total","PaperProps","getInputAdornmentUtilityClass","slot","generateUtilityClass","_span","generateUtilityClasses","_excluded","InputAdornmentRoot","styled","overridesResolver","styles","ownerState","root","capitalize","disablePointerEvents","variant","theme","_extends","maxHeight","whiteSpace","vars","palette","action","active","inputAdornmentClasses","marginTop","marginRight","marginLeft","pointerEvents","inProps","useThemeProps","children","component","disableTypography","variantProp","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","hiddenLabel","classes","slots","composeClasses","useUtilityClasses","_jsx","FormControlContext","as","clsx","_jsxs","Typography"],"sourceRoot":""}