{"version":3,"file":"static/js/7474.8ee2158f.chunk.js","mappings":"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","sources":["components/Table/TableControls.jsx","components/common/CustomSelect.jsx","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","layouts/dashboard/Index.jsx","redux/actions/DashboardActions.js","redux/actions/ConfigurationsActions.js"],"sourcesContent":["import React from \"react\";\n\nimport { IoIosArrowBack, IoIosArrowForward } from \"react-icons/io\";\n\nconst TableActions = ({\n  nextHandler,\n  prevHandler,\n  limitHandler,\n  page,\n  totalRecords = 0,\n  limit = 1,\n  showLimit = true,\n  hideOnMobile = false\n}) => {\n  const totalPages = Math.ceil(totalRecords / limit);\n  return (\n    <div className={`flex justify-end table-controls ${hideOnMobile ? 'hide-on-mobile' : ''} `}>\n      {!showLimit || showLimit === \"false\" || showLimit === false ? null : (\n        <div className=\"filter-input mr-5\">\n          <label>Rows per page: </label>\n          <select onChange={limitHandler}>\n            <option value=\"15\">15</option>\n            <option value=\"25\">25</option>\n            <option value=\"50\">50</option>\n            <option value=\"100\">100</option>\n          </select>\n        </div>\n      )}\n\n      <div className=\"flex text-green-500\">\n        <p className=\"px-4\">\n          Viewing {((page - 1) * limit) + 1} -{\" \"}\n          {limit * page > totalRecords ? totalRecords : limit * page} of{\" \"}\n          {totalRecords}\n        </p>\n        <button disabled={page <= 1} onClick={prevHandler}>\n          <IoIosArrowBack />\n        </button>\n        <button disabled={page >= totalPages} onClick={nextHandler}>\n          <IoIosArrowForward />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default TableActions;\n","import React, { useState } from \"react\";\n\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\n\nexport default function CustomSelect(props) {\n  const {\n    onChange = (e) => {},\n    noneLabel,\n    options = [],\n    iconType,\n    sx = {},\n    backgroundColor = \"#FFFFFF\",\n    ...rest\n  } = props;\n  const [selectValue, setSelectValue] = useState(\"\");\n\n  const handleChange = (event) => {\n    setSelectValue(event.target.value);\n    onChange(event);\n  };\n\n  let iconStyle;\n\n  switch (true) {\n    case !!iconType && iconType === \"filled\":\n      iconStyle = {\n        \"& .MuiSelect-icon\": {\n          backgroundColor: \"primary.main\",\n          fill: \"white\",\n          height: \"100%\",\n          width: props.iconwidth || \"48px\",\n          top: 0,\n          right: 0,\n        },\n      };\n      break;\n\n    default:\n      iconStyle = {};\n      break;\n  }\n\n  return (\n    <FormControl\n      sx={{\n        borderRadius: \"5px\",\n        minWidth: 120,\n        width: props.width,\n        height: props.height,\n        backgroundColor: props.backgroundColor,\n      }}\n    >\n      <Select\n        value={selectValue}\n        onChange={handleChange}\n        displayEmpty\n        inputProps={{ \"aria-label\": \"Without label\" }}\n        // IconComponent=\"ArrowDropDownOutlined\"\n        sx={{\n          overflow: \"hidden\",\n          boxShadow: props.disableshadow\n            ? \"none\"\n            : \"0px 5px 20px rgba(108, 117, 125, 0.15)\",\n          \"& *\": {\n            border: \"none\",\n          },\n          ...iconStyle,\n          ...sx,\n        }}\n        {...rest}\n      >\n        <MenuItem value=\"\">{noneLabel || <em>None</em>}</MenuItem>\n        {options.map((option, index) => {\n          return (\n            <MenuItem\n              key={index}\n              value={option.value}\n              selected={option.selected}\n            >\n              {option.name || \"\"}\n            </MenuItem>\n          );\n        })}\n      </Select>\n    </FormControl>\n  );\n}\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\n\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n\n  const {\n    className,\n    raised = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    raised\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\n\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n\n  const {\n    className,\n    component = 'div'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import React, { useState, useEffect, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Stack from \"@mui/material/Stack\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Typography from \"@mui/material/Typography\";\n\nimport CustomSelect from \"../../components/common/CustomSelect\";\nimport Button from \"../../components/common/Button\";\nimport Table from \"../../components/Table/UserTable\";\nimport TableControls from \"../../components/Table/TableControls\";\nimport Spinner from \"../../components/Spinner\";\n\nimport { getDashboardDetails } from \"../../redux/actions/DashboardActions\";\nimport { getCropProfiles } from \"../../redux/actions/ConfigurationsActions\";\n\nexport default function DashboardIndexSection() {\n  const [page, setPage] = useState(1);\n  const [limit, setLimit] = useState(10);\n\n  const dashboardData = useSelector(\n    (state) => state.DashboardReducer.dashboardData\n  );\n  const isLoading = useSelector((state) => state.DashboardReducer.loading);\n\n  const crops = useSelector(\n    (state) => state.ConfigReducer.cropProfiles?.data || []\n  );\n\n  // onChange function for select\n  const handleLimitChange = (e) => {\n    setLimit(parseInt(e.target.value));\n  };\n\n  const setPrev = () => {\n    if (page > 1) setPage(page - 1);\n  };\n\n  const setNext = () => {\n    setPage(page + 1);\n  };\n\n  const cardStyles = {\n    minWidth: 275,\n    boxShadow: \"0px 5px 20px rgba(108, 117, 125, 0.15)\",\n    backgroundColor: \"primary.main\",\n    flexGrow: 1,\n    marginTop: \"10px !important\",\n    marginBottom: \"10px !important\",\n    p: 1.8,\n  };\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"Farmer Name\",\n        accessor: \"farmer\",\n      },\n      {\n        Header: \"Lot ID\",\n        accessor: \"id\",\n      },\n      {\n        Header: \"Size\",\n        accessor: \"size\",\n      },\n      {\n        Header: \"Expected Yield\",\n        accessor: \"ex_yield\",\n      },\n    ],\n    []\n  );\n\n  const tableData = useMemo(\n    () => dashboardData.lots || [],\n    [dashboardData.lots]\n  );\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getDashboardDetails());\n    dispatch(getCropProfiles());\n  }, [dispatch]);\n\n  return (\n    <section>\n      <nav id=\"quick-nav\">\n        <span>Dashboard</span>\n      </nav>\n\n      <Stack\n        direction=\"row\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        sx={{\n          flexWrap: {\n            xs: \"wrap\",\n            md: \"no-wrap\",\n          },\n        }}\n      >\n        <CustomSelect\n          noneLabel={<em>Select Crop</em>}\n          options={crops.map((item) => ({\n            name: item.crop_name,\n            value: item.id,\n          }))}\n          sx={{\n            backgroundColor: \"#fff\",\n            outline: \"none\",\n            \"& *\": {\n              outline: \"none\",\n              border: \"none\",\n            },\n            \"& .MuiSelect-select\": {\n              p: \"10px 15px\",\n            },\n          }}\n        />\n\n        <Stack direction=\"row\" spacing={2} sx={{ my: 2 }}>\n          <Button\n            href=\"/dashboard/farm-analysis\"\n            value=\"Farm Analysis\"\n            disableElevation\n          />\n          <Button\n            href=\"/dashboard/farm-activities\"\n            value=\"Farm Activities\"\n            disableElevation\n          />\n          <Button\n            href=\"/dashboard/agent-activities\"\n            value=\"Agent Activities\"\n            disableElevation\n          />\n        </Stack>\n      </Stack>\n\n      <h2 style={{ fontSize: \"20px\" }}>Activities Map</h2>\n\n      <Box>\n        <img src={require(\"../../assets/map.jpg\")} width=\"100%\" alt=\"Hello\" />\n      </Box>\n\n      <Stack\n        direction=\"row\"\n        alignItems=\"stretch\"\n        spacing={3}\n        sx={{\n          mt: 6,\n          mb: 6,\n          overflowX: \"auto\",\n          flexWrap: {\n            xs: \"wrap\",\n            md: \"nowrap\",\n          },\n        }}\n      >\n        <Card sx={cardStyles}>\n          <CardContent sx={{ color: \"white\" }}>\n            <Typography\n              sx={{ fontSize: 18, fontWeight: 700 }}\n              color=\"inherit\"\n              gutterBottom\n            >\n              Total Expected Yield (MT)\n            </Typography>\n            <Typography\n              variant=\"h5\"\n              component=\"div\"\n              sx={{ color: \"inherit\", fontSize: 24, fontWeight: 800 }}\n            >\n              {isLoading ? <Spinner size={20} /> : dashboardData.total_yield}\n            </Typography>\n          </CardContent>\n        </Card>\n\n        <Card sx={cardStyles}>\n          <CardContent sx={{ color: \"white\" }}>\n            <Typography\n              sx={{ fontSize: 18, fontWeight: 700 }}\n              color=\"inherit\"\n              gutterBottom\n            >\n              Total Acreage (HA)\n            </Typography>\n            <Typography\n              variant=\"h5\"\n              component=\"div\"\n              sx={{ color: \"inherit\", fontSize: 24, fontWeight: 800 }}\n            >\n              {isLoading ? <Spinner size={20} /> : dashboardData.total_acreage}\n            </Typography>\n          </CardContent>\n        </Card>\n\n        <Card sx={cardStyles}>\n          <CardContent sx={{ color: \"white\" }}>\n            <Typography\n              sx={{ fontSize: 18, fontWeight: 700 }}\n              color=\"inherit\"\n              gutterBottom\n            >\n              Total Number of Farmers\n            </Typography>\n            <Typography\n              variant=\"h5\"\n              component=\"div\"\n              sx={{ color: \"inherit\", fontSize: 24, fontWeight: 800 }}\n            >\n              {isLoading ? (\n                <Spinner size={20} />\n              ) : (\n                dashboardData.number_of_farmers\n              )}\n            </Typography>\n          </CardContent>\n        </Card>\n      </Stack>\n\n      <Stack\n        direction=\"row\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        <h2 className=\"with-spinner\" style={{ fontSize: \"20px\" }}>\n          <span>Expected Yield / Farm</span>\n          {isLoading ? <Spinner size={20} color=\"primary\" /> : \"\"}\n        </h2>\n\n        <TableControls\n          nextHandler={() => setNext()}\n          prevHandler={() => setPrev()}\n          limitHandler={(e) => handleLimitChange(e)}\n          totalRecords={dashboardData.lots?.length || 0}\n          page={page}\n          limit={limit}\n          showLimit={false}\n          hideOnMobile={true}\n        />\n      </Stack>\n\n      <Box>\n        <Table columns={columns} data={tableData} isLoading={isLoading} />\n        <TableControls\n          nextHandler={() => setNext()}\n          prevHandler={() => setPrev()}\n          limitHandler={(e) => handleLimitChange(e)}\n          totalRecords={dashboardData.lots?.length || 0}\n          limit={limit}\n          page={page}\n        />\n      </Box>\n\n      {/* <Button onClick={handler} value=\"sfssdf\" disableElevation /> */}\n    </section>\n  );\n}\n","import axiosServices from '../../services/axiosServices';\nimport { errorHandler } from \"../../utils/actionsErrorHandler\";\n\nimport {\n  GET_DASHBOARD_DETAILS,\n  DASHBOARD_DETAILS_FAIL,\n  DASHBOARD_DETAILS_SUCCESS,\n  // DASHBOARD_DETAILS_LOADING\n} from '../types/DashboardTypes';\n\nexport const getDashboardDetails = () => async (dispatch) => {\n  try {\n    dispatch({\n      type: GET_DASHBOARD_DETAILS,\n    });\n\n    const dashboardDetails = await axiosServices.get(\"/dashboard\");\n    // console.log(dashboardDetails);\n    if (dashboardDetails) {\n      dispatch({\n        type: DASHBOARD_DETAILS_SUCCESS,\n        payload: {\n          dashboardData: dashboardDetails\n        }\n      });\n    }\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: DASHBOARD_DETAILS_FAIL\n    });\n    errorHandler(error, 'Error in fetching dashboard details');\n    return error;\n  }\n}","import axiosServices from '../../services/axiosServices';\nimport { notify } from \"../../utils/toastNotification\";\nimport { errorHandler } from \"../../utils/actionsErrorHandler\";\nimport { createQuery } from \"../../utils/createQuery\";\n\nimport {\n  GET_CROP_CALENDAR,\n  GET_CROP_CALENDAR_SUCCESS,\n  GET_CROP_CALENDAR_FAIL,\n  GET_CROP_PROFILE,\n  GET_CROP_PROFILE_SUCCESS,\n  GET_CROP_PROFILE_FAIL,\n  GET_FARM_SEASONS,\n  GET_FARM_SEASONS_SUCCESS,\n  GET_FARM_SEASONS_FAIL,\n  GET_ACTIVITY_CATEGORIES,\n  GET_ACTIVITY_CATEGORIES_SUCCESS,\n  GET_ACTIVITY_CATEGORIES_FAIL\n} from '../types/ConfigurationsTypes';\n\nexport const addCropProfile = (data) => async (dispatch) => {\n  try {\n    // dispatch({\n    //   type: GET_CROP_PROFILE,\n    // });\n\n    const response = await axiosServices.post(\"/config/crop-profile\", data);\n    // console.log(cropProfiles);\n    if (response) {\n      notify(\"Crop profile created\", { type: \"success\" });\n      dispatch(getCropProfiles());\n    } else {\n      notify(\"Failed\", { type: \"error\" });\n    }\n  } catch (error) {\n    // console.log(error);\n    errorHandler(error);\n    return error;\n  }\n}\n\nexport const updateCropProfile = (data) => async (dispatch) => {\n  try {\n    // dispatch({\n    //   type: GET_CROP_PROFILE,\n    // });\n\n    const response = await axiosServices.put(\"/config/crop-profile\", data);\n    // console.log(cropProfiles);\n    if (response) {\n      notify(\"Crop profile updated\", { type: \"success\" });\n      dispatch(getCropProfiles());\n    } else {\n      notify(\"Failed to update\", { type: \"error\" });\n    }\n  } catch (error) {\n    // console.log(error);\n    errorHandler(error);\n    return error;\n  }\n}\n\nexport const getCropProfiles = (queryParams = {}) => async (dispatch) => {\n  try {\n    dispatch({\n      type: GET_CROP_PROFILE,\n    });\n\n    const queryString = createQuery(queryParams);\n    const cropProfiles = await axiosServices.get(`/dashboard/crop-profiles${queryString}`);\n    // console.log(cropProfiles);\n\n    if (cropProfiles) {\n      dispatch({\n        type: GET_CROP_PROFILE_SUCCESS,\n        payload: cropProfiles\n      });\n    }\n  } catch (error) {\n    // console.log(error);\n    dispatch({\n      type: GET_CROP_PROFILE_FAIL\n    });\n    errorHandler(error);\n    return error;\n  }\n}\n\nexport const deleteCropProfile = (cropProfileId) => async (dispatch) => {\n  try {\n    // console.log(cropProfileId);\n    const response = await axiosServices.delete(`/config/crop-profile/${cropProfileId}`);\n\n    if (response && response.success) {\n      notify(\"Crop profile deleted\", { type: \"success\" });\n      dispatch(getCropProfiles());\n    } else {\n      notify(\"Failed to delete\", { type: \"error\" });\n    }\n  } catch (error) {\n    // console.log(error);\n    errorHandler(error);\n    return error;\n  }\n}\n\nexport const addNewCategory = (data) => async (dispatch) => {\n  try {\n    // dispatch({\n    //   type: GET_CROP_PROFILE,\n    // });\n\n    const response = await axiosServices.post(\"/config/category\", data);\n    // console.log(cropProfiles);\n    if (response) {\n      notify(\"Crop Category created\", { type: \"success\" });\n    } else {\n      notify(\"Failed\", { type: \"error\" });\n    }\n  } catch (error) {\n    // console.log(error);\n    errorHandler(error);\n    return error;\n  }\n}\n\nexport const getCropCalendar = (queryParams = {}) => async (dispatch) => {\n  try {\n    dispatch({\n      type: GET_CROP_CALENDAR,\n    });\n\n    const queryString = createQuery(queryParams);\n    const response = await axiosServices.get(`/config/activities/tasks${queryString}`);\n    // console.log(response);\n    const success = response.success;\n    const data = response.result?.data;\n\n    if (success && data) {\n      // console.log(data);\n      dispatch({\n        type: GET_CROP_CALENDAR_SUCCESS,\n        payload: data\n      });\n    } else {\n      dispatch({\n        type: GET_CROP_CALENDAR_FAIL\n      });\n      notify(response.message || 'An error occured', { type: \"error\" });\n    }\n  } catch (error) {\n    // console.log(error);\n    dispatch({\n      type: GET_CROP_CALENDAR_FAIL\n    });\n    errorHandler(error);\n    return error;\n  }\n}\n\nexport const addNewTask = (data) => async (dispatch) => {\n  try {\n    const response = await axiosServices.post(\"/config/task\", data);\n    // console.log(response);\n    if (response) {\n      notify(\"Task created\", { type: \"success\" });\n      dispatch(getCropCalendar());\n    } else {\n      notify(response.message || 'An error occured', { type: \"error\" });\n    }\n  } catch (error) {\n    // console.log(error);\n    errorHandler(error);\n    return error;\n  }\n}\n\nexport const deleteTask = (payload) => async (dispatch) => {\n  try {\n    const response = await axiosServices.delete(\"/config/task\", {\n      data: payload\n    });\n    // console.log(response);\n\n    if (response.success) {\n      notify('Task deleted successfully', { type: \"success\" });\n      dispatch(getCropCalendar());\n    } else {\n      notify(response.message || 'An error occured', { type: \"error\" });\n    }\n  } catch (error) {\n    errorHandler(error);\n    return error;\n  }\n}\n\nexport const getFarmSeassons = (queryParams = {}) => async (dispatch) => {\n  try {\n    dispatch({\n      type: GET_FARM_SEASONS,\n    });\n\n    const queryString = createQuery(queryParams);\n    const response = await axiosServices.get(`/config/seasons${queryString}`);\n    // console.log(response);\n    const success = response.success;\n    const data = response.result?.data?.data;\n\n    if (success && data) {\n      dispatch({\n        type: GET_FARM_SEASONS_SUCCESS,\n        payload: {\n          data,\n          total: response.result?.data?.total\n        }\n      });\n    } else {\n      dispatch({\n        type: GET_FARM_SEASONS_FAIL\n      });\n      notify(response.message || 'An error occured', { type: \"error\" });\n    }\n  } catch (error) {\n    // console.log(error);\n    dispatch({\n      type: GET_FARM_SEASONS_FAIL\n    });\n    errorHandler(error);\n    return error;\n  }\n}\n\nexport const addNewSeason = (data) => async (dispatch) => {\n  try {\n    const response = await axiosServices.post(\"/config/season\", data);\n    // console.log(response);\n    if (response) {\n      notify(\"Season created\", { type: \"success\" });\n      dispatch(getFarmSeassons());\n    } else {\n      notify(response.message || 'An error occured', { type: \"error\" });\n    }\n  } catch (error) {\n    errorHandler(error);\n    return error;\n  }\n}\n\nexport const toggleSeason = (data) => async (dispatch) => {\n  try {\n    const response = await axiosServices.put(\"/config/season\", data);\n    // console.log(response);\n    if (response) {\n      notify(\"Season updated successfully\", { type: \"success\" });\n      dispatch(getFarmSeassons());\n    } else {\n      notify(response.message || 'An error occured', { type: \"error\" });\n    }\n  } catch (error) {\n    errorHandler(error);\n    return error;\n  }\n}\n\nexport const getActivityCategories = (queryParams = {}) => async (dispatch) => {\n  try {\n    dispatch({\n      type: GET_ACTIVITY_CATEGORIES,\n    });\n\n    const queryString = createQuery(queryParams);\n    const response = await axiosServices.get(`/config/categories${queryString}`);\n    // console.log(response);\n    const success = response.success;\n    const data = response.result?.data;\n\n    if (success && data) {\n      dispatch({\n        type: GET_ACTIVITY_CATEGORIES_SUCCESS,\n        payload: {\n          data,\n          total: data?.length || 0\n        }\n      });\n    } else {\n      dispatch({\n        type: GET_ACTIVITY_CATEGORIES_FAIL\n      });\n      notify(response.message || 'An error occured', { type: \"error\" });\n    }\n  } catch (error) {\n    // console.log(error);\n    dispatch({\n      type: GET_ACTIVITY_CATEGORIES_FAIL\n    });\n    errorHandler(error);\n    return error;\n  }\n}"],"names":["nextHandler","prevHandler","limitHandler","page","totalRecords","limit","showLimit","hideOnMobile","totalPages","Math","ceil","className","onChange","value","disabled","onClick","CustomSelect","props","iconStyle","e","noneLabel","options","iconType","sx","rest","backgroundColor","useState","selectValue","setSelectValue","fill","height","width","iconwidth","top","right","borderRadius","minWidth","event","target","displayEmpty","inputProps","overflow","boxShadow","disableshadow","border","map","option","index","selected","name","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","Paper","overridesResolver","styles","root","React","inProps","ref","useThemeProps","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","clsx","elevation","undefined","getCardContentUtilityClass","CardContentRoot","padding","paddingBottom","component","as","DashboardIndexSection","setPage","setLimit","dashboardData","useSelector","state","DashboardReducer","isLoading","loading","crops","ConfigReducer","cropProfiles","data","handleLimitChange","parseInt","setPrev","setNext","cardStyles","flexGrow","marginTop","marginBottom","p","columns","useMemo","Header","accessor","tableData","lots","dispatch","useDispatch","useEffect","type","GET_DASHBOARD_DETAILS","axiosServices","dashboardDetails","DASHBOARD_DETAILS_SUCCESS","payload","console","log","DASHBOARD_DETAILS_FAIL","errorHandler","getCropProfiles","id","Stack","direction","justifyContent","alignItems","flexWrap","xs","md","item","crop_name","outline","spacing","my","Button","href","disableElevation","style","fontSize","Box","src","require","alt","mt","mb","overflowX","color","Typography","fontWeight","gutterBottom","variant","Spinner","size","total_yield","total_acreage","number_of_farmers","TableControls","length","addCropProfile","notify","updateCropProfile","queryParams","GET_CROP_PROFILE","queryString","createQuery","GET_CROP_PROFILE_SUCCESS","GET_CROP_PROFILE_FAIL","deleteCropProfile","cropProfileId","response","success","addNewCategory","getCropCalendar","GET_CROP_CALENDAR","result","GET_CROP_CALENDAR_SUCCESS","GET_CROP_CALENDAR_FAIL","message","addNewTask","deleteTask","getFarmSeassons","GET_FARM_SEASONS","GET_FARM_SEASONS_SUCCESS","total","GET_FARM_SEASONS_FAIL","addNewSeason","toggleSeason","getActivityCategories","GET_ACTIVITY_CATEGORIES","GET_ACTIVITY_CATEGORIES_SUCCESS","GET_ACTIVITY_CATEGORIES_FAIL"],"sourceRoot":""}