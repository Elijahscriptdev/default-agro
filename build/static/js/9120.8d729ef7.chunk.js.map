{"version":3,"file":"static/js/9120.8d729ef7.chunk.js","mappings":"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","sources":["components/Table/TableControls.jsx","components/common/StatusIndicator.jsx","layouts/userManagement/Exports.jsx","utils/convertJSONToFormData.js","redux/actions/UserManagementActions.js"],"sourcesContent":["import React from \"react\";\n\nimport { IoIosArrowBack, IoIosArrowForward } from \"react-icons/io\";\n\nconst TableActions = ({\n  nextHandler,\n  prevHandler,\n  limitHandler,\n  page,\n  totalRecords = 0,\n  limit = 1,\n  showLimit = true,\n  hideOnMobile = false\n}) => {\n  const totalPages = Math.ceil(totalRecords / limit);\n  return (\n    <div className={`flex justify-end table-controls ${hideOnMobile ? 'hide-on-mobile' : ''} `}>\n      {!showLimit || showLimit === \"false\" || showLimit === false ? null : (\n        <div className=\"filter-input mr-5\">\n          <label>Rows per page: </label>\n          <select onChange={limitHandler}>\n            <option value=\"15\">15</option>\n            <option value=\"25\">25</option>\n            <option value=\"50\">50</option>\n            <option value=\"100\">100</option>\n          </select>\n        </div>\n      )}\n\n      <div className=\"flex text-green-500\">\n        <p className=\"px-4\">\n          Viewing {((page - 1) * limit) + 1} -{\" \"}\n          {limit * page > totalRecords ? totalRecords : limit * page} of{\" \"}\n          {totalRecords}\n        </p>\n        <button disabled={page <= 1} onClick={prevHandler}>\n          <IoIosArrowBack />\n        </button>\n        <button disabled={page >= totalPages} onClick={nextHandler}>\n          <IoIosArrowForward />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default TableActions;\n","import React from \"react\";\n\nconst Status = (props) => {\n  const { value, type = \"pending\" } = props;\n\n  const wrapperStyle = {\n    boxSizing: \"border-box\",\n    width: \"auto\",\n    height: \"26px\",\n    padding: \"8px\",\n    borderRadius: \"13px\",\n    borderWidth: \"0.6px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  };\n\n  const textStyle = {\n    fontSize: \"12px\",\n    fontWeight: 600,\n    display: \"block\",\n  };\n\n  switch (type) {\n    case \"success\":\n      wrapperStyle.backgroundColor = \"#F6FFED\";\n      wrapperStyle.borderColor = \"#B7EB8F\";\n      textStyle.color = \"#52C41A\";\n      break;\n\n    case \"pending\":\n      wrapperStyle.backgroundColor = \"#FFF7E6\";\n      wrapperStyle.borderColor = \"#FA8C16\";\n      textStyle.color = \"#FA8C16\";\n      break;\n\n    case \"error\":\n      wrapperStyle.backgroundColor = \"#FFF1F0\";\n      wrapperStyle.borderColor = \"#F5222D\";\n      textStyle.color = \"#F5222D\";\n      break;\n\n    default:\n      wrapperStyle.backgroundColor = \"#FFF1F0\";\n      wrapperStyle.borderColor = \"#F5222D\";\n      textStyle.color = \"#F5222D\";\n      break;\n  }\n  return (\n    <div style={wrapperStyle}>\n      <span style={textStyle}>{value}</span>\n    </div>\n  );\n};\n\nexport default Status;\n\n// \"#FFF1F0\"\n// borderColor\n// \"#F5222D\"\n","import React, { useState, useEffect, useMemo, useCallback } from \"react\";\nimport { BiEditAlt as EditIcon } from \"react-icons/bi\";\nimport { useSelector } from \"react-redux\";\nimport moment from \"moment\";\n\nimport Stack from \"@mui/material/Stack\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\n\nimport Table from \"../../components/Table/UserTable\";\nimport TableControls from \"../../components/Table/TableControls\";\nimport StatusIndicator from \"../../components/common/StatusIndicator\";\nimport BreadCrumb from \"../../components/common/CustomBreadCrumbs\";\n// import Dialog from \"../../components/Modals/Dialog\";\n\nimport { getFarmerExports } from \"../../redux/actions/UserManagementActions\";\nimport Can from \"../../utils/rbac/Can\";\nimport { Tooltip } from \"@mui/material\";\nimport Spinner from \"../../components/Spinner\";\n\nfunction Exports() {\n  // const dispatch = useDispatch();\n  const [exportData, setExportData] = useState([]);\n  const [page, setPage] = useState(1);\n  const [limit, setLimit] = useState(15);\n\n  // const [dialogContent, setDialogContent] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const authenticatedUser = useSelector(\n    (state) =>\n      state.AuthReducer.userProfile ||\n      JSON.parse(sessionStorage.getItem(\"user_profile\"))\n  );\n\n  // onChange function for select\n  const handleLimitChange = (e) => {\n    setLimit(parseInt(e.target.value));\n  };\n\n  const setPrev = () => {\n    if (page > 1) setPage(page - 1);\n  };\n\n  const setNext = () => {\n    setPage(page + 1);\n  };\n\n  // const handleModalClose = () => {\n  //   setShowModal(false);\n  // };\n\n  const fetchTableData = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      const response = await getFarmerExports({ page, limit });\n      console.log(response);\n      setExportData(response?.data || []);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [limit, page]);\n\n  useEffect(() => {\n    fetchTableData();\n  }, [fetchTableData]);\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"Name\",\n        accessor: \"name\",\n      },\n      {\n        Header: \"Status\",\n        Cell: ({ value, row }) => {\n          const { original } = row;\n          // console.log(original);\n          const selectIndicator = (data) => {\n            switch (true) {\n              case data.status === \"Completed\":\n                return {\n                  value: data.status,\n                  type: \"success\",\n                };\n\n              case data.status === \"Failed\":\n                return {\n                  value: data.status,\n                  type: \"error\",\n                };\n\n              case data.status === \"Pending\":\n                return {\n                  value: data.status,\n                  type: \"pending\",\n                };\n\n              default:\n                return null;\n            }\n          };\n          // console.log(original);\n          const indicatorProps = selectIndicator(original);\n          return !indicatorProps ? (\n            <span>{original.status}</span>\n          ) : (\n            <StatusIndicator {...indicatorProps} />\n          );\n        },\n      },\n      {\n        Header: \"Date Created\",\n        accessor: \"date_created\",\n        Cell: ({ value, row }) => {\n          const { original } = row;\n          // console.log(original);\n          return (\n            <Stack direction=\"column\" spacing={0.2}>\n              <span>{moment(original.date_created).format(\"YYYY-MM-DD\")}</span>\n              <Typography\n                variant=\"span\"\n                fontSize=\"12px\"\n                sx={{ color: (theme) => theme.palette.primary.main }}\n              >\n                {moment(original.date_created).format(\"HH:mm:ss\")}\n              </Typography>\n            </Stack>\n          );\n        },\n      },\n      {\n        Header: \"Download KYF\",\n        Cell: ({ value, row }) => {\n          const { original } = row;\n          // console.log(original);\n          return (\n            <Can\n              role={authenticatedUser?.my_role?.role}\n              perform=\"farmer:export:download-kyf\"\n              yes={() => (\n                <IconButton\n                  href={`/user-management/edit-farmer/${original.id}`}\n                >\n                  <EditIcon />\n                </IconButton>\n              )}\n              no={() => (\n                <Tooltip\n                  title={`${authenticatedUser?.my_role?.role} cannot perform this action`}\n                >\n                  <IconButton disabled={true}>\n                    <EditIcon />\n                  </IconButton>\n                </Tooltip>\n              )}\n            />\n          );\n        },\n      },\n      {\n        Header: \"Download Coordinates\",\n        Cell: ({ value, row }) => {\n          const { original } = row;\n          // console.log(original);\n          return (\n            <Can\n              role={authenticatedUser?.my_role?.role}\n              perform=\"farmer:export:download-coordinates\"\n              yes={() => (\n                <IconButton\n                  href={`/user-management/edit-farmer/${original.id}`}\n                >\n                  <EditIcon />\n                </IconButton>\n              )}\n              no={() => (\n                <Tooltip\n                  title={`${authenticatedUser?.my_role?.role} cannot perform this action`}\n                >\n                  <IconButton disabled={true}>\n                    <EditIcon />\n                  </IconButton>\n                </Tooltip>\n              )}\n            />\n          );\n        },\n      },\n    ],\n    [authenticatedUser?.my_role?.role]\n  );\n\n  const tableData = useMemo(() => exportData, [exportData]);\n  // const csvData = tableData;\n\n  return (\n    <React.Fragment>\n      <section>\n        <nav id=\"quick-nav\">\n          <BreadCrumb\n            breadcrumbs={[\n              <Typography key=\"1\" color=\"inherit\">\n                User Management\n              </Typography>,\n              <Typography key=\"2\" color=\"inherit\">\n                Manage Farmers\n              </Typography>,\n              <Typography key=\"3\" color=\"primary.main\">\n                Exports\n              </Typography>,\n            ]}\n          />\n        </nav>\n\n        <h2 className=\"with-spinner\" style={{ fontSize: \"20px\" }}>\n          <span>All Exports</span>\n          {isLoading ? <Spinner size={20} color=\"primary\" /> : \"\"}\n        </h2>\n\n        <Box>\n          <Table columns={columns} data={tableData} isLoading={isLoading} />\n          <TableControls\n            nextHandler={() => setNext()}\n            prevHandler={() => setPrev()}\n            limitHandler={(e) => handleLimitChange(e)}\n            totalRecords={exportData.length}\n            page={page}\n            limit={limit}\n          />\n        </Box>\n      </section>\n\n      {/* <Dialog\n        open={showModal}\n        closeHandler={handleModalClose}\n        PaperProps={{ sx: { maxWidth: \"unset\" } }}\n      >\n        {dialogContent}\n      </Dialog> */}\n    </React.Fragment>\n  );\n}\n\nexport default Exports;\n","export function convertToFormData(body = {}) {\n  const bodyFormData = new FormData();\n  if (Object.keys(body).length > 0) {\n    console.log({ body });\n    Object.keys(body).forEach((key) => {\n      bodyFormData.append(key, body[key]);\n    });\n  }\n  return bodyFormData;\n}","import axiosServices, { useAxiosService } from \"../../services/axiosServices\";\nimport { notify } from \"../../utils/toastNotification\";\nimport { errorHandler } from \"../../utils/actionsErrorHandler\";\nimport { createQuery } from \"../../utils/createQuery\";\nimport { convertToFormData } from \"../../utils/convertJSONToFormData\";\nimport {\n  GET_USERS_SUCCESS,\n  GET_USERS_FAIL,\n  ADD_USER_SUCCESS,\n  ADD_USER_FAIL,\n  LOADING_USERS,\n  GET_FARMERS_SUCCESS,\n  GET_FARMER_FAIL,\n  ADD_FARMER_SUCCESS,\n  ADD_FARMER_FAIL,\n  LOADING_FARMER,\n  GET_SOURCING_AGENTS_SUCCESS,\n  GET_SOURCING_AGENTS_FAIL,\n  ADD_SOURCING_AGENT_SUCCESS,\n  ADD_SOURCING_AGENT_FAIL,\n  LOADING_SOURCING_AGENTS,\n} from \"../types/UserManagementTypes\";\n\nexport const getUsers =\n  (queryParams = {}) =>\n  async (dispatch) => {\n    let page = queryParams.page || 1;\n    let limit = queryParams.limit || 10;\n    let query = createQuery(queryParams);\n    dispatch({ type: LOADING_USERS });\n    queryParams = createQuery(queryParams);\n    try {\n      const res = await axiosServices.get(\n        `/viewusers?page=${page}&limit=${limit}&query=${query}`\n      );\n      dispatch({\n        type: GET_USERS_SUCCESS,\n        payload: res,\n      });\n      // console.log(\"first data\", res?.data);\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: GET_USERS_FAIL,\n      });\n      errorHandler(error, \"Failed to fetch users\");\n      return error;\n    }\n  };\n\nexport const addUser = (data) => async (dispatch) => {\n  // dispatch({ type: LOADING_USERS, payload: true });\n  try {\n    const res = await axiosServices.post(`/users`, data);\n\n    if (res?.success && res?.result) {\n      notify(\"User added successfully\", { type: \"success\" });\n      dispatch({\n        type: ADD_USER_SUCCESS,\n        payload: res.result,\n      });\n      return res;\n      // dispatch(getUsers({ page: 1 }));\n    }\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: ADD_USER_FAIL,\n    });\n    errorHandler(error, \"Failed to add user\");\n    return error;\n  }\n};\n\nexport const bulkUploadUsers = (data) => async (dispatch) => {\n  try {\n    data = convertToFormData(data);\n\n    const res = await useAxiosService(\"formData\").post(\n      `/users/bulk-upload`,\n      data,\n      {}\n    );\n\n    // console.log(res);\n\n    if (res?.success && res?.result) {\n      notify(\"Users uploaded successfully\", { type: \"success\" });\n      dispatch(getUsers({ page: 1 }));\n    }\n  } catch (error) {\n    console.log(error);\n    errorHandler(error, \"Failed to upload users\");\n    return error;\n  }\n};\n\nexport const updateUser = (userId, data) => async (dispatch) => {\n  // dispatch({ type: LOADING_USERS, payload: true });\n  try {\n    const res = await axiosServices.patch(`/users/${userId}`, data);\n\n    if (res?.success && res?.result) {\n      notify(\"User Updated successfully\", { type: \"success\" });\n      return res;\n    }\n  } catch (error) {\n    console.log(error);\n    errorHandler(error, \"Failed to update user\");\n    return error;\n  }\n};\n\nexport const deleteUser = (userId) => async (dispatch) => {\n  try {\n    const res = await axiosServices.delete(`/users/${userId}`);\n    if (res) {\n      notify(\"User deleted successfully\", { type: \"success\" });\n      dispatch(getUsers({ page: 1 }));\n    }\n  } catch (error) {\n    console.log(error);\n    errorHandler(error, \"Failed to delete user\");\n    return error;\n  }\n};\n\nexport const getFarmers =\n  (queryParams = {}) =>\n  async (dispatch) => {\n    dispatch({ type: LOADING_FARMER });\n    queryParams = createQuery(queryParams);\n    // console.log(queryParams);\n    try {\n      const res = await axiosServices.get(`/farmers${queryParams}`);\n\n      if (res?.success && res?.result) {\n        dispatch({\n          type: GET_FARMERS_SUCCESS,\n          payload: res?.result?.data,\n        });\n      } else {\n        dispatch({\n          type: GET_FARMER_FAIL,\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: GET_FARMER_FAIL,\n      });\n      errorHandler(error);\n      return error;\n    }\n  };\n\nexport const getSingleFarmer = async (farmerId) => {\n  try {\n    const res = await axiosServices.get(`/farmers/${farmerId}`);\n    return res?.result;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n};\n\nexport const addFarmer = (data) => async (dispatch) => {\n  try {\n    const res = await axiosServices.post(`/farmers`, data);\n\n    if (res?.success && res?.result) {\n      notify(\"Farmer added successfully\", { type: \"success\" });\n      dispatch({\n        type: ADD_FARMER_SUCCESS,\n        payload: res.result,\n      });\n      dispatch(getFarmers({ page: 1 }));\n    }\n    return res;\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: ADD_FARMER_FAIL,\n    });\n    errorHandler(error, \"Failed to add farmer\");\n    return error;\n  }\n};\n\nexport const updateFarmer = (farmerId, data) => async (dispatch) => {\n  try {\n    const res = await axiosServices.patch(`/farmers/${farmerId}`, data);\n\n    if (res?.success && res?.result) {\n      notify(\"Farmer updated successfully\", { type: \"success\" });\n    }\n    return res;\n  } catch (error) {\n    console.log(error);\n    errorHandler(error, \"Failed to update farmer\");\n    return error;\n  }\n};\n\nexport const bulkUploadFarmers = (data) => async (dispatch) => {\n  try {\n    data = convertToFormData(data);\n    const res = await useAxiosService(\"formData\")({\n      method: \"post\",\n      url: `/farmers/bulk-upload`,\n      data,\n    });\n\n    if (res?.success && res?.result) {\n      notify(\"Farmers uploaded successfully\", { type: \"success\" });\n      dispatch(getFarmers({ page: 1 }));\n    }\n  } catch (error) {\n    console.log(error);\n    errorHandler(error, \"Failed to add farmer\");\n    return error;\n  }\n};\n\n//\nexport const exportFarmerData = (data, navigate) => async (dispatch) => {\n  try {\n    const res = await axiosServices.post(\n      `/farmers/downloads/process-farmer-details`,\n      data\n    );\n\n    if (res?.success && res?.result) {\n      notify(\"Farmers exported successfully\", { type: \"success\" });\n      navigate(\"/user-management/farmers/exports\");\n    }\n  } catch (error) {\n    console.log(error);\n    errorHandler(error, \"Failed to export farmers\");\n    return error;\n  }\n};\n\nexport const getFarmerExports = async () => {\n  try {\n    const res = await axiosServices.get(`/farmers/downloads`);\n\n    if (res?.success && res?.result) {\n      return res?.result?.data;\n    }\n\n    return res;\n  } catch (error) {\n    console.log(error);\n    errorHandler(error, \"Failed to fetch exports\");\n    return error;\n  }\n};\n\nexport const downloadFarmerTemplate = (data) => async (dispatch) => {\n  try {\n    const res = await axiosServices.get(`/templates/farmers`);\n\n    if (res?.success && res?.result) {\n    } else {\n      dispatch({\n        type: GET_FARMER_FAIL,\n      });\n    }\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: GET_FARMER_FAIL,\n    });\n    errorHandler(error);\n    return error;\n  }\n};\n\n// SOURCING AGENTS\nexport const getSourcingAgents =\n  (queryParams = {}) =>\n  async (dispatch) => {\n    dispatch({ type: LOADING_SOURCING_AGENTS });\n    queryParams = createQuery(queryParams);\n    try {\n      const res = await axiosServices.get(`/sourcing-partners${queryParams}`);\n      dispatch({\n        type: GET_SOURCING_AGENTS_SUCCESS,\n        payload: res?.result?.sourcing_partners,\n      });\n\n      // console.log(\"first\", res?.result?.data);\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: GET_SOURCING_AGENTS_FAIL,\n      });\n      errorHandler(error, \"Failed to fetch sourcing agents\");\n      return error;\n    }\n  };\n\nexport const addSourcingAgent = (data) => async (dispatch) => {\n  // dispatch({ type: LOADING_SOURCING_AGENTS, payload: true });\n  try {\n    const res = await axiosServices.post(`/sourcing-partners`, data);\n    console.log(res);\n    if (res?.success && res?.result) {\n      notify(\"Sourcing agent added successfully\", { type: \"success\" });\n      dispatch({\n        type: ADD_SOURCING_AGENT_SUCCESS,\n        payload: res.result,\n      });\n      // dispatch(getUsers({ page: 1 }));\n    }\n    return res;\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: ADD_SOURCING_AGENT_FAIL,\n    });\n    errorHandler(error, \"Failed to add sourcing agent\");\n    return error;\n  }\n};\n\nexport const updateSourcingAgent = (userId, data) => async (dispatch) => {\n  // dispatch({ type: LOADING_SOURCING_AGENTS, payload: true });\n  try {\n    const res = await axiosServices.patch(`/users/${userId}`, data);\n\n    if (res?.success && res?.result) {\n      notify(\"Sourcing agent updated successfully\", { type: \"success\" });\n      // dispatch(getUsers({ page: 1 }));\n    }\n  } catch (error) {\n    console.log(error);\n    errorHandler(error, \"Failed to update sourcing agent\");\n    return error;\n  }\n};\n\nexport const deleteSourcingAgent = (userId) => async (dispatch) => {\n  try {\n    const res = await axiosServices.delete(`/sourcing-partners/${userId}`);\n    if (res) {\n      notify(\"Sourcing agent deleted successfully\", { type: \"success\" });\n      dispatch(getSourcingAgents({ page: 1 }));\n    }\n  } catch (error) {\n    console.log(error);\n    errorHandler(error, \"Failed to delete sourcing agent\");\n    return error;\n  }\n};\n"],"names":["nextHandler","prevHandler","limitHandler","page","totalRecords","limit","showLimit","hideOnMobile","totalPages","Math","ceil","className","onChange","value","disabled","onClick","props","type","wrapperStyle","boxSizing","width","height","padding","borderRadius","borderWidth","display","justifyContent","alignItems","textStyle","fontSize","fontWeight","backgroundColor","borderColor","color","style","useState","exportData","setExportData","setPage","setLimit","isLoading","setIsLoading","authenticatedUser","useSelector","state","AuthReducer","userProfile","JSON","parse","sessionStorage","getItem","fetchTableData","useCallback","getFarmerExports","response","console","log","data","useEffect","columns","useMemo","Header","accessor","Cell","original","row","indicatorProps","status","selectIndicator","direction","spacing","moment","date_created","format","variant","sx","theme","palette","primary","main","role","my_role","perform","yes","href","id","no","title","tableData","breadcrumbs","size","e","parseInt","target","handleLimitChange","length","convertToFormData","body","bodyFormData","FormData","Object","keys","forEach","key","append","getUsers","queryParams","dispatch","query","createQuery","LOADING_USERS","axiosServices","res","GET_USERS_SUCCESS","payload","GET_USERS_FAIL","errorHandler","addUser","success","result","notify","ADD_USER_SUCCESS","ADD_USER_FAIL","bulkUploadUsers","useAxiosService","post","updateUser","userId","deleteUser","getFarmers","LOADING_FARMER","GET_FARMERS_SUCCESS","GET_FARMER_FAIL","getSingleFarmer","farmerId","addFarmer","ADD_FARMER_SUCCESS","ADD_FARMER_FAIL","updateFarmer","bulkUploadFarmers","method","url","exportFarmerData","navigate","getSourcingAgents","LOADING_SOURCING_AGENTS","GET_SOURCING_AGENTS_SUCCESS","sourcing_partners","GET_SOURCING_AGENTS_FAIL","addSourcingAgent","ADD_SOURCING_AGENT_SUCCESS","ADD_SOURCING_AGENT_FAIL","deleteSourcingAgent"],"sourceRoot":""}