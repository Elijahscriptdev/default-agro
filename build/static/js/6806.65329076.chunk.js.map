{"version":3,"file":"static/js/6806.65329076.chunk.js","mappings":"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","sources":["layouts/userManagement/SourcingAgents.jsx"],"sourcesContent":["import React, {\n  useState,\n  useMemo,\n  useRef,\n  useCallback,\n  useEffect,\n} from \"react\";\n\nimport Stack from \"@mui/material/Stack\";\nimport Box from \"@mui/material/Box\";\nimport IconButton from \"@mui/material/IconButton\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport Typography from \"@mui/material/Typography\";\n\nimport { Search as SearchIcon } from \"../../components/icons/search\";\nimport { RiDeleteBinLine as DeleteIcon } from \"react-icons/ri\";\n\nimport Table from \"../../components/Table/UserTable\";\nimport TableControls from \"../../components/Table/TableControls\";\nimport Button from \"../../components/common/Button\";\nimport Dialog from \"../../components/Modals/Dialog\";\nimport BreadCrumb from \"../../components/common/CustomBreadCrumbs\";\nimport CustomSearchField from \"../../components/common/CustomSearchField\";\n\nimport {\n  // AddSourcingAgent as AddSourcingAgentModalContent,\n  DeleteSourcingAgent as DeleteSourcingAgentModalContent,\n} from \"./ModalContents\";\nimport { getSourcingAgents } from \"../../redux/actions/UserManagementActions\";\nimport { getStates } from \"../../redux/actions/AppActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Spinner from \"../../components/Spinner\";\n\n// const { notify } = require(\"../../utils/toastNotification\");\n\nfunction SourcingAgents() {\n  const dispatch = useDispatch();\n  const [page, setPage] = useState(1);\n  const [limit, setLimit] = useState(10);\n  const [query, setQuery] = useState(\"\");\n\n  const queryRef = useRef(null);\n\n  const [dialogContent, setDialogContent] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n\n  const sourcingAgents = useSelector(\n    (state) => state.UserManagementReducer.sourcingAgents\n  );\n  // const states = useSelector((state) => state.AppReducer.states);\n\n  // onChange function for select\n  const handleLimitChange = (e) => {\n    setLimit(parseInt(e.target.value));\n  };\n\n  const setPrev = () => {\n    if (page > 1) setPage(page - 1);\n  };\n\n  const setNext = () => {\n    setPage(page + 1);\n  };\n\n  const handleModalClose = () => {\n    setShowModal(false);\n  };\n\n  const handleModalOpen = useCallback(\n    (modalId, data = null) =>\n      (e) => {\n        switch (modalId) {\n          // case \"add-sourcing-agent\":\n          //   // console.log(data);\n          //   setDialogContent(\n          //     <AddSourcingAgentModalContent closeHandler={handleModalClose} />\n          //   );\n          //   break;\n\n          case \"delete-sourcing-agent\":\n            setDialogContent(\n              <DeleteSourcingAgentModalContent\n                closeHandler={handleModalClose}\n                data={data}\n              />\n            );\n            break;\n\n          default:\n            setDialogContent(null);\n            break;\n        }\n        setShowModal(true);\n      },\n    []\n  );\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"First Name\",\n        accessor: \"first_name\",\n      },\n      {\n        Header: \"Last Name\",\n        accessor: \"last_name\",\n      },\n      {\n        Header: \"Phone Number\",\n        accessor: \"mobile\",\n      },\n      {\n        Header: \"Account Number\",\n        accessor: \"account_no\",\n      },\n      {\n        Header: \"Bank Name\",\n        accessor: \"bank\",\n      },\n      {\n        Header: \"No of Farmers\",\n        accessor: \"farmers\",\n      },\n      {\n        Header: \"Delete\",\n        Cell: ({ value, row }) => {\n          const { original } = row;\n          // console.log(original);\n          return (\n            <IconButton\n              onClick={handleModalOpen(\"delete-sourcing-agent\", original)}\n            >\n              <DeleteIcon />\n            </IconButton>\n          );\n        },\n      },\n    ],\n    [handleModalOpen]\n  );\n  const tableData = useMemo(() => sourcingAgents?.data || [], [sourcingAgents]);\n\n  useEffect(() => {\n    const filters = { page, per_page: limit };\n\n    if (query && query.length > 1) {\n      filters.search_by_name = query;\n    }\n\n    dispatch(getSourcingAgents(filters));\n    dispatch(getStates({}));\n  }, [dispatch, page, limit, query]);\n\n  return (\n    <React.Fragment>\n      <section>\n        <nav id=\"quick-nav\">\n          <BreadCrumb\n            breadcrumbs={[\n              <Typography key=\"1\" color=\"inherit\">\n                User Management\n              </Typography>,\n              <Typography key=\"2\" color=\"primary.main\">\n                Manage Sourcing Agents\n              </Typography>,\n            ]}\n          />\n        </nav>\n\n        <Stack\n          direction=\"row\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n          sx={{\n            flexWrap: { xs: \"wrap\", md: \"nowrap\" },\n          }}\n        >\n          <CustomSearchField\n            InputProps={{\n              ref: queryRef,\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon fontSize=\"small\" />\n                </InputAdornment>\n              ),\n            }}\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            placeholder=\"Search customers\"\n            sx={{\n              width: \"100%\",\n              maxWidth: { sm: \"250px\" },\n            }}\n          />\n\n          <Stack\n            direction=\"row\"\n            spacing={2}\n            sx={{\n              mt: { xs: 2, md: 0 },\n              mb: { xs: 2, md: 0 },\n            }}\n          >\n            <Button\n              href=\"/user-management/add-sourcing-agent\"\n              value=\"Add New Sourcing Agent\"\n              disableElevation\n            />\n          </Stack>\n        </Stack>\n\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\n        <h2 className=\"with-spinner\" style={{ fontSize: \"20px\" }}>\n          <span>All Sourcing Agents</span>\n          {sourcingAgents.loading ? <Spinner size={20} color=\"primary\" /> : \"\"}\n        </h2>\n\n        <TableControls\n          showLimit=\"false\"\n          hideOnMobile=\"true\"\n          nextHandler={() => setNext()}\n          prevHandler={() => setPrev()}\n          limitHandler={(e) => handleLimitChange(e)}\n          totalRecords={sourcingAgents.total}\n          page={page}\n          limit={limit}\n        />\n        </Stack>\n        \n\n        \n        <Box>\n          <Table\n            columns={columns}\n            data={tableData}\n            isLoading={sourcingAgents.loading}\n          />\n          <TableControls\n            nextHandler={() => setNext()}\n            prevHandler={() => setPrev()}\n            limitHandler={(e) => handleLimitChange(e)}\n            totalRecords={sourcingAgents.total}\n            page={page}\n            limit={limit}\n          />\n        </Box>\n      </section>\n      <Dialog\n        open={showModal}\n        closeHandler={handleModalClose}\n        PaperProps={{ sx: { maxWidth: \"unset\" } }}\n      >\n        {dialogContent}\n      </Dialog>\n    </React.Fragment>\n  );\n}\n\nexport default SourcingAgents;\n"],"names":["dispatch","useDispatch","useState","page","setPage","limit","setLimit","query","setQuery","queryRef","useRef","dialogContent","setDialogContent","showModal","setShowModal","sourcingAgents","useSelector","state","UserManagementReducer","handleLimitChange","e","parseInt","target","value","setPrev","setNext","handleModalClose","handleModalOpen","useCallback","modalId","data","closeHandler","columns","useMemo","Header","accessor","Cell","original","row","onClick","tableData","useEffect","filters","per_page","length","search_by_name","getSourcingAgents","getStates","id","breadcrumbs","color","direction","justifyContent","alignItems","sx","flexWrap","xs","md","InputProps","ref","startAdornment","position","fontSize","onChange","placeholder","width","maxWidth","sm","spacing","mt","mb","href","disableElevation","className","style","loading","size","showLimit","hideOnMobile","nextHandler","prevHandler","limitHandler","totalRecords","total","isLoading","open","PaperProps"],"sourceRoot":""}